GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      03/01/22 18:31:37 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  ** new matrix, for max recycled content in bags
   2   
   3  sets
   4          i substances /E1*E136/
   5          j activities /P1*P150/
   6          k impacts /I1*I2913/
   7      l MPindicators /MPI1*MPI10/
   8          losses(i) /E97/
   9          intermediates(i) /E1*E77,E78*E82,E84*E89,E91*E96,E107,E113,E115,E117*E122,E124*E128,E133*E136/
  10          homes(j) homesubsets /P87/
  11          supplies(i) bagsperhome /E84*E88,E127/
  12          sortedStuff(i) sortedbagsweights /E92*E96,E128/
  13          unextrudedAmnts(j) bagspermake /P77*P81,P132/
  14      bagAmnts(j) extruded plastic /P82*P86,P132/;
  15   
  16  set ij(i,j)/#i.#j/;
  17  set HCon(i,j) /#supplies.#homes/;
  18  set SWast(i,j) /#sortedStuff.P92/;
  19   
  20  parameter A(i,j),B(k,j),C(l,k);
  21  parameter s1(j);
  22   
GDXIN   /home/thakker.8/Documents/project-codes/Design-SCE/techMatrix3.gdx
--- LOAD  A = 1:A
  26   
  27  A('E132',j)=0;
  28   
  29  set ecoinventI(i) /E1*E77/;
  30  A(ecoinventI,'P131')=0;
  31  A(ecoinventI,'P133')=0;
  32  A(ecoinventI,'P80')=0;
  33   
GDXIN   /home/thakker.8/Documents/project-codes/Design-SCE/intMatrix5.gdx
--- LOAD  B = 1:B
  37  B(k,j) = round(B(k,j), 6);
  38   
GDXIN   /home/thakker.8/Documents/project-codes/Design-SCE/CharacFactors3.gdx
--- LOAD  C = 1:C
  42  C(l,k) = round(C(l,k), 2);
  43   
  44  *$GDXIN scalingVector.gdx
  45  *$LOAD s1
  46  *$GDXIN
  47   
  48  *A('E97','P91')=0.08825;
  49  *A('E97','P89')=-1.0968;
  50   
  51   
  52  positive variables
  53          s(j) scaling factors;
  54   
  55  variables
  56          f(i) final demand;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      03/01/22 18:31:37 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  57   
  58  s.l(j)=0;
  59   
  60  *******************************************Innovation**************************************
  61   
       
      *Smart segregation - losses reduce to 25 percent
      A('E97','P92')=0.044;
       
      *source segregated plastic waste
      A('E97','P92')=0;
      A('E97','P92')=0;
      A('E17','P92')=0;
      A('E17','P92')=0;
      A('E90',j)=0;
      A('E89','P90')=-1;
      A('E89','P90')=-1;
      A('E97','P91')=-1;
      A('E97','P91')=-1;
       
      * Highly efficient pyrolysis
      A('E113','P115')=0;
      A('E17','P115')=0.12;
      A('E17','P116')=0.09;
      *A('E7','P116')=0.044;
       
  85  *zero emissions grid
  86  *A(i,'P17')=0;
  87  *A('E17','P21')=3.6;
  88  *A(i,'P21')=0;
  89  *A('E21','P21')=3.6;
  90  *A('E17','P107')=0;
  91  *A('E15','P107')=0;
  92  *A('E63','P107')=1;
  93  *B(k,'P17')=0;
  94  *B(k,'P21')=0;
  95  *s.fx('P107')=0;
  96   
  97   
  98  *No Caps on Recycled Content
  99  *A('E79','P93')=0.55;
 100  *A('E78','P94')=0.55;
 101  *A('E80','P95')=0.55;
 102  *A('E81','P96')=0.45;
 103  *A('E97','P93')=0.026;
 104  *A('E97','P94')=0.026;
 105  *A('E97','P95')=0.025;
 106  *A('E97','P96')=0.018;
 107  *A('E79','P93')=1;
 108  *A('E78','P94')=1;
 109  *A('E80','P95')=1;
 110  *A('E81','P96')=1;
 111  *A('E117','P93')=0.0;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      03/01/22 18:31:37 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 112  *A('E118','P94')=0;
 113  *A('E119','P95')=0.0;
 114  *A('E120','P96')=0.0;
 115  *A('E121','P96')=0.0;
 116  A('E127','P87')=-10;
 117  *A('E126','P134')=0;
 118   
 119   
 120  *inn-algo include
 216   
 217   
 225   
 226  s.up('P140')=0;
 227  s.up('P142')=0;
 228  s.up('P143')=0;
 229  s.up('P144')=0;
 230  s.up('P147')=0;
 231  s.up('P148')=0.01;
 232  s.up('P149')=0;
 233  s.up('P150')=0;
 234   
 235   
 236   
 253   
 257   
 258  parameter
 259          bagVolumes(i) volume /E84 13.75, E85 [29.3*10], E86 [43.3*20], E87 [14*1], E88 14, E127 22.5/
 260          stockAttributes(bagAmnts) wt of bags;
 261   
 262  variable techMat(i,j);
 263  techMat.fx(i,j)$ (ij(i,j)-HCon(i,j)-SWast(i,j))=A(i,j);
 264  techMat.l(i,j)$(HCon(i,j)+SWast(i,j))=A(i,j);
 265  techMat.up(i,j)$HCon(i,j)=0;
 266   
      techMat.fx('E97','P92')=0;
      set makezerolosses(j) /P93*P97/;
      techMat.fx('E97',j)$makezerolosses(j)=0;
 272   
 273  *type of bags
 274  *s.fx('P82')=0;
 275  *s.fx('P83')=0;
 276  *s.fx('P84')=0;
 277  *s.fx('P85')=0;
 278  *s.fx('P86')=0;
 279   
 280  set paperJ(j) /P131*P137/;
 281  A(i,paperJ)=0;
 282  s.fx('P131')=0;
 283   
 284   
 285   
 286  *s.fx('P130')=0;
 287  *s.fx('P115')=0;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      03/01/22 18:31:37 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 288   
      equation litt;
      litt.. s('P88')=e=0.75*s('P87');
 293  equations
 294   
 295          processLCA fundamental equation
 296          zeroIntermediates(i)
 297          homeDemand(homes) home demand constraint
 298          stockEqns percent stock constraint;
 299   
 300   
 301   
 302      zeroIntermediates(i) $ intermediates(i).. f(i)=e=0;
 303          homeDemand(homes(j))..-3878=e=sum(i $ supplies(i), techMat(i,j)*s(j)*bagVolumes(i)*0.8);
 304          stockEqns.. sum(j$homes(j),s(j)*(1+techMat('E97',j)))=e=sum(j $ bagAmnts(j), s(j));
 305   
 306   
 307  *equation wasteall;
 308   
 309  *wasteall.. s('P88')=e=s('P87');
 310   
 311   
 312   
 313  *****************************Downstream equations**************************
 314  *sorting
 315  equations eqs1,eqs2,eqs3,eqs4,eqs5,eqs6,eqs7;
 316  techMat.up(i,'P92')$sortedStuff(i)=1;
 317  techMat.lo(i,'P92')$sortedStuff(i)=0;
 318  eqs1.. techMat('E92','P92')*sum(j$bagAmnts(j), s(j))=e=s('P82')*(1-techMat('E97','P92'));
 319  eqs2.. techMat('E93','P92')*sum(j$bagAmnts(j), s(j))=e=s('P83')*(1-techMat('E97','P92'));
 320  eqs3.. techMat('E94','P92')*sum(j$bagAmnts(j), s(j))=e=s('P84')*(1-techMat('E97','P92'));
 321  eqs4.. techMat('E95','P92')*sum(j$bagAmnts(j), s(j))=e=s('P85')*(1-techMat('E97','P92'));
 322  eqs5.. techMat('E96','P92')*sum(j$bagAmnts(j), s(j))=e=s('P86')*(1-techMat('E97','P92'));
 323  eqs6.. techMat('E128','P92')*sum(j$bagAmnts(j), s(j))=e=s('P132')*(1-techMat('E97','P92'));
 324  eqs7..907.18*s('P106')=e=5*s('P92')*(1-techMat('E97','P92'));
 325   
 326  variable pchoiceitems(i);
 327  equation eqnPchoiceitems(i);
 328  eqnPchoiceitems(i)$supplies(i).. pchoiceitems(i)=e=techMat(i,'P87')*s('P87');
 329   
 330   
 331  *normalized cost
 332  variable normalizedcostInput;
 333  equation costInput;
 334  set bagRatioProduction(i) /E92*E96,E128/;
 335  parameter offsetCostInput(i) /E92 [800*1],E93 [990*1],E94 [1080*1],E95 [1240*1],E96 2500,E128 [445*1]/;
 336  costInput.. normalizedcostinput=e=sum(i$bagRatioProduction(i),techMat(i,'P92')*offsetCostInput(i)/(0.99));
 337   
 338  variable productionCostResin;
 339  equation pdtcost;
 340  pdtcost.. productionCostResin=e=(normalizedCostInput*sum(j$unextrudedAmnts(j), s(j))/907.18)+sum(j$bagAmnts(j),s(j)*0.05);
 341   
 342   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      03/01/22 18:31:37 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 343  *landfilling
 344  set lfill_indices(j) /P98*P102,P136/;
 345  variable lossLandfill;
 346  equations eql1,eql2,eql3,eql4,eql5,eql6,eql7,loss_l;
 347  eql1.. s('P98')*sum(j$bagAmnts(j), s(j))=e=s('P82')*sum(j$lfill_indices(j), s(j));
 348  eql2.. s('P99')*sum(j$bagAmnts(j), s(j))=e=s('P83')*sum(j$lfill_indices(j), s(j));
 349  eql3.. s('P100')*sum(j$bagAmnts(j), s(j))=e=s('P84')*sum(j$lfill_indices(j), s(j));
 350  eql4.. s('P101')*sum(j$bagAmnts(j), s(j))=e=s('P85')*sum(j$lfill_indices(j), s(j));
 351  eql5.. s('P102')*sum(j$bagAmnts(j), s(j))=e=s('P86')*sum(j$lfill_indices(j), s(j));
 352  eql6.. s('P136')*sum(j$bagAmnts(j), s(j))=e=s('P132')*sum(j$lfill_indices(j), s(j));
 353  eql7.. s('P103')=e=5*sum(j$lfill_indices(j), s(j));
 354  loss_l.. lossLandfill=e=907.18*sum(j$lfill_indices(j),s(j));
 355   
 356  s.fx('P81')=0;
 357  *incineration
 358  set ifill_indices(j) /P108*P112,P137/;
 359  parameter offsetCost(j) /P108 [800*1],P109 [990*1],P110 [1080*1],P111 [1240*1], P112 2500,P137 [445*1]/;
 360  set ifill_indices_new(j) /P118*P121,P137/;
 361  parameter offsetCost_new(j) /P118 [800*1],P119 [990*1],P120 [1080*1],P121 [1240*1], P137 [445*1]/;
 362  variable lossIncineration;
 363  equations eqi1,eqi2,eqi3,eqi4,eqi5,eqi6,eqi7,loss_i;
 364  eqi1.. s('P108')*sum(j$bagAmnts(j), s(j))=e=s('P82')*sum(j$ifill_indices(j), s(j));
 365  eqi2.. s('P109')*sum(j$bagAmnts(j), s(j))=e=s('P83')*sum(j$ifill_indices(j), s(j));
 366  eqi3.. s('P110')*sum(j$bagAmnts(j), s(j))=e=s('P84')*sum(j$ifill_indices(j), s(j));
 367  eqi4.. s('P111')*sum(j$bagAmnts(j), s(j))=e=s('P85')*sum(j$ifill_indices(j), s(j));
 368  eqi5.. s('P112')*sum(j$bagAmnts(j), s(j))=e=s('P86')*sum(j$ifill_indices(j), s(j));
 369  eqi6.. s('P137')*sum(j$bagAmnts(j), s(j))=e=s('P32')*sum(j$ifill_indices(j), s(j));
 370  eqi7.. s('P114')=e=5*sum(j$ifill_indices(j), s(j));
 371  *loss_i.. lossIncineration*sum(j$ifill_indices(j),offsetCost(j))=e=sum(j$ifill_indices(j),s(j)*907.18*(offsetCost(j)-((techMat('E107',j))*6.7/360)));
 372   
 373  Scalar elecCost /[10*1]/;
 374   
 375  loss_i.. lossIncineration=e=sum(j$ifill_indices(j),s(j)*907.18*(1-(((techMat('E107',j))*elecCost/360)/offsetCost(j))))+sum(j$ifill_indices_new(j),s(j)*907.18*(1-(((techMat('E107',j))*elecCost/360)/offsetCost_new(j))));
 376   
 377  *biofuel
 378  variable lossBioFuel;
 379  scalar biofuelCost /[0.041*1]/;
 380  *0.101 for pyrolysis optimal
 381   
 382   
 383  equation loss_b;
 384  set bio_new(j) /P122*P125/;
 385  loss_b.. lossBioFuel*normalizedCostInput=e=(((-1*s('P115')/techMat('E91','P115')+sum(j$bio_new(j),s(j)))*normalizedCostInput)-(s('P116')*biofuelCost));
 386  lossBioFuel.lo=0;
 387   
 388   
 389  *composting
 390  variable costBenifitCompost,cbc2, lossCompost;
 391  equation cost_c,cc2,loss_c;
 392  scalar compostCost /[0.030183*1]/;
 393  cost_c.. costBenifitCompost=e=(s('P117')+s('P104')+s('P105'))*907.18*compostCost;
 394  cc2.. cbc2=e=s('P104')*offsetCostInput('E95')+s('P105')*offsetCostInput('E96');
 395  lossCompost.lo=0;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      03/01/22 18:31:37 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 396  loss_c.. lossCompost*((s('P117')+s('P104'))*offsetCostInput('E95')+s('P105')*offsetCostInput('E96'))=e=((s('P117')+s('P104'))+s('P105'))*907.18*(((s('P117')+s('P104'))*offsetCostInput('E95')+s('P105')*offsetCostInput('E96'))-costBenifitCompost);
 397  *loss_c.. lossCompost=e=(s('P105')+s('P104'))*907.18;
 398   
 399  *s.fx('P113')=0;
 400  s.fx('P89')=0;
 401  *s.fx('P115')=0;
 402  *s.fx('P92')=0;
 403  *s.fx('P85')=0;
 404  *s.fx('P86')=0;
 405  processLCA(i).. f(i)=e=sum(j,techMat(i,j)*s(j));
 406   
 407  **************************************Objectives************************************************
 408   
 409  variables DoC,Cost;
 410  equations DoC_obj,Cost_obj;
 411          DoC.lo=0;
 412  *       DoC.up=1;
 413   
 414  set inputs(j) /P1,P2,P7,P12,P14,P17,P18,P21,P26,P39,P42,P49,P52,P57,P58,P59, P76/;
 415  parameter cost_inputs(j) /P1 0.0496,P2 0.01624,P7 0.1766,P12 0.559977,P14 0.12996,P17 0.067,P18 0.37725,P21 0.067,P26 0.0287605,P39 0.1766,P42 110.2293,P49 0.12,P52 80,P57 0.13227,P58 0.022046,P59 0.020923,P76 0.000000030442/;
 416   
 417          Cost_obj.. Cost =e=sum(j$inputs(j), s(j)*cost_inputs(j))-costBenifitCompost;
 418   
 419  variable CostBag;
 420  equation Cost_obj1;
 421  parameter cost_bags(i) /E84 0.11, E85 0.18, E86 0.6, E87 0.14, E88 0.1/;
 422  Cost_obj1.. CostBag=e=sum(i$supplies(i),-1*pchoiceitems(i)*cost_bags(i));
 423   
 424   
 425   
 426   
 427  variable costRecycled;
 428  equation costRecycled1;
 429  costRecycled1.. costRecycled*0.90718=e=A('E81','P96')*s('P96')*[1.24*1]+A('E80','P95')*s('P95')*[1.08*1]+A('E79','P93')*s('P93')*[0.9*1]+A('E78','P94')*s('P94')*[0.99*1]+A('E129','P135')*s('P135')*[0.445*1];
 430   
 431  variable costIn,costPy,costCl,costLu;
 432  equation costIn1,costPy1,costCl1,costLu1;
 433   
 434  costIn1.. costIn=e=sum(j$ifill_indices(j),s(j)*techMat('E107',j)*elecCost/360)+sum(j$ifill_indices_new(j),s(j)*techMat('E107',j)*elecCost/360);
 435  costPy1.. costPy=e=s('P116')*biofuelCost;
 436  scalar clinkerCost /[34*1]/;
 437  scalar lumberCost /[0.036*1]/;
 438  costCl1.. costCl=e=s('P129')*clinkerCost/1000;
 439  *clinker 34$/ton, lumber=45$/1000 board feet i.e. 2.35 m3 and 320 kg/m3 density
 440  costLu1.. costLu=e=s('P130')*lumberCost;
 441  *pyrolysis 0.044 kg biofuel generated, 7.3 lb/gal density, 3$/gal
 442   
 443   
 444  ******************************Innovations revenue**************
 445   
 446  set inn_prc(j) /P140,P145*P150/;
 447   
 448  parameter inn_dpkg(j) /P140 2.1,P145 1.4,P146 1.65,P147 [0.63*1.31],P148 0,P149 [0.92*1.09],P150 [0.76*1.78]/;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      03/01/22 18:31:37 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 449  variable cost_inn;
 450  equation cost_inn1;
 451  cost_inn1.. cost_inn=e=sum(j$inn_prc(j),inn_dpkg(j)*s(j));
 452   
 453   
 454   
 455  *degreeofcircularity
 456  *DoC_obj.. DoC*sum(j$unextrudedAmnts(j), s(j))=e=sum(j$unextrudedAmnts(j), s(j))-(f('E97')+lossLandfill);
 457  *DoC_obj.. DoC*sum(j$bagAmnts(j), s(j))=e=sum(j$bagAmnts(j), s(j))-(f('E97')+lossLandfill+lossIncineration+lossBioFuel+lossCompost+costCl*s('P129')+costLu*s('P130'));
 458  DoC_obj.. DoC*(productionCostResin+costRecycled) =e=costIn +costRecycled+costBenifitCompost+costCl+costLu+costPy+cost_inn;
 459  *DoC_obj.. DoC*Cost =e=costIn +costRecycled+costBenifitCompost+costPy+costCl+costLu;
 460   
 461   
 462   
      equation dumm;
      variable dum;
      dumm.. dum=e=10;
      	Model ToyProblem /ALL/;
      	Option NLP=BARON;
      	Solve ToyProblem using NLP maximizing dum; 
 471   
 472  variable pchoicemass(j);
 473  equation totmassproduced(j);
 474  variable totpdtmass;
 475  equation eqtotpdtmass;
 476  eqtotpdtmass.. totpdtmass=e=sum(j$bagAmnts(j),s(j));
 477  totmassproduced(j)$bagAmnts(j).. pchoicemass(j)*totpdtmass=e=s(j);
 478   
 479  set wasteMgmt /'Reprocess', 'Pyrolysis', 'Landfill', 'Incineration'/;
 480  variable wasteMgmtValues (wasteMgmt);
 481  equations eqw1,eqw2,eqw3,eqw4;
 482  eqw1.. wasteMgmtValues('Reprocess')=e=s('P92')*(1-techMat('E97','p92'));
 483  eqw2.. wasteMgmtValues('Pyrolysis')=e=(s('P115')*((-1)*techMat('E91','P115')-techMat('E97','P115')));
 484  eqw3.. wasteMgmtValues('Landfill')=e=(sum(j$lfill_indices(j), s(j)*(907.18-techMat('E97',j))))+(s('P113')*907.18)-(s('P114')*45);
 485  eqw4.. wasteMgmtValues('Incineration')=e=sum(j$ifill_indices(j), s(j)*(907.18-techMat('E97',j)))+sum(j$ifill_indices_new(j), s(j)*(907.18-techMat('E97',j)));
 486   
 487   
 488   
 489   
 490  variable g(k);
 491  equation impactValues(k);
 492  impactValues(k).. g(k)=e=sum(j,B(k,j)*s(j));
 493  variable mp_indicators(l);
 494  equation eqMPI(l);
 495  eqMPI(l).. mp_indicators(l)=e=sum(k,C(l,k)*g(k));
 496   
 497  variable gwp;
 498  equation eq_gwp;
 499  eq_gwp.. gwp=e=mp_indicators('MPI4')-0.15*s('P116');
 500  *$if not set constrVal $set constrVal=0;
 501  *equation constrainttrial;
 502  *constrainttrial.. wasteMgMtValues('Reprocess')=l=0.5;
 503   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      03/01/22 18:31:37 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 504  positive variable slack1,slack2;
 505   
 506  parameter gwpC,costC,docC;
 508  gwpC=9.285*0.9-((2*9.285*0.9)/5)+((2*2.784)/5);
 509  *slack1.lo=-1*gwpC*0;
 510  *slack1.up=gwpC*0;
 511  equation addCons1;
 512  addCons1$(gwpC>0).. gwp+slack1=e=gwpC;
 514  costC=3.676*0.9-((2*3.676*0.9)/5)+((2*0.7843)/5);
 515  *slack2.lo=-1*costC*0;
 516  *slack2.up=costC*0;
 517  equation addCons2;
 518  addCons2$(costC>0).. cost+slack2=e=costC;
 519   
 521  docC=-1;;
 522  equation addCons3;
 523  addCons3$(docC>0).. DoC=g=docC;
 524   
 525   
 526  *Ellen Mcarthur Constraints
 527   
 528  *equation elmc1;
 529  *equation elmc2;
 530  *equations elmc3;
 531  *equations elmc4;
 532  *elmc1.. sum(j$ifill_indices(j),s(j)*907.18)=g=0.14*(s('P90')+s('P91'));
 533  *elmc2.. sum(j$lfill_indices(j),s(j)*907.18)=e=0.5*(s('P90')+s('P91'));
 534  *elmc3.. s('P92')=e=0.14*(s('P90')+s('P91'));
 535  *elmc4.. s('P115')=e=0.01*(s('P90')+s('P91'));
 536   
 537  equation eps1;
 538  variable epsObj;
 539  eps1.. epsObj=e=DoC+eps*(slack1+slack2);
 540   
 541      Model ToyProblem /ALL/;
 542          Option NLP=BARON;
 547  *       ToyProblem.OptFile=1;
 548  *       Option limrow=120;
 549  *    Option resLim=5000;
 550  *    Option optcr=0.1;
 551  parameter zD,zG,zC;
 552  *******************************************Objectives**********************************************
 553  DoC.lo=0;
 554  DoC.up=2;
 555  If(docC<0, Solve ToyProblem Using NLP maximizing DoC;
 556  zD = DoC.l;
 557  DoC.lo=zD;
 558  zG = gwp.l;
 559  gwp.l=zG;
 560  *Solve ToyProblem Using NLP minimizing gwp;
 561  zG = gwp.l;
 562  gwp.up=zG;
 563  *Solve ToyProblem Using NLP minimizing Cost;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      03/01/22 18:31:37 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 564  zC=cost.l;
 565  cost.up=zC;
 566   
 567   
 568  Elseif (gwpC<0), Solve ToyProblem Using NLP minimizing gwp;
 569  zG = gwp.l;
 570  gwp.up=zG;
 571  *Solve ToyProblem Using NLP minimizing Cost;
 572  zC=Cost.l;
 573  Cost.up=zC;
 574  *Solve ToyProblem Using NLP maximizing DoC;
 575  zD = DoC.l;
 576  DoC.fx=zD;
 577   
 578  else  Solve ToyProblem Using NLP minimizing Cost;
 579  zC = Cost.l;
 580  Cost.up=zC;
 581  *Solve ToyProblem Using NLP maximizing DoC;
 582  zD = DoC.l;
 583  DoC.lo=zD;
 584  *Solve ToyProblem Using NLP minimizing gwp;
 585  zG=gwp.l;
 586  gwp.fx=zG;
 587  );
 588   
       
      $GDXIN intMatrix1.gdx
      $LOAD B
      $GDXIN
      B(k,j) = round(B(k,j), 4);
       
      $GDXIN CharacFactors.gdx
      $LOAD C
      $GDXIN
      C(l,k) = round(C(l,k), 4);
       
       
      variable g(k);
      *equation impactValues(k);
      *impactValues(k).. g(k)=e=sum(j,B(k,j)*s(j));
      g.fx(k)=sum(j,B(k,j)*s.l(j));
      variable mp_indicators(l);
      *equation eqMPI(l);
      mp_indicators.l(l)=0.05;
      mp_indicators.fx(l)=sum(k,C(l,k)*g.l(k));
 611   
 612  Display pchoiceitems.l,pchoicemass.l,wasteMgmtValues.l;
 613  Display DoC.l;
 614  Display Cost.l;
 615  Display s.l;
 616  Display g.l;
 617  Display cbc2.l,costBenifitCompost.l,lossCompost.l,lossIncineration.l,lossBiofuel.l,lossLandfill.l;
 618  Display productionCostResin.l;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 619  Display mp_indicators.l;
 620   
 622   
 623  File pareto /paretos140labs.txt/;
 624  pareto.ap=1;
 625  pareto.nd=4;
 626  pareto.pw=20000;
 627  put pareto"";
 628  put Cost.l",";
 629  put DoC.l",";
 630  put gwp.l",";
 631  put totpdtmass.l",";
 632  loop(j$bagAmnts(j),put s.l(j)",");
 633  loop(wasteMgmt,put wasteMgmtValues.l(wasteMgmt)",");
 634  loop(j$inn_prc(j),put s.l(j)",");
 635  *loop(l,put mp_indicators.l(l)",");
 636  put s.l('P129')",";
 637  put s.l('P130')"";
 638  put /;
 639   
 640  *'LABS from chemical recycling of PE','C4 Gas Mixture Pyrolysis','Light Liquid Fuel Pyrolysis','Clay reycled PLA','Lipase based PLA recycling','Lactic acid from acid hydrolysis','Me-Lactate from alcoholysis','Clinker','Lumber'
 641   
 642  set from /'HDPE','LDPE','PP','PLA','Paper','Households','Curbside Collection','Dropoff','Segregation','rHDPE','rLDPE','rPP','rPLA','rPaper','Compost','Landfill','Incineration','Pyrolysis','Clinker','Lumber','Losses'/;
 643  *set to /HDPE,LDPE,PP,PLA,Paper,Households,Curbside Collection,Dropoff,Segregation,rHDPE,rLDPE,rPP,rPLA,rPaper,Compost,Landfill,Incineration,Pyrolysis,Losses/;
 644  set to /'HDPE','LDPE','PP','PLA','Paper','Households','Curbside Collection','Dropoff','Segregation','rHDPE','rLDPE','rPP','rPLA','rPaper','Compost','Landfill','Incineration','Pyrolysis','LABS from chemical recycling of PE','C4 Gas Mixture Pyrolysis'
      ,'Light Liquid Fuel Pyrolysis','Clay reycled PLA','Lactic acid from acid hydrolysis','Me-Lactate from alcoholysis','Clinker','Lumber','Losses'/;
 645  variable cD(from,to);
 646  cd.l(from,to)=0.0000;
 647  cd.fx('HDPE','Households')=s.l('P82');
 648  cd.fx('LDPE','Households')=s.l('P83');
 649  cd.fx('PP','Households')=s.l('P84');
 650  cd.fx('PLA','Households')=s.l('P85');
 651  cd.fx('Paper','Households')=s.l('P132');
 652  cd.fx('Households','losses')=s.l('P87')*techMat.l('E97','P87')+s.l('P88');
 653  cd.fx('Households','Curbside Collection')=-1*s.l('P90')*techMat.l('E89','P90');
 654  cd.fx('Households','Dropoff')=s.l('P91')*(-1)*techMat.l('E89','P91');
 655  cd.fx('Curbside Collection','losses')=s.l('P90')*techMat.l('E97','P90');
 656  cd.fx('Dropoff','losses')=s.l('P91')*techMat.l('E97','P91');
 657  cd.fx('Curbside Collection','Segregation')=s.l('P90')*s.l('P92')/(s.l('P90')+s.l('P91'));
 658  cd.fx('Dropoff','Segregation')=s.l('P91')*s.l('P92')/(s.l('P90')+s.l('P91'));
 659  set repr_lfill(j) /P92*P97/;
 660  cd.fx('Segregation','Landfill')=s.l('P92')*techMat.l('E97','P92')+sum(j$repr_lfill(j),s.l(j)*techMat.l('E113',j));
 661   
 662  cd.fx('Curbside Collection','Landfill')=s.l('P90')*(sum(j$lfill_indices(j), s.l(j)*(907.18-techMat.l('E97',j))))/(s.l('P90')+s.l('P91'));
 663  cd.fx('Dropoff','Landfill')=s.l('P91')*(sum(j$lfill_indices(j), s.l(j)*(907.18-techMat.l('E97',j))))/(s.l('P90')+s.l('P91'));
 664   
 665  cd.fx('Curbside Collection','Incineration')=s.l('P90')*sum(j$ifill_indices(j), s.l(j)*(907.18-techMat.l('E97',j)))/(s.l('P90')+s.l('P91'));
 666  cd.fx('Dropoff','Incineration')=s.l('P91')*sum(j$ifill_indices(j), s.l(j)*(907.18-techMat.l('E97',j)))/(s.l('P90')+s.l('P91'));
 667  cd.fx('Incineration','Landfill')=sum(j$ifill_indices(j),s.l(j)*techMat.l('E113',j));
 668  cd.fx('Incineration','losses')=sum(j$ifill_indices(j),s.l(j)*techMat.l('E97',j));
 669   
 670  cd.fx('Curbside Collection','Pyrolysis')=s.l('P90')*(s.l('P115')*((-1)*techMat.l('E91','P115')-techMat.l('E97','P115')))/(s.l('P90')+s.l('P91'));
 671  cd.fx('Dropoff','Pyrolysis')=s.l('P91')*(s.l('P115')*((-1)*techMat.l('E91','P115')-techMat.l('E97','P115')))/(s.l('P90')+s.l('P91'));
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 672  cd.fx('Pyrolysis','losses')=s.l('P115')*techMat.l('E97','P115');
 673   
 674  cd.fx('Segregation','rHDPE')=s.l('P93');
 675  cd.fx('Segregation','rLDPE')=s.l('P94');
 676  cd.fx('Segregation','rPP')=s.l('P95');
 677  cd.fx('Segregation','rPLA')=s.l('P96');
 678  cd.fx('Segregation','rPaper')=s.l('P135');
 679  cd.fx('Segregation','Compost')=907.18*(s.l('P117')+s.l('P104')+s.l('P105'));
 680  cd.fx('Segregation','Incineration')=sum(j$ifill_indices(j), s.l(j)*(907.18-techMat.l('E97',j)));
 681   
 682  cd.fx('Segregation','LABS from chemical recycling of PE')=s.l('P140');
 683  cd.fx('Segregation','C4 Gas Mixture Pyrolysis')=s.l('P145');
 684  cd.fx('Segregation','Light Liquid Fuel Pyrolysis')=s.l('P146');
 685  cd.fx('Segregation','Clay reycled PLA')=s.l('P147');
 686  cd.fx('Segregation','Lactic acid from acid hydrolysis')=s.l('P149');
 687  cd.fx('Segregation','Me-Lactate from alcoholysis')=s.l('P150');
 688   
 689  cd.fx('rHDPE','HDPE')=s.l('P93')*techMat.l('E79','P93');
 690  cd.fx('rHDPE','Incineration')=s.l('P118')*(907.18-techMat.l('E79','P118'));
 691  cd.fx('rHDPE','Pyrolysis')=s.l('P122');
 692  cd.fx('rHDPE','Clinker')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P126')*(s.l('P129')/(s.l('P129')+s.l('P130')));
 693  cd.fx('rHDPE','Lumber')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P126')*(s.l('P130')/(s.l('P129')+s.l('P130')));
 694  cd.fx('rLDPE','LDPE')=s.l('P94')*techMat.l('E78','P94');
 695  cd.fx('rLDPE','Incineration')=s.l('P119')*(907.18-techMat.l('E79','P119'));
 696  cd.fx('rLDPE','Pyrolysis')=s.l('P123');
 697  cd.fx('rLDPE','Clinker')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P127')*(s.l('P129')/(s.l('P129')+s.l('P130')));
 698  cd.fx('rLDPE','Lumber')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P127')*(s.l('P130')/(s.l('P129')+s.l('P130')));
 699  cd.fx('rPP','PP')=s.l('P95')*techMat.l('E80','P95');
 700  cd.fx('rPP','Incineration')=s.l('P120')*(907.18-techMat.l('E79','P118'));
 701  cd.fx('rPP','Pyrolysis')=s.l('P124');
 702  cd.fx('rPP','Clinker')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P128')*(s.l('P129')/(s.l('P129')+s.l('P130')));
 703  cd.fx('rPP','Lumber')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P128')*(s.l('P130')/(s.l('P129')+s.l('P130')));
 704  cd.fx('rPLA','PLA')=s.l('P96')*techMat.l('E81','P96');
 705  cd.fx('rPLA','Incineration')=s.l('P121')*(907.18-techMat.l('E79','P118'));
 706  cd.fx('rPLA','Pyrolysis')=s.l('P125');
 707  cd.fx('rPLA','Compost')=s.l('P117')*(907.18);
 708  cd.fx('rPaper','Paper')=s.l('P135')*techMat.l('E125','P135');
 709  cd.fx('rHDPE','Losses')=s.l('P93')*techMat.l('E97','P93');
 710  cd.fx('rLDPE','Losses')=s.l('P94')*techMat.l('E97','P94');
 711  cd.fx('rPP','Losses')=s.l('P95')*techMat.l('E97','P95');
 712  cd.fx('rPLA','Losses')=s.l('P96')*techMat.l('E97','P96');
 713  cd.fx('rPaper','Losses')=s.l('P135')*techMat.l('E97','P135');
 714  *cd.fx('Segregation','Landfill')=sum(j$repr_lfill(j),s.l(j)*techMat.l('E113',j));
 715   
 716  cd.fx(from,to) = round(cd.l(from,to), 4);
 717  parameter recyclevalLDPE,recyclevalPLA,recyclevalPP,recyclevalHDPE;
 718  recyclevalPLA$(s.l('P80')>0)=A('E81','P96')*s.l('P96')/(s.l('P80')+A('E81','P96')*s.l('P96'));
 719  recyclevalPP$(s.l('P79')>0)=A('E80','P95')*s.l('P95')/(s.l('P79')+A('E80','P95')*s.l('P95'));
 720  recyclevalHDPE$(s.l('P77')>0)=A('E79','P93')*s.l('P93')/(s.l('P77')+A('E79','P93')*s.l('P93'));
 721  recyclevalLDPE$(s.l('P78')>0)=A('E78','P94')*s.l('P94')/(s.l('P78')+A('E78','P94')*s.l('P94'));
 722  Display recyclevalLDPE,recyclevalHDPE,recyclevalPP,recyclevalPLA;
 723  *chordDiag.nd=4;
 724  *put chordDiag"";
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 725  *loop(to, put to.tl);
 726  *loop(from, loop(to, put cd.l(from,to)); put /;);
 727  *put /;
 728  *Display from;
 729   
 730  execute_unload 'Sankey_2s140labs.gdx', cD,from;
 731  execute 'gdxdump Sankey_2s140labs.gdx output=Sankey_2s140labs.csv symb=cD format=csv'
 732  execute 'rm Sankey_2s140labs.gdx'
 733  execute 'sh removeUndf.sh Sankey_2s140labs.csv'
 734  execute 'python finalJSConstructor.py Sankey_2s140labs.csv'
 735  execute 'mv Sankey_2s140labs.* ./s140labs/'
 736  execute 'rm scalingVector.csv'
 737  execute_unload 'scalingVector.gdx', s;
 738  execute 'gdxdump scalingVector.gdx output=scalingVector.csv symb=s format=csv'
 739  *execute 'rm scalingVector.gdx'
 740  execute 'python hotspotFinder.py scalingVector.csv'
 741  execute 'mv fig.png ./s140labs/hotspot_2s140labs.png'
 742  execute 'mv fig.svg ./s140labs/hotspot_2s140labs.svg'
 743  *execute_unload 'Intervention.gdx', g;
 744  *execute 'gdxdump Intervention.gdx output=Intervention.csv symb=g format=csv'
 745  *execute 'rm Intervention.gdx'
 746   
 747  *execute 'cd ~/Data/GAMS_Codes/LCD-Plastics/Graphics/Sankey/'
 748  *execute 'python finalJSConstructor.py Sankey_%fileS%.csv'
 749  Display cd.l;
 750  *execute_unload "pareto%filename%.gdx", techMat,s,f,Cost,DoC,productionCostResin, pchoiceitems, pchoicemass, wasteMgmtValues,mp_indicators;
 751  *execute_unload 'Find.gdx', techMat,s,f,Cost,DoC,productionCostResin, pchoiceitems, pchoicemass, wasteMgmtValues,mp_indicators;
 752  *execute 'gdxdump Find.gdx output=Find.csv symb=techMat format=csv'
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  /home/thakker.8/Documents/project-codes/Design-SCE/RP4.gms
     2       23 GDXIN          1      23  /home/thakker.8/Documents/project-codes/Design-SCE/techMatrix3.gdx
     3       34 GDXIN          1      34  /home/thakker.8/Documents/project-codes/Design-SCE/intMatrix5.gdx
     4       39 GDXIN          1      39  /home/thakker.8/Documents/project-codes/Design-SCE/CharacFactors3.gdx
     5      122 INCLUDE        1     122  ./home/thakker.8/Documents/project-codes/Design-SCE/innovations_chem.inc


COMPILATION TIME     =        0.026 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 555


---- processLCA  =E=  fundamental equation

processLCA(E1)..  - (1)*s(P1) + (0)*s(P2) + (0)*s(P3) + (0)*s(P4) + (0)*s(P5) + (0)*s(P6) + (0)*s(P7) + (0)*s(P8) + (0)*s(P9) + (1)*s(P10) + (0)*s(P11) + (0)*s(P12) + (0)*s(P13) + (0)*s(P14) + (0)*s(P15) + (0)*s(P16) + (0)*s(P17) + (0)*s(P18) + (0)*s(P19)
     
      + (0)*s(P20) + (0)*s(P21) + (0)*s(P22) + (0)*s(P23) + (0)*s(P24) + (0)*s(P25) + (0)*s(P26) + (0)*s(P27) + (0)*s(P28) + (0)*s(P29) + (0)*s(P30) + (0)*s(P31) + (0)*s(P32) + (0)*s(P33) + (0)*s(P34) + (0)*s(P35) + (0)*s(P36) + (0)*s(P37) + (0)*s(P38)
     
      + (0)*s(P39) + (0)*s(P40) + (0)*s(P41) + (0)*s(P42) + (0)*s(P43) + (0)*s(P44) + (0)*s(P45) + (0)*s(P46) + (0)*s(P47) + (0)*s(P48) + (0)*s(P49) + (0)*s(P50) + (0)*s(P51) + (0)*s(P52) + (0)*s(P53) + (0)*s(P54) + (0)*s(P55) + (0)*s(P56) + (0)*s(P57)
     
      + (0)*s(P58) + (0)*s(P59) + (0)*s(P60) + (0)*s(P61) + (0)*s(P62) + (0)*s(P63) + (0)*s(P64) + (0)*s(P65) + (0)*s(P66) + (0)*s(P67) + (0.44186)*s(P68) + (0)*s(P69) + (0)*s(P70) + (0)*s(P71) + (0)*s(P72) + (0)*s(P73) + (0)*s(P74) + (0)*s(P75)
     
      + (0)*s(P76) + (0)*s(P77) + (0)*s(P78) + (0)*s(P79) + (0)*s(P80) + (0)*s(P81) + (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P87) + (0)*s(P88) + (0)*s(P89) + (0)*s(P90) + (0)*s(P91) + (0)*s(P92) + (0)*s(P93) + (0)*s(P94)
     
      + (0)*s(P95) + (0)*s(P96) + (0)*s(P97) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P103) + (0)*s(P104) + (0)*s(P105) + (0)*s(P106) + (0)*s(P107) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112)
     
      + (0)*s(P113) + (0)*s(P114) + (0)*s(P115) + (0)*s(P116) + (0)*s(P117) + (0)*s(P118) + (0)*s(P119) + (0)*s(P120) + (0)*s(P121) + (0)*s(P122) + (0)*s(P123) + (0)*s(P124) + (0)*s(P125) + (0)*s(P126) + (0)*s(P127) + (0)*s(P128) + (0)*s(P129)
     
      + (0)*s(P130) + (0)*s(P131) + (0)*s(P132) + (0)*s(P133) + (0)*s(P134) + (0)*s(P135) + (0)*s(P136) + (0)*s(P137) + (0)*s(P138) + (0)*s(P139) + (0)*s(P140) + (0)*s(P141) + (0)*s(P142) + (0)*s(P143) + (0)*s(P144) + (0)*s(P145) + (0)*s(P146)
     
      + (0)*s(P147) + (0)*s(P148) + (0)*s(P149) + (0)*s(P150) + f(E1) + (0)*techMat(E1,P1) + (0)*techMat(E1,P2) + (0)*techMat(E1,P3) + (0)*techMat(E1,P4) + (0)*techMat(E1,P5) + (0)*techMat(E1,P6) + (0)*techMat(E1,P7) + (0)*techMat(E1,P8)
     
      + (0)*techMat(E1,P9) + (0)*techMat(E1,P10) + (0)*techMat(E1,P11) + (0)*techMat(E1,P12) + (0)*techMat(E1,P13) + (0)*techMat(E1,P14) + (0)*techMat(E1,P15) + (0)*techMat(E1,P16) + (0)*techMat(E1,P17) + (0)*techMat(E1,P18) + (0)*techMat(E1,P19)
     
      + (0)*techMat(E1,P20) + (0)*techMat(E1,P21) + (0)*techMat(E1,P22) + (0)*techMat(E1,P23) + (0)*techMat(E1,P24) + (0)*techMat(E1,P25) + (0)*techMat(E1,P26) + (0)*techMat(E1,P27) + (0)*techMat(E1,P28) + (0)*techMat(E1,P29) + (0)*techMat(E1,P30)
     
      + (0)*techMat(E1,P31) + (0)*techMat(E1,P32) + (0)*techMat(E1,P33) + (0)*techMat(E1,P34) + (0)*techMat(E1,P35) + (0)*techMat(E1,P36) + (0)*techMat(E1,P37) + (0)*techMat(E1,P38) + (0)*techMat(E1,P39) + (0)*techMat(E1,P40) + (0)*techMat(E1,P41)
     
      + (0)*techMat(E1,P42) + (0)*techMat(E1,P43) + (0)*techMat(E1,P44) + (0)*techMat(E1,P45) + (0)*techMat(E1,P46) + (0)*techMat(E1,P47) + (0)*techMat(E1,P48) + (0)*techMat(E1,P49) + (0)*techMat(E1,P50) + (0)*techMat(E1,P51) + (0)*techMat(E1,P52)
     
      + (0)*techMat(E1,P53) + (0)*techMat(E1,P54) + (0)*techMat(E1,P55) + (0)*techMat(E1,P56) + (0)*techMat(E1,P57) + (0)*techMat(E1,P58) + (0)*techMat(E1,P59) + (0)*techMat(E1,P60) + (0)*techMat(E1,P61) + (0)*techMat(E1,P62) + (0)*techMat(E1,P63)
     
      + (0)*techMat(E1,P64) + (0)*techMat(E1,P65) + (0)*techMat(E1,P66) + (0)*techMat(E1,P67) + (0)*techMat(E1,P68) + (0)*techMat(E1,P69) + (0)*techMat(E1,P70) + (0)*techMat(E1,P71) + (0)*techMat(E1,P72) + (0)*techMat(E1,P73) + (0)*techMat(E1,P74)
     
      + (0)*techMat(E1,P75) + (0)*techMat(E1,P76) + (0)*techMat(E1,P77) + (0)*techMat(E1,P78) + (0)*techMat(E1,P79) + (0)*techMat(E1,P80) + (0)*techMat(E1,P81) + (0)*techMat(E1,P82) + (0)*techMat(E1,P83) + (0)*techMat(E1,P84) + (0)*techMat(E1,P85)
     
      + (0)*techMat(E1,P86) + (0)*techMat(E1,P87) + (0)*techMat(E1,P88) + (0)*techMat(E1,P89) + (0)*techMat(E1,P90) + (0)*techMat(E1,P91) + (0)*techMat(E1,P92) + (0)*techMat(E1,P93) + (0)*techMat(E1,P94) + (0)*techMat(E1,P95) + (0)*techMat(E1,P96)
     
      + (0)*techMat(E1,P97) + (0)*techMat(E1,P98) + (0)*techMat(E1,P99) + (0)*techMat(E1,P100) + (0)*techMat(E1,P101) + (0)*techMat(E1,P102) + (0)*techMat(E1,P103) + (0)*techMat(E1,P104) + (0)*techMat(E1,P105) + (0)*techMat(E1,P106) + (0)*techMat(E1,P107)
     
      + (0)*techMat(E1,P108) + (0)*techMat(E1,P109) + (0)*techMat(E1,P110) + (0)*techMat(E1,P111) + (0)*techMat(E1,P112) + (0)*techMat(E1,P113) + (0)*techMat(E1,P114) + (0)*techMat(E1,P115) + (0)*techMat(E1,P116) + (0)*techMat(E1,P117)
     
      + (0)*techMat(E1,P118) + (0)*techMat(E1,P119) + (0)*techMat(E1,P120) + (0)*techMat(E1,P121) + (0)*techMat(E1,P122) + (0)*techMat(E1,P123) + (0)*techMat(E1,P124) + (0)*techMat(E1,P125) + (0)*techMat(E1,P126) + (0)*techMat(E1,P127)
     
      + (0)*techMat(E1,P128) + (0)*techMat(E1,P129) + (0)*techMat(E1,P130) + (0)*techMat(E1,P131) + (0)*techMat(E1,P132) + (0)*techMat(E1,P133) + (0)*techMat(E1,P134) + (0)*techMat(E1,P135) + (0)*techMat(E1,P136) + (0)*techMat(E1,P137)
     
      + (0)*techMat(E1,P138) + (0)*techMat(E1,P139) + (0)*techMat(E1,P140) + (0)*techMat(E1,P141) + (0)*techMat(E1,P142) + (0)*techMat(E1,P143) + (0)*techMat(E1,P144) + (0)*techMat(E1,P145) + (0)*techMat(E1,P146) + (0)*techMat(E1,P147)
     
      + (0)*techMat(E1,P148) + (0)*techMat(E1,P149) + (0)*techMat(E1,P150) =E= 0 ; (LHS = 0)
     
processLCA(E2)..  (0)*s(P1) - (0.000252345277453289)*s(P2) + (0)*s(P3) + (0)*s(P4) + (6.482E-6)*s(P5) + (0)*s(P6) + (0)*s(P7) + (0)*s(P8) + (0)*s(P9) + (0)*s(P10) + (0)*s(P11) + (0)*s(P12) + (0)*s(P13) + (0)*s(P14) + (0)*s(P15) + (0)*s(P16) + (0)*s(P17)
     
      + (0)*s(P18) + (0)*s(P19) + (0.001)*s(P20) + (0)*s(P21) + (0)*s(P22) + (0)*s(P23) + (2.7224E-5)*s(P24) + (0)*s(P25) + (0)*s(P26) + (0)*s(P27) + (0)*s(P28) + (0)*s(P29) + (0)*s(P30) + (0)*s(P31) + (5.8338E-5)*s(P32) + (0)*s(P33) + (0)*s(P34)
     
      + (0)*s(P35) + (0)*s(P36) + (0)*s(P37) + (9.5933E-6)*s(P38) + (0)*s(P39) + (0.001)*s(P40) + (0)*s(P41) + (0)*s(P42) + (0)*s(P43) + (0)*s(P44) + (0)*s(P45) + (0.0829)*s(P46) + (0)*s(P47) + (0)*s(P48) + (0)*s(P49) + (0)*s(P50) + (0)*s(P51)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 555


     processLCA  =E=  fundamental equation     
     
      + (0)*s(P52) + (0)*s(P53) + (0.00118109589872716)*s(P54) + (0)*s(P55) + (0)*s(P56) + (0)*s(P57) + (0)*s(P58) + (0)*s(P59) + (0)*s(P60) + (0)*s(P61) + (0)*s(P62) + (0)*s(P63) + (0)*s(P64) + (0)*s(P65) + (0)*s(P66) + (0)*s(P67) + (0)*s(P68)
     
      + (0.00033261)*s(P69) + (0)*s(P70) + (0)*s(P71) + (0)*s(P72) + (0)*s(P73) + (0)*s(P74) + (0)*s(P75) + (0)*s(P76) + (0)*s(P77) + (0)*s(P78) + (0)*s(P79) + (0)*s(P80) + (0)*s(P81) + (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86)
     
      + (0)*s(P87) + (0)*s(P88) + (0)*s(P89) + (0)*s(P90) + (0)*s(P91) + (0)*s(P92) + (0)*s(P93) + (0)*s(P94) + (0)*s(P95) + (0)*s(P96) + (0)*s(P97) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P103) + (0)*s(P104)
     
      + (0)*s(P105) + (0)*s(P106) + (0)*s(P107) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P113) + (0)*s(P114) + (0)*s(P115) - (2.75E-5)*s(P116) + (0)*s(P117) + (0)*s(P118) + (0)*s(P119) + (0)*s(P120) + (0)*s(P121)
     
      + (0)*s(P122) + (0)*s(P123) + (0)*s(P124) + (0)*s(P125) + (0)*s(P126) + (0)*s(P127) + (0)*s(P128) + (0)*s(P129) + (0)*s(P130) + (0)*s(P131) + (0)*s(P132) + (0)*s(P133) + (0)*s(P134) + (0)*s(P135) + (0)*s(P136) + (0)*s(P137) + (0)*s(P138)
     
      + (0)*s(P139) + (0)*s(P140) + (0)*s(P141) + (0)*s(P142) + (0)*s(P143) + (0)*s(P144) + (0)*s(P145) + (0)*s(P146) + (0)*s(P147) + (0)*s(P148) + (0)*s(P149) + (0)*s(P150) + f(E2) + (0)*techMat(E2,P1) + (0)*techMat(E2,P2) + (0)*techMat(E2,P3)
     
      + (0)*techMat(E2,P4) + (0)*techMat(E2,P5) + (0)*techMat(E2,P6) + (0)*techMat(E2,P7) + (0)*techMat(E2,P8) + (0)*techMat(E2,P9) + (0)*techMat(E2,P10) + (0)*techMat(E2,P11) + (0)*techMat(E2,P12) + (0)*techMat(E2,P13) + (0)*techMat(E2,P14)
     
      + (0)*techMat(E2,P15) + (0)*techMat(E2,P16) + (0)*techMat(E2,P17) + (0)*techMat(E2,P18) + (0)*techMat(E2,P19) + (0)*techMat(E2,P20) + (0)*techMat(E2,P21) + (0)*techMat(E2,P22) + (0)*techMat(E2,P23) + (0)*techMat(E2,P24) + (0)*techMat(E2,P25)
     
      + (0)*techMat(E2,P26) + (0)*techMat(E2,P27) + (0)*techMat(E2,P28) + (0)*techMat(E2,P29) + (0)*techMat(E2,P30) + (0)*techMat(E2,P31) + (0)*techMat(E2,P32) + (0)*techMat(E2,P33) + (0)*techMat(E2,P34) + (0)*techMat(E2,P35) + (0)*techMat(E2,P36)
     
      + (0)*techMat(E2,P37) + (0)*techMat(E2,P38) + (0)*techMat(E2,P39) + (0)*techMat(E2,P40) + (0)*techMat(E2,P41) + (0)*techMat(E2,P42) + (0)*techMat(E2,P43) + (0)*techMat(E2,P44) + (0)*techMat(E2,P45) + (0)*techMat(E2,P46) + (0)*techMat(E2,P47)
     
      + (0)*techMat(E2,P48) + (0)*techMat(E2,P49) + (0)*techMat(E2,P50) + (0)*techMat(E2,P51) + (0)*techMat(E2,P52) + (0)*techMat(E2,P53) + (0)*techMat(E2,P54) + (0)*techMat(E2,P55) + (0)*techMat(E2,P56) + (0)*techMat(E2,P57) + (0)*techMat(E2,P58)
     
      + (0)*techMat(E2,P59) + (0)*techMat(E2,P60) + (0)*techMat(E2,P61) + (0)*techMat(E2,P62) + (0)*techMat(E2,P63) + (0)*techMat(E2,P64) + (0)*techMat(E2,P65) + (0)*techMat(E2,P66) + (0)*techMat(E2,P67) + (0)*techMat(E2,P68) + (0)*techMat(E2,P69)
     
      + (0)*techMat(E2,P70) + (0)*techMat(E2,P71) + (0)*techMat(E2,P72) + (0)*techMat(E2,P73) + (0)*techMat(E2,P74) + (0)*techMat(E2,P75) + (0)*techMat(E2,P76) + (0)*techMat(E2,P77) + (0)*techMat(E2,P78) + (0)*techMat(E2,P79) + (0)*techMat(E2,P80)
     
      + (0)*techMat(E2,P81) + (0)*techMat(E2,P82) + (0)*techMat(E2,P83) + (0)*techMat(E2,P84) + (0)*techMat(E2,P85) + (0)*techMat(E2,P86) + (0)*techMat(E2,P87) + (0)*techMat(E2,P88) + (0)*techMat(E2,P89) + (0)*techMat(E2,P90) + (0)*techMat(E2,P91)
     
      + (0)*techMat(E2,P92) + (0)*techMat(E2,P93) + (0)*techMat(E2,P94) + (0)*techMat(E2,P95) + (0)*techMat(E2,P96) + (0)*techMat(E2,P97) + (0)*techMat(E2,P98) + (0)*techMat(E2,P99) + (0)*techMat(E2,P100) + (0)*techMat(E2,P101) + (0)*techMat(E2,P102)
     
      + (0)*techMat(E2,P103) + (0)*techMat(E2,P104) + (0)*techMat(E2,P105) + (0)*techMat(E2,P106) + (0)*techMat(E2,P107) + (0)*techMat(E2,P108) + (0)*techMat(E2,P109) + (0)*techMat(E2,P110) + (0)*techMat(E2,P111) + (0)*techMat(E2,P112)
     
      + (0)*techMat(E2,P113) + (0)*techMat(E2,P114) + (0)*techMat(E2,P115) + (0)*techMat(E2,P116) + (0)*techMat(E2,P117) + (0)*techMat(E2,P118) + (0)*techMat(E2,P119) + (0)*techMat(E2,P120) + (0)*techMat(E2,P121) + (0)*techMat(E2,P122)
     
      + (0)*techMat(E2,P123) + (0)*techMat(E2,P124) + (0)*techMat(E2,P125) + (0)*techMat(E2,P126) + (0)*techMat(E2,P127) + (0)*techMat(E2,P128) + (0)*techMat(E2,P129) + (0)*techMat(E2,P130) + (0)*techMat(E2,P131) + (0)*techMat(E2,P132)
     
      + (0)*techMat(E2,P133) + (0)*techMat(E2,P134) + (0)*techMat(E2,P135) + (0)*techMat(E2,P136) + (0)*techMat(E2,P137) + (0)*techMat(E2,P138) + (0)*techMat(E2,P139) + (0)*techMat(E2,P140) + (0)*techMat(E2,P141) + (0)*techMat(E2,P142)
     
      + (0)*techMat(E2,P143) + (0)*techMat(E2,P144) + (0)*techMat(E2,P145) + (0)*techMat(E2,P146) + (0)*techMat(E2,P147) + (0)*techMat(E2,P148) + (0)*techMat(E2,P149) + (0)*techMat(E2,P150) =E= 0 ; (LHS = 0)
     
processLCA(E3)..  (0)*s(P1) + (0)*s(P2) - (907.18)*s(P3) + (0)*s(P4) + (0)*s(P5) + (0)*s(P6) + (0)*s(P7) + (0)*s(P8) + (0)*s(P9) + (0)*s(P10) + (0)*s(P11) + (0)*s(P12) + (0)*s(P13) + (0)*s(P14) + (0)*s(P15) + (0)*s(P16) + (0)*s(P17) + (0)*s(P18)
     
      + (0)*s(P19) + (0)*s(P20) + (0)*s(P21) + (0)*s(P22) + (0)*s(P23) + (0)*s(P24) + (0)*s(P25) + (0)*s(P26) + (0)*s(P27) + (0)*s(P28) + (0)*s(P29) + (0)*s(P30) + (0)*s(P31) + (0)*s(P32) + (0)*s(P33) + (0)*s(P34) + (0)*s(P35) + (0)*s(P36) + (0)*s(P37)
     
      + (0)*s(P38) + (0)*s(P39) + (0)*s(P40) + (0)*s(P41) + (0)*s(P42) + (0)*s(P43) + (0)*s(P44) + (0)*s(P45) + (0)*s(P46) + (0)*s(P47) + (0)*s(P48) + (0)*s(P49) + (0)*s(P50) + (0)*s(P51) + (0)*s(P52) + (0)*s(P53) + (0)*s(P54) + (0)*s(P55) + (0)*s(P56)
     
      + (0)*s(P57) + (0)*s(P58) + (0)*s(P59) + (0)*s(P60) + (0)*s(P61) + (0)*s(P62) + (0)*s(P63) + (0)*s(P64) + (0)*s(P65) + (0)*s(P66) + (0)*s(P67) + (0)*s(P68) + (0)*s(P69) + (0)*s(P70) + (0)*s(P71) + (0)*s(P72) + (0)*s(P73) + (0)*s(P74) + (0)*s(P75)
     
      + (0)*s(P76) + (0)*s(P77) + (0)*s(P78) + (0)*s(P79) + (0)*s(P80) + (0)*s(P81) + (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P87) + (0)*s(P88) + (0)*s(P89) + (0)*s(P90) + (0)*s(P91) + (0)*s(P92) + (0)*s(P93) + (0)*s(P94)
     
      + (0)*s(P95) + (0)*s(P96) + (0)*s(P97) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P103) + (0)*s(P104) + (0)*s(P105) + (0)*s(P106) + (0)*s(P107) + (907.18)*s(P108) + (907.18)*s(P109) + (907.18)*s(P110)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 555


     processLCA  =E=  fundamental equation     
     
      + (907.18)*s(P111) + (907.18)*s(P112) + (0)*s(P113) + (907.18)*s(P114) + (0)*s(P115) + (0)*s(P116) + (0)*s(P117) + (907.18)*s(P118) + (907.18)*s(P119) + (907.18)*s(P120) + (907.18)*s(P121) + (0)*s(P122) + (0)*s(P123) + (0)*s(P124) + (0)*s(P125)
     
      + (0)*s(P126) + (0)*s(P127) + (0)*s(P128) + (0)*s(P129) + (0)*s(P130) + (0)*s(P131) + (0)*s(P132) + (0)*s(P133) + (0)*s(P134) + (0)*s(P135) + (0)*s(P136) + (0)*s(P137) + (0)*s(P138) + (0)*s(P139) + (0)*s(P140) + (0)*s(P141) + (0)*s(P142)
     
      + (0)*s(P143) + (0)*s(P144) + (0)*s(P145) + (0)*s(P146) + (0)*s(P147) + (0)*s(P148) + (0)*s(P149) + (0)*s(P150) + f(E3) + (0)*techMat(E3,P1) + (0)*techMat(E3,P2) + (0)*techMat(E3,P3) + (0)*techMat(E3,P4) + (0)*techMat(E3,P5) + (0)*techMat(E3,P6)
     
      + (0)*techMat(E3,P7) + (0)*techMat(E3,P8) + (0)*techMat(E3,P9) + (0)*techMat(E3,P10) + (0)*techMat(E3,P11) + (0)*techMat(E3,P12) + (0)*techMat(E3,P13) + (0)*techMat(E3,P14) + (0)*techMat(E3,P15) + (0)*techMat(E3,P16) + (0)*techMat(E3,P17)
     
      + (0)*techMat(E3,P18) + (0)*techMat(E3,P19) + (0)*techMat(E3,P20) + (0)*techMat(E3,P21) + (0)*techMat(E3,P22) + (0)*techMat(E3,P23) + (0)*techMat(E3,P24) + (0)*techMat(E3,P25) + (0)*techMat(E3,P26) + (0)*techMat(E3,P27) + (0)*techMat(E3,P28)
     
      + (0)*techMat(E3,P29) + (0)*techMat(E3,P30) + (0)*techMat(E3,P31) + (0)*techMat(E3,P32) + (0)*techMat(E3,P33) + (0)*techMat(E3,P34) + (0)*techMat(E3,P35) + (0)*techMat(E3,P36) + (0)*techMat(E3,P37) + (0)*techMat(E3,P38) + (0)*techMat(E3,P39)
     
      + (0)*techMat(E3,P40) + (0)*techMat(E3,P41) + (0)*techMat(E3,P42) + (0)*techMat(E3,P43) + (0)*techMat(E3,P44) + (0)*techMat(E3,P45) + (0)*techMat(E3,P46) + (0)*techMat(E3,P47) + (0)*techMat(E3,P48) + (0)*techMat(E3,P49) + (0)*techMat(E3,P50)
     
      + (0)*techMat(E3,P51) + (0)*techMat(E3,P52) + (0)*techMat(E3,P53) + (0)*techMat(E3,P54) + (0)*techMat(E3,P55) + (0)*techMat(E3,P56) + (0)*techMat(E3,P57) + (0)*techMat(E3,P58) + (0)*techMat(E3,P59) + (0)*techMat(E3,P60) + (0)*techMat(E3,P61)
     
      + (0)*techMat(E3,P62) + (0)*techMat(E3,P63) + (0)*techMat(E3,P64) + (0)*techMat(E3,P65) + (0)*techMat(E3,P66) + (0)*techMat(E3,P67) + (0)*techMat(E3,P68) + (0)*techMat(E3,P69) + (0)*techMat(E3,P70) + (0)*techMat(E3,P71) + (0)*techMat(E3,P72)
     
      + (0)*techMat(E3,P73) + (0)*techMat(E3,P74) + (0)*techMat(E3,P75) + (0)*techMat(E3,P76) + (0)*techMat(E3,P77) + (0)*techMat(E3,P78) + (0)*techMat(E3,P79) + (0)*techMat(E3,P80) + (0)*techMat(E3,P81) + (0)*techMat(E3,P82) + (0)*techMat(E3,P83)
     
      + (0)*techMat(E3,P84) + (0)*techMat(E3,P85) + (0)*techMat(E3,P86) + (0)*techMat(E3,P87) + (0)*techMat(E3,P88) + (0)*techMat(E3,P89) + (0)*techMat(E3,P90) + (0)*techMat(E3,P91) + (0)*techMat(E3,P92) + (0)*techMat(E3,P93) + (0)*techMat(E3,P94)
     
      + (0)*techMat(E3,P95) + (0)*techMat(E3,P96) + (0)*techMat(E3,P97) + (0)*techMat(E3,P98) + (0)*techMat(E3,P99) + (0)*techMat(E3,P100) + (0)*techMat(E3,P101) + (0)*techMat(E3,P102) + (0)*techMat(E3,P103) + (0)*techMat(E3,P104) + (0)*techMat(E3,P105)
     
      + (0)*techMat(E3,P106) + (0)*techMat(E3,P107) + (0)*techMat(E3,P108) + (0)*techMat(E3,P109) + (0)*techMat(E3,P110) + (0)*techMat(E3,P111) + (0)*techMat(E3,P112) + (0)*techMat(E3,P113) + (0)*techMat(E3,P114) + (0)*techMat(E3,P115)
     
      + (0)*techMat(E3,P116) + (0)*techMat(E3,P117) + (0)*techMat(E3,P118) + (0)*techMat(E3,P119) + (0)*techMat(E3,P120) + (0)*techMat(E3,P121) + (0)*techMat(E3,P122) + (0)*techMat(E3,P123) + (0)*techMat(E3,P124) + (0)*techMat(E3,P125)
     
      + (0)*techMat(E3,P126) + (0)*techMat(E3,P127) + (0)*techMat(E3,P128) + (0)*techMat(E3,P129) + (0)*techMat(E3,P130) + (0)*techMat(E3,P131) + (0)*techMat(E3,P132) + (0)*techMat(E3,P133) + (0)*techMat(E3,P134) + (0)*techMat(E3,P135)
     
      + (0)*techMat(E3,P136) + (0)*techMat(E3,P137) + (0)*techMat(E3,P138) + (0)*techMat(E3,P139) + (0)*techMat(E3,P140) + (0)*techMat(E3,P141) + (0)*techMat(E3,P142) + (0)*techMat(E3,P143) + (0)*techMat(E3,P144) + (0)*techMat(E3,P145)
     
      + (0)*techMat(E3,P146) + (0)*techMat(E3,P147) + (0)*techMat(E3,P148) + (0)*techMat(E3,P149) + (0)*techMat(E3,P150) =E= 0 ; (LHS = 0)
     
REMAINING 133 ENTRIES SKIPPED


---- zeroIntermediates  =E=  

zeroIntermediates(E1)..  f(E1) =E= 0 ; (LHS = 0)
     
zeroIntermediates(E2)..  f(E2) =E= 0 ; (LHS = 0)
     
zeroIntermediates(E3)..  f(E3) =E= 0 ; (LHS = 0)
     
REMAINING 109 ENTRIES SKIPPED

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 555


---- homeDemand  =E=  home demand constraint

homeDemand(P87)..  (22072)*s(P87) + (0)*techMat(E84,P87) + (0)*techMat(E85,P87) + (0)*techMat(E86,P87) + (0)*techMat(E87,P87) + (0)*techMat(E88,P87) + (0)*techMat(E127,P87) =E= 3878 ; (LHS = 0, INFES = 3878 ****)
     

---- stockEqns  =E=  percent stock constraint

stockEqns..  - s(P82) - s(P83) - s(P84) - s(P85) - s(P86) + (1.1347)*s(P87) - s(P132) + (0)*techMat(E97,P87) =E= 0 ; (LHS = 0)
     

---- eqs1  =E=  

eqs1..  (0.1765)*s(P82) + (1)*s(P83) + (1)*s(P84) + (1)*s(P85) + (1)*s(P86) + (1)*s(P132) + (0)*techMat(E92,P92) + (0)*techMat(E97,P92) =E= 0 ; (LHS = 0)
     

---- eqs2  =E=  

eqs2..  (1)*s(P82) + (0.1765)*s(P83) + (1)*s(P84) + (1)*s(P85) + (1)*s(P86) + (1)*s(P132) + (0)*techMat(E93,P92) + (0)*techMat(E97,P92) =E= 0 ; (LHS = 0)
     

---- eqs3  =E=  

eqs3..  (1)*s(P82) + (1)*s(P83) + (0.1765)*s(P84) + (1)*s(P85) + (1)*s(P86) + (1)*s(P132) + (0)*techMat(E94,P92) + (0)*techMat(E97,P92) =E= 0 ; (LHS = 0)
     

---- eqs4  =E=  

eqs4..  (1)*s(P82) + (1)*s(P83) + (1)*s(P84) + (0.1765)*s(P85) + (1)*s(P86) + (1)*s(P132) + (0)*techMat(E95,P92) + (0)*techMat(E97,P92) =E= 0 ; (LHS = 0)
     

---- eqs5  =E=  

eqs5..  (1)*s(P82) + (1)*s(P83) + (1)*s(P84) + (1)*s(P85) + (0.1765)*s(P86) + (1)*s(P132) + (0)*techMat(E96,P92) + (0)*techMat(E97,P92) =E= 0 ; (LHS = 0)
     

---- eqs6  =E=  

eqs6..  (1)*s(P82) + (1)*s(P83) + (1)*s(P84) + (1)*s(P85) + (1)*s(P86) + (0.1765)*s(P132) + (0)*techMat(E97,P92) + (0)*techMat(E128,P92) =E= 0 ; (LHS = 0)
     

---- eqs7  =E=  

eqs7..  - (4.1175)*s(P92) + 907.18*s(P106) + (0)*techMat(E97,P92) =E= 0 ; (LHS = 0)
     

---- eqnPchoiceitems  =E=  

eqnPchoiceitems(E84)..  (20)*s(P87) + (0)*techMat(E84,P87) + pchoiceitems(E84) =E= 0 ; (LHS = 0)
     
eqnPchoiceitems(E85)..  (30)*s(P87) + (0)*techMat(E85,P87) + pchoiceitems(E85) =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 555


     eqnPchoiceitems  =E=  

eqnPchoiceitems(E86)..  (20)*s(P87) + (0)*techMat(E86,P87) + pchoiceitems(E86) =E= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- costInput  =E=  

costInput..  - 808.080808080808*techMat(E92,P92) - 1000*techMat(E93,P92) - 1090.90909090909*techMat(E94,P92) - 1252.52525252525*techMat(E95,P92) - 2525.25252525253*techMat(E96,P92) - 449.49494949495*techMat(E128,P92) + normalizedcostInput =E= 0 ;
     
      (LHS = -7126.26262626263, INFES = 7126.26262626263 ****)
     

---- pdtcost  =E=  

pdtcost..  (0)*s(P77) + (0)*s(P78) + (0)*s(P79) + (0)*s(P80) + (0)*s(P81) - 0.05*s(P82) - 0.05*s(P83) - 0.05*s(P84) - 0.05*s(P85) - 0.05*s(P86) - (0.05)*s(P132) + (0)*normalizedcostInput + productionCostResin =E= 0 ; (LHS = 0)
     

---- eql1  =E=  

eql1..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql2  =E=  

eql2..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql3  =E=  

eql3..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql4  =E=  

eql4..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql5  =E=  

eql5..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql6  =E=  

eql6..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 555


---- eql7  =E=  

eql7..  - 5*s(P98) - 5*s(P99) - 5*s(P100) - 5*s(P101) - 5*s(P102) + s(P103) - 5*s(P136) =E= 0 ; (LHS = 0)
     

---- loss_l  =E=  

loss_l..  - 907.18*s(P98) - 907.18*s(P99) - 907.18*s(P100) - 907.18*s(P101) - 907.18*s(P102) - 907.18*s(P136) + lossLandfill =E= 0 ; (LHS = 0)
     

---- eqi1  =E=  

eqi1..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi2  =E=  

eqi2..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi3  =E=  

eqi3..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi4  =E=  

eqi4..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi5  =E=  

eqi5..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi6  =E=  

eqi6..  (0)*s(P32) + (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi7  =E=  

eqi7..  - 5*s(P108) - 5*s(P109) - 5*s(P110) - 5*s(P111) - 5*s(P112) + s(P114) - 5*s(P137) =E= 0 ; (LHS = 0)
     

---- loss_i  =E=  

loss_i..  - (670.356975581251)*s(P108) - (716.842044255556)*s(P109) - (732.080316307408)*s(P110) - (843.205081122581)*s(P111) - (875.4484402368)*s(P112) - (670.356975581251)*s(P118) - (716.842044255556)*s(P119) - (732.080316307408)*s(P120)
     
      - (843.205081122581)*s(P121) - (1562.84349558052)*s(P137) + (0)*techMat(E107,P108) + (0)*techMat(E107,P109) + (0)*techMat(E107,P110) + (0)*techMat(E107,P111) + (0)*techMat(E107,P112) + (0)*techMat(E107,P118) + (0)*techMat(E107,P119)
     
      + (0)*techMat(E107,P120) + (0)*techMat(E107,P121) + (0)*techMat(E107,P137) + lossIncineration =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 555


---- loss_b  =E=  

loss_b..  (0)*s(P115) + 0.041*s(P116) + (0)*s(P122) + (0)*s(P123) + (0)*s(P124) + (0)*s(P125) + (0)*techMat(E91,P115) + (0)*normalizedcostInput + (0)*lossBioFuel =E= 0 ; (LHS = 0)
     

---- cost_c  =E=  

cost_c..  - 27.38141394*s(P104) - 27.38141394*s(P105) - 27.38141394*s(P117) + costBenifitCompost =E= 0 ; (LHS = 0)
     

---- cc2  =E=  

cc2..  - 1240*s(P104) - 2500*s(P105) + cbc2 =E= 0 ; (LHS = 0)
     

---- loss_c  =E=  

loss_c..  (0)*s(P104) + (0)*s(P105) + (0)*s(P117) + (0)*costBenifitCompost + (0)*lossCompost =E= 0 ; (LHS = 0)
     

---- DoC_obj  =E=  

DoC_obj..  (0)*productionCostResin - costBenifitCompost + (0)*DoC - (1)*costRecycled - costIn - costPy - costCl - costLu - cost_inn =E= 0 ; (LHS = 0)
     

---- Cost_obj  =E=  

Cost_obj..  - 0.0496*s(P1) - 0.01624*s(P2) - 0.1766*s(P7) - 0.559977*s(P12) - 0.12996*s(P14) - 0.067*s(P17) - 0.37725*s(P18) - 0.067*s(P21) - 0.0287605*s(P26) - 0.1766*s(P39) - 110.2293*s(P42) - 0.12*s(P49) - 80*s(P52) - 0.13227*s(P57) - 0.022046*s(P58)
     
      - 0.020923*s(P59) - 3.0442E-8*s(P76) + costBenifitCompost + Cost =E= 0 ; (LHS = 0)
     

---- Cost_obj1  =E=  

Cost_obj1..  0.11*pchoiceitems(E84) + 0.18*pchoiceitems(E85) + 0.6*pchoiceitems(E86) + 0.14*pchoiceitems(E87) + 0.1*pchoiceitems(E88) + CostBag =E= 0 ; (LHS = 0)
     

---- costRecycled1  =E=  

costRecycled1..  - 0.495*s(P93) - 0.5445*s(P94) - 0.594*s(P95) - 0.186*s(P96) + 0.90718*costRecycled =E= 0 ; (LHS = 0)
     

---- costIn1  =E=  

costIn1..  - (208.843249999999)*s(P108) - (207.714649999999)*s(P109) - (208.456599999999)*s(P110) - (87.4455999999997)*s(P111) - (87.4455999999997)*s(P112) - (208.843249999999)*s(P118) - (207.714649999999)*s(P119) - (208.456599999999)*s(P120)
     
      - (87.4455999999997)*s(P121) - (123.376666666667)*s(P137) + (0)*techMat(E107,P108) + (0)*techMat(E107,P109) + (0)*techMat(E107,P110) + (0)*techMat(E107,P111) + (0)*techMat(E107,P112) + (0)*techMat(E107,P118) + (0)*techMat(E107,P119)
     
      + (0)*techMat(E107,P120) + (0)*techMat(E107,P121) + (0)*techMat(E107,P137) + costIn =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 555


---- costPy1  =E=  

costPy1..  - 0.041*s(P116) + costPy =E= 0 ; (LHS = 0)
     

---- costCl1  =E=  

costCl1..  - 0.034*s(P129) + costCl =E= 0 ; (LHS = 0)
     

---- costLu1  =E=  

costLu1..  - 0.036*s(P130) + costLu =E= 0 ; (LHS = 0)
     

---- cost_inn1  =E=  

cost_inn1..  - 2.1*s(P140) - 1.4*s(P145) - 1.65*s(P146) - 0.8253*s(P147) - 1.0028*s(P149) - 1.3528*s(P150) + cost_inn =E= 0 ; (LHS = 0)
     

---- totmassproduced  =E=  

totmassproduced(P82)..  - s(P82) + (0)*pchoicemass(P82) + (0)*totpdtmass =E= 0 ; (LHS = 0)
     
totmassproduced(P83)..  - s(P83) + (0)*pchoicemass(P83) + (0)*totpdtmass =E= 0 ; (LHS = 0)
     
totmassproduced(P84)..  - s(P84) + (0)*pchoicemass(P84) + (0)*totpdtmass =E= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- eqtotpdtmass  =E=  

eqtotpdtmass..  - s(P82) - s(P83) - s(P84) - s(P85) - s(P86) - s(P132) + totpdtmass =E= 0 ; (LHS = 0)
     

---- eqw1  =E=  

eqw1..  - (0.8235)*s(P92) + (0)*techMat(E97,P92) + wasteMgmtValues(Reprocess) =E= 0 ; (LHS = 0)
     

---- eqw2  =E=  

eqw2..  - (0.138916666666667)*s(P115) + (0)*techMat(E91,P115) + (0)*techMat(E97,P115) + wasteMgmtValues(Pyrolysis) =E= 0 ; (LHS = 0)
     

---- eqw3  =E=  

eqw3..  - (857.18)*s(P98) - (857.18)*s(P99) - (857.18)*s(P100) - (857.18)*s(P101) - (857.18)*s(P102) - 907.18*s(P113) + 45*s(P114) - (877.18)*s(P136) + (0)*techMat(E97,P98) + (0)*techMat(E97,P99) + (0)*techMat(E97,P100) + (0)*techMat(E97,P101)
     
      + (0)*techMat(E97,P102) + (0)*techMat(E97,P136) + wasteMgmtValues(Landfill) =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 555


---- eqw4  =E=  

eqw4..  - (897.18)*s(P108) - (897.18)*s(P109) - (897.18)*s(P110) - (897.18)*s(P111) - (897.18)*s(P112) - (897.18)*s(P118) - (897.18)*s(P119) - (897.18)*s(P120) - (897.18)*s(P121) - (1754.36)*s(P137) + (0)*techMat(E97,P108) + (0)*techMat(E97,P109)
     
      + (0)*techMat(E97,P110) + (0)*techMat(E97,P111) + (0)*techMat(E97,P112) + (0)*techMat(E97,P118) + (0)*techMat(E97,P119) + (0)*techMat(E97,P120) + (0)*techMat(E97,P121) + (0)*techMat(E97,P137) + wasteMgmtValues(Incineration) =E= 0 ; (LHS = 0)
     

---- impactValues  =E=  

impactValues(I1)..  0.73*s(P12) + g(I1) =E= 0 ; (LHS = 0)
     
impactValues(I2)..  - 0.000265*s(P12) + g(I2) =E= 0 ; (LHS = 0)
     
impactValues(I3)..  - 4E-6*s(P2) - 0.000405*s(P12) - 4E-6*s(P26) - 0.167*s(P42) - 0.45359*s(P46) - 3.5E-5*s(P52) - 4E-6*s(P59) - 2.1E-5*s(P66) - 3.5E-5*s(P71) - 4E-6*s(P76) + g(I3) =E= 0 ; (LHS = 0)
     
REMAINING 2910 ENTRIES SKIPPED


---- eqMPI  =E=  

eqMPI(MPI1)..  - 0.01*g(I3) - 3.45*g(I10) - 3.45*g(I30) - 0.01*g(I40) - 0.2*g(I105) - 7.04*g(I139) - 3.45*g(I172) - 0.01*g(I192) - 3.45*g(I212) - 7.04*g(I236) - 0.2*g(I388) - 0.2*g(I389) - 0.2*g(I631) - 0.01*g(I708) - 7.04*g(I712) - 7.04*g(I742)
     
      - 7.04*g(I839) - 0.2*g(I890) - 3.45*g(I895) - 7.04*g(I1016) - 0.2*g(I1023) - 3.45*g(I1059) - 7.04*g(I1137) - 7.04*g(I1227) - 7.04*g(I1293) - 3.45*g(I1304) - 0.01*g(I1415) - 3.45*g(I1454) - 0.2*g(I1471) - 3.45*g(I1491) - 0.01*g(I1512) - 3.45*g(I1557)
     
      - 0.2*g(I1596) - 7.04*g(I1678) - 7.04*g(I1724) - 7.04*g(I1730) - 0.2*g(I1868) - 0.01*g(I1883) - 0.2*g(I1922) - 7.04*g(I1929) - 3.45*g(I2056) - 0.2*g(I2193) - 0.2*g(I2235) - 7.04*g(I2303) - 0.01*g(I2314) - 7.04*g(I2518) - 3.45*g(I2552)
     
      - 7.04*g(I2649) - 7.04*g(I2661) - 7.04*g(I2711) - 0.2*g(I2731) - 3.45*g(I2733) - 0.01*g(I2756) - 3.45*g(I2852) - 3.45*g(I2854) + mp_indicators(MPI1) =E= 0 ; (LHS = 0)
     
eqMPI(MPI2)..  - 0.01*g(I101) - 0.63*g(I108) - 0.63*g(I124) - 0.63*g(I163) - 0.63*g(I277) - 0.63*g(I372) - 0.63*g(I384) - 0.01*g(I411) - 0.01*g(I509) - 0.63*g(I572) - 0.63*g(I593) - 0.01*g(I604) - 0.63*g(I624) - 0.63*g(I640) - 0.63*g(I692) - 0.01*g(I705)
     
      - 0.01*g(I720) - 0.01*g(I752) - 0.63*g(I758) - 0.01*g(I856) - 0.63*g(I913) - 0.01*g(I986) - 0.63*g(I994) - 0.01*g(I1051) - 0.63*g(I1118) - 0.63*g(I1208) - 0.01*g(I1236) - 0.01*g(I1257) - 0.01*g(I1349) - 0.01*g(I1679) - 0.63*g(I1709) - 0.01*g(I1760)
     
      - 0.01*g(I1860) - 0.01*g(I1944) - 0.63*g(I1966) - 0.63*g(I1984) - 0.63*g(I2037) - 0.63*g(I2063) - 0.63*g(I2083) - 0.01*g(I2093) - 0.63*g(I2199) - 0.01*g(I2201) - 0.63*g(I2226) - 0.01*g(I2229) - 0.01*g(I2237) - 0.63*g(I2290) - 0.01*g(I2293)
     
      - 0.01*g(I2310) - 0.01*g(I2464) - 0.01*g(I2474) - 0.63*g(I2503) - 0.63*g(I2583) - 0.63*g(I2663) - 0.63*g(I2664) - 0.63*g(I2685) - 0.63*g(I2746) - 0.63*g(I2791) - 0.01*g(I2862) + mp_indicators(MPI2) =E= 0 ; (LHS = 0)
     
eqMPI(MPI3)..  - 0.22*g(I10) - 0.22*g(I30) - 0.22*g(I172) - 0.22*g(I212) - 0.22*g(I895) - 0.22*g(I1059) - 0.22*g(I1304) - 0.22*g(I1454) - 0.22*g(I1491) - 0.22*g(I1557) - 0.22*g(I2056) - 0.22*g(I2552) - 0.22*g(I2733) - 0.22*g(I2852) - 0.22*g(I2854)
     
      + mp_indicators(MPI3) =E= 0 ; (LHS = 0)
     
REMAINING 7 ENTRIES SKIPPED


---- eq_gwp  =E=  

eq_gwp..  0.15*s(P116) - mp_indicators(MPI4) + gwp =E= 0 ; (LHS = 0)
     

---- addCons1  =E=  

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 23
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 555


     addCons1  =E=  

addCons1..  gwp + slack1 =E= 6.1275 ; (LHS = 0, INFES = 6.1275 ****)
     

---- addCons2  =E=  

addCons2..  Cost + slack2 =E= 2.29876 ; (LHS = 0, INFES = 2.29876 ****)
     

---- addCons3  =G=  

                NONE


---- eps1  =E=  

eps1..  - DoC + EPS*slack1 + EPS*slack2 + epsObj =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 24
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


---- s  scaling factors

s(P1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
      (-1)      processLCA(E1)
       (0)      processLCA(E2)
       (0)      processLCA(E3)
       (0)      processLCA(E4)
       (0)      processLCA(E5)
       (0)      processLCA(E6)
       (0)      processLCA(E7)
 (8.3600000E-7) processLCA(E8)
       (0)      processLCA(E9)
       (0.0004) processLCA(E10)
       (0)      processLCA(E11)
       (0)      processLCA(E12)
       (0)      processLCA(E13)
       (0)      processLCA(E14)
       (0)      processLCA(E15)
 (8.7000000E-7) processLCA(E16)
       (0)      processLCA(E17)
       (0)      processLCA(E18)
       (0)      processLCA(E19)
       (0)      processLCA(E20)
       (0.1393) processLCA(E21)
       (0.0002) processLCA(E22)
       (0)      processLCA(E23)
       (0)      processLCA(E24)
       (0)      processLCA(E25)
       (0)      processLCA(E26)
       (0)      processLCA(E27)
       (0)      processLCA(E28)
       (0)      processLCA(E29)
       (0)      processLCA(E30)
       (0)      processLCA(E31)
       (0)      processLCA(E32)
       (0)      processLCA(E33)
       (0)      processLCA(E34)
       (0)      processLCA(E35)
       (0)      processLCA(E36)
       (0)      processLCA(E37)
       (0)      processLCA(E38)
       (0)      processLCA(E39)
 (8.8000000E-6) processLCA(E40)
       (0)      processLCA(E41)
       (0)      processLCA(E42)
       (0)      processLCA(E43)
       (0)      processLCA(E44)
       (0)      processLCA(E45)
       (0)      processLCA(E46)
       (0)      processLCA(E47)
       (0)      processLCA(E48)
       (0)      processLCA(E49)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 25
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


     s  scaling factors

       (0)      processLCA(E50)
       (0)      processLCA(E51)
       (0)      processLCA(E52)
       (0)      processLCA(E53)
       (0)      processLCA(E54)
       (0)      processLCA(E55)
       (0)      processLCA(E56)
       (0)      processLCA(E57)
       (0)      processLCA(E58)
       (0)      processLCA(E59)
       (0)      processLCA(E60)
       (0)      processLCA(E61)
       (0)      processLCA(E62)
       (0)      processLCA(E63)
       (0)      processLCA(E64)
       (0)      processLCA(E65)
       (0)      processLCA(E66)
       (0)      processLCA(E67)
       (0)      processLCA(E68)
       (0)      processLCA(E69)
       (0)      processLCA(E70)
       (0)      processLCA(E71)
       (0)      processLCA(E72)
       (0)      processLCA(E73)
       (0)      processLCA(E74)
       (0)      processLCA(E75)
       (0)      processLCA(E76)
       (0)      processLCA(E77)
       (0)      processLCA(E78)
       (0)      processLCA(E79)
       (0)      processLCA(E80)
       (0)      processLCA(E81)
       (0)      processLCA(E82)
       (0)      processLCA(E83)
       (0)      processLCA(E84)
       (0)      processLCA(E85)
       (0)      processLCA(E86)
       (0)      processLCA(E87)
       (0)      processLCA(E88)
       (0)      processLCA(E89)
       (0)      processLCA(E90)
       (0)      processLCA(E91)
       (0)      processLCA(E92)
       (0)      processLCA(E93)
       (0)      processLCA(E94)
       (0)      processLCA(E95)
       (0)      processLCA(E96)
       (0)      processLCA(E97)
       (0)      processLCA(E98)
       (0)      processLCA(E99)
       (0)      processLCA(E100)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 26
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


     s  scaling factors

       (0)      processLCA(E101)
       (0)      processLCA(E102)
       (0)      processLCA(E103)
       (0)      processLCA(E104)
       (0)      processLCA(E105)
       (0)      processLCA(E106)
       (0)      processLCA(E107)
       (0)      processLCA(E108)
       (0)      processLCA(E109)
       (0)      processLCA(E110)
       (0)      processLCA(E111)
       (0)      processLCA(E112)
       (0)      processLCA(E113)
       (0)      processLCA(E114)
       (0)      processLCA(E115)
       (0)      processLCA(E116)
       (0)      processLCA(E117)
       (0)      processLCA(E118)
       (0)      processLCA(E119)
       (0)      processLCA(E120)
       (0)      processLCA(E121)
       (0)      processLCA(E122)
       (0)      processLCA(E123)
       (0)      processLCA(E124)
       (0)      processLCA(E125)
       (0)      processLCA(E126)
       (0)      processLCA(E127)
       (0)      processLCA(E128)
       (0)      processLCA(E129)
       (0)      processLCA(E130)
       (0)      processLCA(E131)
       (0)      processLCA(E132)
       (0)      processLCA(E133)
       (0)      processLCA(E134)
       (0)      processLCA(E135)
       (0)      processLCA(E136)
       -0.0496  Cost_obj
       -0.004   impactValues(I6)
  -2.600000E-5  impactValues(I13)
       -0.0001  impactValues(I49)
       -0.0016  impactValues(I125)
  -6.000000E-6  impactValues(I158)
        1.24    impactValues(I159)
  -9.000000E-6  impactValues(I160)
        0.235   impactValues(I1473)

s(P2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      processLCA(E1)
      (-0.0003) processLCA(E2)
       (0)      processLCA(E3)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 27
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


     s  scaling factors

       (0)      processLCA(E4)
       (0)      processLCA(E5)
 (1.1492253E-6) processLCA(E6)
       (0)      processLCA(E7)
       (0)      processLCA(E8)
       (0.6522) processLCA(E9)
       (0)      processLCA(E10)
       (0)      processLCA(E11)
       (0)      processLCA(E12)
       (0)      processLCA(E13)
       (0)      processLCA(E14)
       (0)      processLCA(E15)
 (2.7229757E-5) processLCA(E16)
       (0.5152) processLCA(E17)
       (1.0185) processLCA(E18)
       (0)      processLCA(E19)
       (0)      processLCA(E20)
       (0)      processLCA(E21)
       (0.0111) processLCA(E22)
       (0)      processLCA(E23)
       (0)      processLCA(E24)
       (0)      processLCA(E25)
       (0)      processLCA(E26)
       (0)      processLCA(E27)
       (0)      processLCA(E28)
       (0)      processLCA(E29)
       (0)      processLCA(E30)
       (0)      processLCA(E31)
       (0)      processLCA(E32)
       (0)      processLCA(E33)
       (0)      processLCA(E34)
       (0)      processLCA(E35)
       (0)      processLCA(E36)
       (0.001)  processLCA(E37)
       (0.0003) processLCA(E38)
       (0)      processLCA(E39)
       (0)      processLCA(E40)
       (0)      processLCA(E41)
       (0)      processLCA(E42)
       (0)      processLCA(E43)
       (0)      processLCA(E44)
       (0)      processLCA(E45)
       (0)      processLCA(E46)
       (0)      processLCA(E47)
       (0)      processLCA(E48)
       (0)      processLCA(E49)
       (0)      processLCA(E50)
       (0)      processLCA(E51)
       (0)      processLCA(E52)
       (0)      processLCA(E53)
       (0)      processLCA(E54)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 28
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


     s  scaling factors

       (0)      processLCA(E55)
       (0)      processLCA(E56)
       (0)      processLCA(E57)
       (0)      processLCA(E58)
       (0)      processLCA(E59)
       (0)      processLCA(E60)
       (0)      processLCA(E61)
       (0)      processLCA(E62)
       (0)      processLCA(E63)
       (0)      processLCA(E64)
       (0)      processLCA(E65)
       (0)      processLCA(E66)
       (0)      processLCA(E67)
       (0)      processLCA(E68)
       (0)      processLCA(E69)
       (0)      processLCA(E70)
       (0)      processLCA(E71)
       (0)      processLCA(E72)
       (0)      processLCA(E73)
       (0)      processLCA(E74)
       (0)      processLCA(E75)
       (0)      processLCA(E76)
       (0)      processLCA(E77)
       (0)      processLCA(E78)
       (0)      processLCA(E79)
       (0)      processLCA(E80)
       (0)      processLCA(E81)
       (0)      processLCA(E82)
       (0)      processLCA(E83)
       (0)      processLCA(E84)
       (0)      processLCA(E85)
       (0)      processLCA(E86)
       (0)      processLCA(E87)
       (0)      processLCA(E88)
       (0)      processLCA(E89)
       (0)      processLCA(E90)
       (0)      processLCA(E91)
       (0)      processLCA(E92)
       (0)      processLCA(E93)
       (0)      processLCA(E94)
       (0)      processLCA(E95)
       (0)      processLCA(E96)
       (0)      processLCA(E97)
       (0)      processLCA(E98)
       (0)      processLCA(E99)
       (0)      processLCA(E100)
       (0)      processLCA(E101)
       (0)      processLCA(E102)
       (0)      processLCA(E103)
       (0)      processLCA(E104)
       (0)      processLCA(E105)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 29
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


     s  scaling factors

       (0)      processLCA(E106)
       (0)      processLCA(E107)
       (0)      processLCA(E108)
       (0)      processLCA(E109)
       (0)      processLCA(E110)
       (0)      processLCA(E111)
       (0)      processLCA(E112)
       (0)      processLCA(E113)
       (0)      processLCA(E114)
       (0)      processLCA(E115)
       (0)      processLCA(E116)
       (0)      processLCA(E117)
       (0)      processLCA(E118)
       (0)      processLCA(E119)
       (0)      processLCA(E120)
       (0)      processLCA(E121)
       (0)      processLCA(E122)
       (0)      processLCA(E123)
       (0)      processLCA(E124)
       (0)      processLCA(E125)
       (0)      processLCA(E126)
       (0)      processLCA(E127)
       (0)      processLCA(E128)
       (0)      processLCA(E129)
       (0)      processLCA(E130)
       (0)      processLCA(E131)
       (0)      processLCA(E132)
       (0)      processLCA(E133)
       (0)      processLCA(E134)
       (0)      processLCA(E135)
       (0)      processLCA(E136)
       -0.0162  Cost_obj
  -4.000000E-6  impactValues(I3)
       -0.0004  impactValues(I4)
       -0.0004  impactValues(I10)
  -2.800000E-5  impactValues(I49)
  -1.000000E-6  impactValues(I90)
  -1.100000E-5  impactValues(I91)
  -3.700000E-5  impactValues(I109)
       -0.0003  impactValues(I146)
       -0.0002  impactValues(I176)
       -0.0007  impactValues(I179)
  -2.300000E-5  impactValues(I182)
  -3.400000E-5  impactValues(I185)
        0.0056  impactValues(I186)
        0.4899  impactValues(I190)
  -3.100000E-5  impactValues(I191)
  -1.500000E-5  impactValues(I192)
        4.4089  impactValues(I194)
       -0.0002  impactValues(I1468)

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 30
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


     s  scaling factors

s(P3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      processLCA(E1)
       (0)      processLCA(E2)
    (-907.18)   processLCA(E3)
       (0)      processLCA(E4)
       (0)      processLCA(E5)
       (0)      processLCA(E6)
       (0)      processLCA(E7)
       (0)      processLCA(E8)
       (0)      processLCA(E9)
       (0)      processLCA(E10)
       (0)      processLCA(E11)
       (0)      processLCA(E12)
       (0)      processLCA(E13)
       (0)      processLCA(E14)
       (0)      processLCA(E15)
       (0)      processLCA(E16)
       (0)      processLCA(E17)
       (0)      processLCA(E18)
       (0)      processLCA(E19)
       (0)      processLCA(E20)
       (0)      processLCA(E21)
       (0)      processLCA(E22)
       (0)      processLCA(E23)
       (0)      processLCA(E24)
       (0)      processLCA(E25)
       (0)      processLCA(E26)
       (0)      processLCA(E27)
       (0)      processLCA(E28)
       (0)      processLCA(E29)
       (0)      processLCA(E30)
       (0)      processLCA(E31)
     (335.16)   processLCA(E32)
       (0)      processLCA(E33)
       (0)      processLCA(E34)
       (0)      processLCA(E35)
       (0)      processLCA(E36)
       (0)      processLCA(E37)
       (0)      processLCA(E38)
       (0)      processLCA(E39)
       (0)      processLCA(E40)
       (0)      processLCA(E41)
       (0)      processLCA(E42)
       (0)      processLCA(E43)
       (0)      processLCA(E44)
       (0)      processLCA(E45)
       (0)      processLCA(E46)
       (0)      processLCA(E47)
       (0)      processLCA(E48)
       (0)      processLCA(E49)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 31
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


     s  scaling factors

       (0)      processLCA(E50)
       (0)      processLCA(E51)
       (0)      processLCA(E52)
       (0)      processLCA(E53)
       (0)      processLCA(E54)
       (0)      processLCA(E55)
       (0)      processLCA(E56)
       (0)      processLCA(E57)
       (0)      processLCA(E58)
       (0)      processLCA(E59)
       (0)      processLCA(E60)
       (0)      processLCA(E61)
       (0)      processLCA(E62)
       (0)      processLCA(E63)
       (0)      processLCA(E64)
       (0)      processLCA(E65)
       (0)      processLCA(E66)
       (0)      processLCA(E67)
       (0)      processLCA(E68)
       (0)      processLCA(E69)
       (0)      processLCA(E70)
       (0)      processLCA(E71)
       (0)      processLCA(E72)
       (0)      processLCA(E73)
       (0)      processLCA(E74)
       (0)      processLCA(E75)
       (0)      processLCA(E76)
       (0)      processLCA(E77)
       (0)      processLCA(E78)
       (0)      processLCA(E79)
       (0)      processLCA(E80)
       (0)      processLCA(E81)
       (0)      processLCA(E82)
       (0)      processLCA(E83)
       (0)      processLCA(E84)
       (0)      processLCA(E85)
       (0)      processLCA(E86)
       (0)      processLCA(E87)
       (0)      processLCA(E88)
       (0)      processLCA(E89)
       (0)      processLCA(E90)
       (0)      processLCA(E91)
       (0)      processLCA(E92)
       (0)      processLCA(E93)
       (0)      processLCA(E94)
       (0)      processLCA(E95)
       (0)      processLCA(E96)
       (0)      processLCA(E97)
       (0)      processLCA(E98)
       (0)      processLCA(E99)
       (0)      processLCA(E100)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 32
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


     s  scaling factors

       (0)      processLCA(E101)
       (0)      processLCA(E102)
       (0)      processLCA(E103)
       (0)      processLCA(E104)
       (0)      processLCA(E105)
       (0)      processLCA(E106)
       (0)      processLCA(E107)
       (0)      processLCA(E108)
       (0)      processLCA(E109)
       (0)      processLCA(E110)
       (0)      processLCA(E111)
       (0)      processLCA(E112)
       (0)      processLCA(E113)
       (0)      processLCA(E114)
       (0)      processLCA(E115)
       (0)      processLCA(E116)
       (0)      processLCA(E117)
       (0)      processLCA(E118)
       (0)      processLCA(E119)
       (0)      processLCA(E120)
       (0)      processLCA(E121)
       (0)      processLCA(E122)
       (0)      processLCA(E123)
       (0)      processLCA(E124)
       (0)      processLCA(E125)
       (0)      processLCA(E126)
       (0)      processLCA(E127)
       (0)      processLCA(E128)
       (0)      processLCA(E129)
       (0)      processLCA(E130)
       (0)      processLCA(E131)
       (0)      processLCA(E132)
       (0)      processLCA(E133)
       (0)      processLCA(E134)
       (0)      processLCA(E135)
       (0)      processLCA(E136)
       -8.9993  impactValues(I7)

REMAINING 147 ENTRIES SKIPPED

---- f  final demand

f(E1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       processLCA(E1)
        1       zeroIntermediates(E1)

f(E2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       processLCA(E2)
        1       zeroIntermediates(E2)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 33
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


     f  final demand


f(E3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       processLCA(E3)
        1       zeroIntermediates(E3)

REMAINING 133 ENTRIES SKIPPED

---- techMat  

techMat(E1,P1)
                (.LO, .L, .UP, .M = 1, 1, 1, 0)
       (0)      processLCA(E1)

techMat(E1,P2)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      processLCA(E1)

techMat(E1,P3)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      processLCA(E1)

REMAINING 20397 ENTRIES SKIPPED

---- pchoiceitems  

pchoiceitems(E84)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqnPchoiceitems(E84)
        0.11    Cost_obj1

pchoiceitems(E85)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqnPchoiceitems(E85)
        0.18    Cost_obj1

pchoiceitems(E86)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqnPchoiceitems(E86)
        0.6     Cost_obj1

REMAINING 3 ENTRIES SKIPPED

---- normalizedcostInput  

normalizedcostInput
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       costInput
       (0)      pdtcost
       (0)      loss_b

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 34
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


---- productionCostResin  

productionCostResin
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       pdtcost
       (0)      DoC_obj


---- lossLandfill  

lossLandfill
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       loss_l


---- lossIncineration  

lossIncineration
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       loss_i


---- lossBioFuel  

lossBioFuel
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      loss_b


---- costBenifitCompost  

costBenifitCompost
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       cost_c
       (0)      loss_c
       -1       DoC_obj
        1       Cost_obj


---- cbc2  

cbc2
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       cc2


---- lossCompost  

lossCompost
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      loss_c

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 35
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


---- DoC  

DoC
                (.LO, .L, .UP, .M = 0, 0, 2, 0)
       (0)      DoC_obj
       -1       eps1


---- Cost  

Cost
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Cost_obj
        1       addCons2


---- CostBag  

CostBag
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Cost_obj1


---- costRecycled  

costRecycled
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
      (-1)      DoC_obj
        0.9072  costRecycled1


---- costIn  

costIn
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       costIn1


---- costPy  

costPy
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       costPy1


---- costCl  

costCl
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       costCl1
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 36
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


     costCl  



---- costLu  

costLu
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       costLu1


---- cost_inn  

cost_inn
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       cost_inn1


---- pchoicemass  

pchoicemass(P82)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      totmassproduced(P82)

pchoicemass(P83)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      totmassproduced(P83)

pchoicemass(P84)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      totmassproduced(P84)

REMAINING 3 ENTRIES SKIPPED

---- totpdtmass  

totpdtmass
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      totmassproduced(P82)
       (0)      totmassproduced(P83)
       (0)      totmassproduced(P84)
       (0)      totmassproduced(P85)
       (0)      totmassproduced(P86)
       (0)      totmassproduced(P132)
        1       eqtotpdtmass

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 37
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


---- wasteMgmtValues  

wasteMgmtValues(Reprocess)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqw1

wasteMgmtValues(Pyrolysis)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqw2

wasteMgmtValues(Landfill)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqw3

REMAINING ENTRY SKIPPED

---- g  

g(I1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       impactValues(I1)

g(I2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       impactValues(I2)

g(I3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       impactValues(I3)
       -0.01    eqMPI(MPI1)

REMAINING 2910 ENTRIES SKIPPED

---- mp_indicators  

mp_indicators(MPI1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqMPI(MPI1)

mp_indicators(MPI2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqMPI(MPI2)

mp_indicators(MPI3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqMPI(MPI3)

REMAINING 7 ENTRIES SKIPPED
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 38
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 555


---- gwp  

gwp
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eq_gwp
        1       addCons1


---- slack1  

slack1
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       addCons1
           EPS  eps1


---- slack2  

slack2
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       addCons2
           EPS  eps1


---- epsObj  

epsObj
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eps1

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 39
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE ToyProblem Using NLP From line 555


MODEL STATISTICS

BLOCKS OF EQUATIONS          56     SINGLE EQUATIONS        3,232
BLOCKS OF VARIABLES          30     SINGLE VARIABLES       23,647
NON ZERO ELEMENTS        46,925     NON LINEAR N-Z         41,128
DERIVATIVE POOL              20     CONSTANT POOL              34
CODE LENGTH              62,175


GENERATION TIME      =        0.055 SECONDS     10 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.083 SECONDS     10 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 40
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE ToyProblem Using NLP From line 555


               S O L V E      S U M M A R Y

     MODEL   ToyProblem          OBJECTIVE  DoC
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  BARON               FROM LINE  555

**** SOLVER STATUS     8 User Interrupt            
**** MODEL STATUS      12 Error Unknown            
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          0.300      1000.000
 ITERATION COUNT, LIMIT        NA    2000000000
 EVALUATION ERRORS              0             0

GAMS/BARON       24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
Parts of the BARON software were created at the
University of Illinois at Urbana-Champaign.

--- Using Option File
Reading parameter(s) from "/home/thakker.8/Documents/project-codes/Design-SCE/baron.opt"
>>  DoLocal 0
>>  NumLoc 0
Finished reading from "/home/thakker.8/Documents/project-codes/Design-SCE/baron.opt"
*** no solution found

===========================================================================
 BARON version 16.8.24. Built: LNX-64 Wed Aug 24 08:52:24 EDT 2016

 If you use this software, please cite:
 Tawarmalani, M. and N. V. Sahinidis, A polyhedral
 branch-and-cut approach to global optimization,
 Mathematical Programming, 103(2), 225-249, 2005.

 BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
 Parts of the BARON software were created at the
 University of Illinois at Urbana-Champaign.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP: ILOG CPLEX                                      
===========================================================================
    The options used in solving the problem are as follows:

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 41
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE ToyProblem Using NLP From line 555


**** SOLVER STATUS FILE LISTED BELOW
=0GAMS/BARON       24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      
=C
=CGAMS/BARON       24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      
=C
=CBARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
=CParts of the BARON software were created at the
=CUniversity of Illinois at Urbana-Champaign.
=C
=C--- Using Option File
=CReading parameter(s) from "/home/thakker.8/Documents/project-codes/Design-SCE/baron.opt"
=C>>  DoLocal 0
=C>>  NumLoc 0
=CFinished reading from "/home/thakker.8/Documents/project-codes/Design-SCE/baron.opt"
 /home/thakker.8/Documents/project-codes/Design-SCE/225a/sum.dat    = problem    3232 23647 879 23705 -.100000000000E+52  2.00000000000     6 5 0 1 -3 1 0.3 0.33   
 skip       = 3232
 skip       = 23647
 skip       = 879
 skip       = 23705
 zlbest     = 2
 zub        = -1E51
 barstatus  = 6
 modelstatus= 5
 missingbnd = 0
 itera      = 1
 nodeopt    = -3
 nodememmax = 1
 totaltime  = 0.3
=9_
_2
===========================================================================
 BARON version 16.8.24. Built: LNX-64 Wed Aug 24 08:52:24 EDT 2016

 If you use this software, please cite:
 Tawarmalani, M. and N. V. Sahinidis, A polyhedral
 branch-and-cut approach to global optimization,
 Mathematical Programming, 103(2), 225-249, 2005.

 BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
 Parts of the BARON software were created at the
 University of Illinois at Urbana-Champaign.
_2
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP: ILOG CPLEX                                      
_2
===========================================================================
    The options used in solving the problem are as follows:
       maxtime        =  0.1000E+04
       maxiter        =      -1
       numsol         =       1
       firstfeas      =       0
       cutoff         =  0.1000E+52
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 42
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE ToyProblem Using NLP From line 555


       epsa           =  0.1000E-08
       epsr           =  0.1000E+00
       deltaterm      =       0
       deltaa         =  0.1000E+52
       deltar         =  0.1000E+01
       deltat         = -0.1000E+03
       boxtol         =  0.1000E-07
       isoltol        =  0.1000E-03
       absconfeastol  =  0.1000E-04
       relconfeastol  =  0.0000E+00
       absintfeastol  =  0.1000E-04
       relintfeastol  =  0.0000E+00
       results        =       1
       summary        =       1
       times          =       1
       prtimefreq     =  0.3000E+02
       prfreq         = 1000000
       prlevel        =       1
       numprint       =      -1
       numprintdual   =      -1
       bpint          =  0.5000E+01
       fraint         =  0.7000E+00
       minint         =  0.1000E-01
       lpsol          =       3
       nlpsol         =      -1
       allowminos     =       1
       allowsnopt     =       1
       allowexternal  =       1
       allowipopt     =       1
       allowfiltersd  =       1
       allowfiltersqp =       0
       baronx         =       F
       dolocal        =       0
       numloc         =       0
       locres         =       0
       pdo            =      -2
       brvarstra      =       0
       brptstra       =       0
       nodesel        =       0
       compiis        =       0
       iisint         =       1
       iisorder       =      -1
       threads        =       1
_2
===========================================================================
 Solving bounding LP
_2
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1             0.31   -0.100000E+52      2.00000    
_9=
=C*** no solution found
=C
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 43
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE ToyProblem Using NLP From line 555


=C===========================================================================
=C BARON version 16.8.24. Built: LNX-64 Wed Aug 24 08:52:24 EDT 2016
=C
=C If you use this software, please cite:
=C Tawarmalani, M. and N. V. Sahinidis, A polyhedral
=C branch-and-cut approach to global optimization,
=C Mathematical Programming, 103(2), 225-249, 2005.
=C
=C BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
=C Parts of the BARON software were created at the
=C University of Illinois at Urbana-Champaign.
=C===========================================================================
=C This BARON run may utilize the following subsolver(s)
=C For LP/MIP: ILOG CPLEX                                      
=C===========================================================================
=C    The options used in solving the problem are as follows:

**** SOLVER STATUS FILE LISTED ABOVE
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 44
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    612 VARIABLE pchoiceitems.L  

                      ( ALL       0.000 )


----    612 VARIABLE pchoicemass.L  

                      ( ALL       0.000 )


----    612 VARIABLE wasteMgmtValues.L  

                      ( ALL       0.000 )


----    613 VARIABLE DoC.L                 =        0.000  

----    614 VARIABLE Cost.L                =        0.000  

----    615 VARIABLE s.L  scaling factors

                      ( ALL       0.000 )


----    616 VARIABLE g.L  

                      ( ALL       0.000 )


----    617 VARIABLE cbc2.L                =        0.000  
            VARIABLE costBenifitCompost.L  =        0.000  
            VARIABLE lossCompost.L         =        0.000  
            VARIABLE lossIncineration.L    =        0.000  
            VARIABLE lossBioFuel.L         =        0.000  
            VARIABLE lossLandfill.L        =        0.000  

----    618 VARIABLE productionCostResin.L =        0.000  

----    619 VARIABLE mp_indicators.L  

                      ( ALL       0.000 )

**** Exec Error at line 657: division by zero (0)
**** Exec Error at line 658: division by zero (0)
**** Exec Error at line 662: division by zero (0)
**** Exec Error at line 663: division by zero (0)
**** Exec Error at line 665: division by zero (0)
**** Exec Error at line 666: division by zero (0)
**** Exec Error at line 670: division by zero (0)
**** Exec Error at line 671: division by zero (0)

----    722 PARAMETER recyclevalLDPE       =        0.000  
            PARAMETER recyclevalHDPE       =        0.000  
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     03/01/22 18:31:37 Page 45
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


            PARAMETER recyclevalPP         =        0.000  
            PARAMETER recyclevalPLA        =        0.000  
**** Exec Error at line 734: Execute has nonzero return code RC=1
**** Exec Error at line 740: Execute has nonzero return code RC=1

----    749 VARIABLE cD.L  

                      Pyrolysis    Landfill  Incinerat~  Segregati~

Curbside Collection        UNDF        UNDF        UNDF        UNDF
Dropoff                    UNDF        UNDF        UNDF        UNDF


**** REPORT FILE SUMMARY

pareto /home/thakker.8/Documents/project-codes/Design-SCE/paretos140labs.txt


EXECUTION TIME       =        0.701 SECONDS      6 MB  24.7.4 r58773 LEX-LEG


USER: Bhavik Bakshi, Single User License             G160607:0939AO-LNX
      The Ohio State University, Chemical and Biomolecular EnginDC12543
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/thakker.8/Documents/project-codes/Design-SCE/RP4.gms
Output     /home/thakker.8/Documents/project-codes/Design-SCE/RP4.lst

**** USER ERROR(S) ENCOUNTERED
