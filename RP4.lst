GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      10/21/21 17:30:24 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  ** new matrix, for max recycled content in bags
   2   
   3  sets
   4          i substances /E1*E131/
   5          j activities /P1*P137/
   6          k impacts /I1*I2913/
   7      l MPindicators /MPI1*MPI10/
   8          losses(i) /E97/
   9          intermediates(i) /E1*E77,E78*E82,E84*E89,E91*E96,E107,E113,E115,E117*E122,E124*E128/
  10          homes(j) homesubsets /P87/
  11          supplies(i) bagsperhome /E84*E88,E127/
  12          sortedStuff(i) sortedbagsweights /E92*E96,E128/
  13          unextrudedAmnts(j) bagspermake /P77*P81,P132/
  14      bagAmnts(j) extruded plastic /P82*P86,P132/;
  15   
  16  set ij(i,j)/#i.#j/;
  17  set HCon(i,j) /#supplies.#homes/;
  18  set SWast(i,j) /#sortedStuff.P92/;
  19   
  20  parameter A(i,j),B(k,j),C(l,k);
  21  parameter s1(j);
  22   
GDXIN   /home/thakker.8/Documents/project-codes/Design-SCE/techMatrix3.gdx
--- LOAD  A = 1:A
  26   
  27  set ecoinventI(i) /E1*E77/;
  28  A(ecoinventI,'P131')=0;
  29  A(ecoinventI,'P133')=0;
  30  A(ecoinventI,'P80')=0;
  31   
GDXIN   /home/thakker.8/Documents/project-codes/Design-SCE/intMatrix5.gdx
--- LOAD  B = 1:B
  35  B(k,j) = round(B(k,j), 6);
  36   
GDXIN   /home/thakker.8/Documents/project-codes/Design-SCE/CharacFactors3.gdx
--- LOAD  C = 1:C
  40  C(l,k) = round(C(l,k), 2);
  41   
  42  *$GDXIN scalingVector.gdx
  43  *$LOAD s1
  44  *$GDXIN
  45   
  46  *A('E97','P91')=0.08825;
  47  *A('E97','P89')=-1.0968;
  48   
  49   
  50  positive variables
  51          s(j) scaling factors;
  52   
  53  variables
  54          f(i) final demand;
  55   
  56  s.l(j)=0;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      10/21/21 17:30:24 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  57   
  58  *******************************************Innovation**************************************
  59   
       
      *Smart segregation - losses reduce to 25 percent
      A('E97','P92')=0.044;
       
      *source segregated plastic waste
      A('E97','P92')=0;
      A('E97','P92')=0;
      A('E17','P92')=0;
      A('E17','P92')=0;
      A('E90',j)=0;
      A('E89','P90')=-1;
      A('E89','P90')=-1;
      A('E97','P91')=-1;
      A('E97','P91')=-1;
       
      * Highly efficient pyrolysis
      A('E113','P115')=0;
      A('E17','P115')=0.12;
      A('E17','P116')=0.09;
      *A('E7','P116')=0.044;
       
  83   
  84  *zero emissions grid
  85  A(i,'P17')=0;
  86  A('E17','P21')=3.6;
  87  A(i,'P21')=0;
  88  A('E21','P21')=3.6;
  89  *A('E17','P107')=0;
  90  *A('E15','P107')=0;
  91  *A('E63','P107')=1;
  92  *B(k,'P17')=0;
  93  *B(k,'P21')=0;
  94  s.fx('P107')=0;
  95   
  96   
  97  *No Caps on Recycled Content
  98  *A('E79','P93')=0.55;
  99  *A('E78','P94')=0.55;
 100  *A('E80','P95')=0.55;
 101  *A('E81','P96')=0.45;
 102  *A('E97','P93')=0.026;
 103  *A('E97','P94')=0.026;
 104  *A('E97','P95')=0.025;
 105  *A('E97','P96')=0.018;
 106  *A('E79','P93')=1;
 107  *A('E78','P94')=1;
 108  *A('E80','P95')=1;
 109  *A('E81','P96')=1;
 110  *A('E117','P93')=0.0;
 111  *A('E118','P94')=0;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      10/21/21 17:30:24 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 112  *A('E119','P95')=0.0;
 113  *A('E120','P96')=0.0;
 114  *A('E121','P96')=0.0;
 115  A('E127','P87')=-10;
 116  *A('E126','P134')=0;
 117   
 134   
 138   
 139  parameter
 140          bagVolumes(i) volume /E84 13.75, E85 [29.3*10], E86 [43.3*20], E87 [14*1], E88 14, E127 22.5/
 141          stockAttributes(bagAmnts) wt of bags;
 142   
 143  variable techMat(i,j);
 144  techMat.fx(i,j)$ (ij(i,j)-HCon(i,j)-SWast(i,j))=A(i,j);
 145  techMat.l(i,j)$(HCon(i,j)+SWast(i,j))=A(i,j);
 146  techMat.up(i,j)$HCon(i,j)=0;
 147   
      techMat.fx('E97','P92')=0;
      set makezerolosses(j) /P93*P97/;
      techMat.fx('E97',j)$makezerolosses(j)=0;
 153   
 154  *type of bags
 155  *s.fx('P82')=0;
 156  *s.fx('P83')=0;
 157  *s.fx('P84')=0;
 158  *s.fx('P85')=0;
 159  *s.fx('P86')=0;
 160   
 161  set paperJ(j) /P131*P137/;
 162  A(i,paperJ)=0;
 163  s.fx('P131')=0;
 164   
 165   
 166   
 167  *s.fx('P130')=0;
 168  *s.fx('P115')=0;
 169   
      equation litt;
      litt.. s('P88')=e=0.75*s('P87');
 174  equations
 175   
 176          processLCA fundamental equation
 177          zeroIntermediates(i)
 178          homeDemand(homes) home demand constraint
 179          stockEqns percent stock constraint;
 180   
 181   
 182   
 183      zeroIntermediates(i) $ intermediates(i).. f(i)=e=0;
 184          homeDemand(homes(j))..-3878=e=sum(i $ supplies(i), techMat(i,j)*s(j)*bagVolumes(i)*0.8);
 185          stockEqns.. sum(j$homes(j),s(j)*(1+techMat('E97',j)))=e=sum(j $ bagAmnts(j), s(j));
 186   
 187   
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      10/21/21 17:30:24 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 188  *equation wasteall;
 189   
 190  *wasteall.. s('P88')=e=s('P87');
 191   
 192   
 193   
 194  *****************************Downstream equations**************************
 195  *sorting
 196  equations eqs1,eqs2,eqs3,eqs4,eqs5,eqs6,eqs7;
 197  techMat.up(i,'P92')$sortedStuff(i)=1;
 198  techMat.lo(i,'P92')$sortedStuff(i)=0;
 199  eqs1.. techMat('E92','P92')*sum(j$bagAmnts(j), s(j))=e=s('P82')*(1-techMat('E97','P92'));
 200  eqs2.. techMat('E93','P92')*sum(j$bagAmnts(j), s(j))=e=s('P83')*(1-techMat('E97','P92'));
 201  eqs3.. techMat('E94','P92')*sum(j$bagAmnts(j), s(j))=e=s('P84')*(1-techMat('E97','P92'));
 202  eqs4.. techMat('E95','P92')*sum(j$bagAmnts(j), s(j))=e=s('P85')*(1-techMat('E97','P92'));
 203  eqs5.. techMat('E96','P92')*sum(j$bagAmnts(j), s(j))=e=s('P86')*(1-techMat('E97','P92'));
 204  eqs6.. techMat('E128','P92')*sum(j$bagAmnts(j), s(j))=e=s('P132')*(1-techMat('E97','P92'));
 205  eqs7..907.18*s('P106')=e=5*s('P92')*(1-techMat('E97','P92'));
 206   
 207  variable pchoiceitems(i);
 208  equation eqnPchoiceitems(i);
 209  eqnPchoiceitems(i)$supplies(i).. pchoiceitems(i)=e=techMat(i,'P87')*s('P87');
 210   
 211   
 212  *normalized cost
 213  variable normalizedcostInput;
 214  equation costInput;
 215  set bagRatioProduction(i) /E92*E96,E128/;
 216  parameter offsetCostInput(i) /E92 [800*1],E93 [990*1],E94 [1080*1],E95 [1240*1],E96 2500,E128 [445*1]/;
 217  costInput.. normalizedcostinput=e=sum(i$bagRatioProduction(i),techMat(i,'P92')*offsetCostInput(i)/(0.99));
 218   
 219  variable productionCostResin;
 220  equation pdtcost;
 221  pdtcost.. productionCostResin=e=(normalizedCostInput*sum(j$unextrudedAmnts(j), s(j))/907.18)+sum(j$bagAmnts(j),s(j)*0.05);
 222   
 223   
 224  *landfilling
 225  set lfill_indices(j) /P98*P102,P136/;
 226  variable lossLandfill;
 227  equations eql1,eql2,eql3,eql4,eql5,eql6,eql7,loss_l;
 228  eql1.. s('P98')*sum(j$bagAmnts(j), s(j))=e=s('P82')*sum(j$lfill_indices(j), s(j));
 229  eql2.. s('P99')*sum(j$bagAmnts(j), s(j))=e=s('P83')*sum(j$lfill_indices(j), s(j));
 230  eql3.. s('P100')*sum(j$bagAmnts(j), s(j))=e=s('P84')*sum(j$lfill_indices(j), s(j));
 231  eql4.. s('P101')*sum(j$bagAmnts(j), s(j))=e=s('P85')*sum(j$lfill_indices(j), s(j));
 232  eql5.. s('P102')*sum(j$bagAmnts(j), s(j))=e=s('P86')*sum(j$lfill_indices(j), s(j));
 233  eql6.. s('P136')*sum(j$bagAmnts(j), s(j))=e=s('P132')*sum(j$lfill_indices(j), s(j));
 234  eql7.. s('P103')=e=5*sum(j$lfill_indices(j), s(j));
 235  loss_l.. lossLandfill=e=907.18*sum(j$lfill_indices(j),s(j));
 236   
 237  s.fx('P81')=0;
 238  *incineration
 239  set ifill_indices(j) /P108*P112,P137/;
 240  parameter offsetCost(j) /P108 [800*1],P109 [990*1],P110 [1080*1],P111 [1240*1], P112 2500,P137 [445*1]/;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      10/21/21 17:30:24 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 241  set ifill_indices_new(j) /P118*P121,P137/;
 242  parameter offsetCost_new(j) /P118 [800*1],P119 [990*1],P120 [1080*1],P121 [1240*1], P137 [445*1]/;
 243  variable lossIncineration;
 244  equations eqi1,eqi2,eqi3,eqi4,eqi5,eqi6,eqi7,loss_i;
 245  eqi1.. s('P108')*sum(j$bagAmnts(j), s(j))=e=s('P82')*sum(j$ifill_indices(j), s(j));
 246  eqi2.. s('P109')*sum(j$bagAmnts(j), s(j))=e=s('P83')*sum(j$ifill_indices(j), s(j));
 247  eqi3.. s('P110')*sum(j$bagAmnts(j), s(j))=e=s('P84')*sum(j$ifill_indices(j), s(j));
 248  eqi4.. s('P111')*sum(j$bagAmnts(j), s(j))=e=s('P85')*sum(j$ifill_indices(j), s(j));
 249  eqi5.. s('P112')*sum(j$bagAmnts(j), s(j))=e=s('P86')*sum(j$ifill_indices(j), s(j));
 250  eqi6.. s('P137')*sum(j$bagAmnts(j), s(j))=e=s('P32')*sum(j$ifill_indices(j), s(j));
 251  eqi7.. s('P114')=e=5*sum(j$ifill_indices(j), s(j));
 252  *loss_i.. lossIncineration*sum(j$ifill_indices(j),offsetCost(j))=e=sum(j$ifill_indices(j),s(j)*907.18*(offsetCost(j)-((techMat('E107',j))*6.7/360)));
 253   
 254  Scalar elecCost /[10*1]/;
 255   
 256  loss_i.. lossIncineration=e=sum(j$ifill_indices(j),s(j)*907.18*(1-(((techMat('E107',j))*elecCost/360)/offsetCost(j))))+sum(j$ifill_indices_new(j),s(j)*907.18*(1-(((techMat('E107',j))*elecCost/360)/offsetCost_new(j))));
 257   
 258  *biofuel
 259  variable lossBioFuel;
 260  scalar biofuelCost /[0.101*1]/;
 261  equation loss_b;
 262  set bio_new(j) /P122*P125/;
 263  loss_b.. lossBioFuel*normalizedCostInput=e=(((-1*s('P115')/techMat('E91','P115')+sum(j$bio_new(j),s(j)))*normalizedCostInput)-(s('P116')*biofuelCost));
 264  lossBioFuel.lo=0;
 265   
 266   
 267  *composting
 268  variable costBenifitCompost,cbc2, lossCompost;
 269  equation cost_c,cc2,loss_c;
 270  scalar compostCost /[0.030183*1]/;
 271  cost_c.. costBenifitCompost=e=(s('P117')+s('P104')+s('P105'))*907.18*compostCost;
 272  cc2.. cbc2=e=s('P104')*offsetCostInput('E95')+s('P105')*offsetCostInput('E96');
 273  lossCompost.lo=0;
 274  loss_c.. lossCompost*((s('P117')+s('P104'))*offsetCostInput('E95')+s('P105')*offsetCostInput('E96'))=e=((s('P117')+s('P104'))+s('P105'))*907.18*(((s('P117')+s('P104'))*offsetCostInput('E95')+s('P105')*offsetCostInput('E96'))-costBenifitCompost);
 275  *loss_c.. lossCompost=e=(s('P105')+s('P104'))*907.18;
 276   
 277  *s.fx('P113')=0;
 278  s.fx('P89')=0;
 279  *s.fx('P115')=0;
 280  *s.fx('P92')=0;
 281  *s.fx('P85')=0;
 282  *s.fx('P86')=0;
 283  processLCA(i).. f(i)=e=sum(j,techMat(i,j)*s(j));
 284   
 285  **************************************Objectives************************************************
 286   
 287  variables DoC,Cost;
 288  equations DoC_obj,Cost_obj;
 289          DoC.lo=0;
 290  *       DoC.up=1;
 291   
 292  set inputs(j) /P1,P2,P7,P12,P14,P17,P18,P21,P26,P39,P42,P49,P52,P57,P58,P59, P76/;
 293  parameter cost_inputs(j) /P1 0.0496,P2 0.01624,P7 0.1766,P12 0.559977,P14 0.12996,P17 0.067,P18 0.37725,P21 0.067,P26 0.0287605,P39 0.1766,P42 110.2293,P49 0.12,P52 80,P57 0.13227,P58 0.022046,P59 0.020923,P76 0.000000030442/;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      10/21/21 17:30:24 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 294   
 295          Cost_obj.. Cost =e=sum(j$inputs(j), s(j)*cost_inputs(j))-costBenifitCompost;
 296   
 297  variable CostBag;
 298  equation Cost_obj1;
 299  parameter cost_bags(i) /E84 0.11, E85 0.18, E86 0.6, E87 0.14, E88 0.1/;
 300  Cost_obj1.. CostBag=e=sum(i$supplies(i),-1*pchoiceitems(i)*cost_bags(i));
 301   
 302   
 303   
 304   
 305  variable costRecycled;
 306  equation costRecycled1;
 307  costRecycled1.. costRecycled*0.90718=e=A('E81','P96')*s('P96')*[1.24*1]+A('E80','P95')*s('P95')*[1.08*1]+A('E79','P93')*s('P93')*[0.9*1]+A('E78','P94')*s('P94')*[0.99*1]+A('E129','P135')*s('P135')*[0.445*1];
 308   
 309  variable costIn,costPy,costCl,costLu;
 310  equation costIn1,costPy1,costCl1,costLu1;
 311   
 312  costIn1.. costIn=e=sum(j$ifill_indices(j),s(j)*techMat('E107',j)*elecCost/360)+sum(j$ifill_indices_new(j),s(j)*techMat('E107',j)*elecCost/360);
 313  costPy1.. costPy=e=s('P116')*biofuelCost;
 314  scalar clinkerCost /[34*1]/;
 315  scalar lumberCost /[0.036*1]/;
 316  costCl1.. costCl=e=s('P129')*clinkerCost/1000;
 317  *clinker 34$/ton, lumber=45$/1000 board feet i.e. 2.35 m3 and 320 kg/m3 density
 318  costLu1.. costLu=e=s('P130')*lumberCost;
 319  *pyrolysis 0.044 kg biofuel generated, 7.3 lb/gal density, 3$/gal
 320  *degreeofcircularity
 321  *DoC_obj.. DoC*sum(j$unextrudedAmnts(j), s(j))=e=sum(j$unextrudedAmnts(j), s(j))-(f('E97')+lossLandfill);
 322  *DoC_obj.. DoC*sum(j$bagAmnts(j), s(j))=e=sum(j$bagAmnts(j), s(j))-(f('E97')+lossLandfill+lossIncineration+lossBioFuel+lossCompost+costCl*s('P129')+costLu*s('P130'));
 323  DoC_obj.. DoC*(productionCostResin+costRecycled) =e=costIn +costRecycled+costBenifitCompost+costCl+costLu+costPy;
 324  *DoC_obj.. DoC*Cost =e=costIn +costRecycled+costBenifitCompost+costPy+costCl+costLu;
 325   
 326   
 327   
      equation dumm;
      variable dum;
      dumm.. dum=e=10;
      	Model ToyProblem /ALL/;
      	Option NLP=BARON;
      	Solve ToyProblem using NLP maximizing dum; 
 336   
 337  variable pchoicemass(j);
 338  equation totmassproduced(j);
 339  variable totpdtmass;
 340  equation eqtotpdtmass;
 341  eqtotpdtmass.. totpdtmass=e=sum(j$bagAmnts(j),s(j));
 342  totmassproduced(j)$bagAmnts(j).. pchoicemass(j)*totpdtmass=e=s(j);
 343   
 344  set wasteMgmt /'Reprocess', 'Pyrolysis', 'Landfill', 'Incineration'/;
 345  variable wasteMgmtValues (wasteMgmt);
 346  equations eqw1,eqw2,eqw3,eqw4;
 347  eqw1.. wasteMgmtValues('Reprocess')=e=s('P92')*(1-techMat('E97','p92'));
 348  eqw2.. wasteMgmtValues('Pyrolysis')=e=(s('P115')*((-1)*techMat('E91','P115')-techMat('E97','P115')));
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      10/21/21 17:30:24 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 349  eqw3.. wasteMgmtValues('Landfill')=e=(sum(j$lfill_indices(j), s(j)*(907.18-techMat('E97',j))))+(s('P113')*907.18)-(s('P114')*45);
 350  eqw4.. wasteMgmtValues('Incineration')=e=sum(j$ifill_indices(j), s(j)*(907.18-techMat('E97',j)))+sum(j$ifill_indices_new(j), s(j)*(907.18-techMat('E97',j)));
 351   
 352   
 353  variable g(k);
 354  equation impactValues(k);
 355  impactValues(k).. g(k)=e=sum(j,B(k,j)*s(j));
 356  variable mp_indicators(l);
 357  equation eqMPI(l);
 358  eqMPI(l).. mp_indicators(l)=e=sum(k,C(l,k)*g(k));
 359   
 360  variable gwp;
 361  equation eq_gwp;
 362  eq_gwp.. gwp=e=mp_indicators('MPI4')-0.15*s('P116');
 363  *$if not set constrVal $set constrVal=0;
 364  *equation constrainttrial;
 365  *constrainttrial.. wasteMgMtValues('Reprocess')=l=0.5;
 366   
 367  positive variable slack1,slack2;
 368   
 369  parameter gwpC,costC,docC;
 371  gwpC=-1;;
 372  *slack1.lo=-1*gwpC*0;
 373  *slack1.up=gwpC*0;
 374  equation addCons1;
 375  addCons1$(gwpC>0).. gwp+slack1=e=gwpC;
 377  costC=-1;;
 378  *slack2.lo=-1*costC*0;
 379  *slack2.up=costC*0;
 380  equation addCons2;
 381  addCons2$(costC>0).. cost+slack2=e=costC;
 382   
 384  docC=0;
 385  equation addCons3;
 386  addCons3$(docC>0).. DoC=g=docC;
 387   
 388   
 389  *Ellen Mcarthur Constraints
 390   
 391  *equation elmc1;
 392  *equation elmc2;
 393  *equations elmc3;
 394  *equations elmc4;
 395  *elmc1.. sum(j$ifill_indices(j),s(j)*907.18)=g=0.14*(s('P90')+s('P91'));
 396  *elmc2.. sum(j$lfill_indices(j),s(j)*907.18)=e=0.5*(s('P90')+s('P91'));
 397  *elmc3.. s('P92')=e=0.14*(s('P90')+s('P91'));
 398  *elmc4.. s('P115')=e=0.01*(s('P90')+s('P91'));
 399   
 400  equation eps1;
 401  variable epsObj;
 402  eps1.. epsObj=e=DoC+eps*(slack1+slack2);
 403   
 404      Model ToyProblem /ALL/;
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      10/21/21 17:30:24 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 405          Option NLP=BARON;
 410  *       ToyProblem.OptFile=1;
 411  *       Option limrow=120;
 412  *    Option resLim=5000;
 413  *    Option optcr=0.1;
 414  parameter zD,zG,zC;
 415  *******************************************Objectives**********************************************
 416  DoC.lo=0;
 417  DoC.up=2;
 418  If(docC<0, Solve ToyProblem Using NLP maximizing DoC;
 419  zD = DoC.l;
 420  DoC.lo=zD;
 421  zG = gwp.l;
 422  gwp.l=zG;
 423  *Solve ToyProblem Using NLP minimizing gwp;
 424  zG = gwp.l;
 425  gwp.up=zG;
 426  *Solve ToyProblem Using NLP minimizing Cost;
 427  zC=cost.l;
 428  cost.up=zC;
 429   
 430   
 431  Elseif (gwpC<0), Solve ToyProblem Using NLP minimizing gwp;
 432  zG = gwp.l;
 433  gwp.up=zG;
 434  *Solve ToyProblem Using NLP minimizing Cost;
 435  zC=Cost.l;
 436  Cost.up=zC;
 437  *Solve ToyProblem Using NLP maximizing DoC;
 438  zD = DoC.l;
 439  DoC.fx=zD;
 440   
 441  else  Solve ToyProblem Using NLP minimizing Cost;
 442  zC = Cost.l;
 443  Cost.up=zC;
 444  *Solve ToyProblem Using NLP maximizing DoC;
 445  zD = DoC.l;
 446  DoC.lo=zD;
 447  *Solve ToyProblem Using NLP minimizing gwp;
 448  zG=gwp.l;
 449  gwp.fx=zG;
 450  );
 451   
       
      $GDXIN intMatrix1.gdx
      $LOAD B
      $GDXIN
      B(k,j) = round(B(k,j), 4);
       
      $GDXIN CharacFactors.gdx
      $LOAD C
      $GDXIN
      C(l,k) = round(C(l,k), 4);
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                      10/21/21 17:30:24 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


       
       
      variable g(k);
      *equation impactValues(k);
      *impactValues(k).. g(k)=e=sum(j,B(k,j)*s(j));
      g.fx(k)=sum(j,B(k,j)*s.l(j));
      variable mp_indicators(l);
      *equation eqMPI(l);
      mp_indicators.l(l)=0.05;
      mp_indicators.fx(l)=sum(k,C(l,k)*g.l(k));
 474   
 475  Display pchoiceitems.l,pchoicemass.l,wasteMgmtValues.l;
 476  Display DoC.l;
 477  Display Cost.l;
 478  Display s.l;
 479  Display g.l;
 480  Display cbc2.l,costBenifitCompost.l,lossCompost.l,lossIncineration.l,lossBiofuel.l,lossLandfill.l;
 481  Display productionCostResin.l;
 482  Display mp_indicators.l;
 483   
 485   
 486  File pareto /pareto0.txt/;
 487  pareto.ap=1;
 488  pareto.nd=4;
 489  put pareto"";
 490  put Cost.l",";
 491  put DoC.l",";
 492  put totpdtmass.l",";
 493  loop(j$bagAmnts(j),put s.l(j)",");
 494  loop(wasteMgmt,put wasteMgmtValues.l(wasteMgmt)",");
 495  *loop(l,put mp_indicators.l(l)",");
 496  put gwp.l"";
 497  put /;
 498   
 499  set from /'HDPE','LDPE','PP','PLA','Paper','Households','Curbside Collection','Dropoff','Segregation','rHDPE','rLDPE','rPP','rPLA','rPaper','Compost','Landfill','Incineration','Pyrolysis','Clinker','Lumber','Losses'/;
 500  *set to /HDPE,LDPE,PP,PLA,Paper,Households,Curbside Collection,Dropoff,Segregation,rHDPE,rLDPE,rPP,rPLA,rPaper,Compost,Landfill,Incineration,Pyrolysis,Losses/;
 501  set to /'HDPE','LDPE','PP','PLA','Paper','Households','Curbside Collection','Dropoff','Segregation','rHDPE','rLDPE','rPP','rPLA','rPaper','Compost','Landfill','Incineration','Pyrolysis','Clinker','Lumber','Losses'/;
 502  variable cD(from,to);
 503  cd.l(from,to)=0.0000;
 504  cd.fx('HDPE','Households')=s.l('P82');
 505  cd.fx('LDPE','Households')=s.l('P83');
 506  cd.fx('PP','Households')=s.l('P84');
 507  cd.fx('PLA','Households')=s.l('P85');
 508  cd.fx('Paper','Households')=s.l('P132');
 509  cd.fx('Households','losses')=s.l('P87')*techMat.l('E97','P87')+s.l('P88');
 510  cd.fx('Households','Curbside Collection')=-1*s.l('P90')*techMat.l('E89','P90');
 511  cd.fx('Households','Dropoff')=s.l('P91')*(-1)*techMat.l('E89','P91');
 512  cd.fx('Curbside Collection','losses')=s.l('P90')*techMat.l('E97','P90');
 513  cd.fx('Dropoff','losses')=s.l('P91')*techMat.l('E97','P91');
 514  cd.fx('Curbside Collection','Segregation')=s.l('P90')*s.l('P92')/(s.l('P90')+s.l('P91'));
 515  cd.fx('Dropoff','Segregation')=s.l('P91')*s.l('P92')/(s.l('P90')+s.l('P91'));
 516  set repr_lfill(j) /P92*P97/;
 517  cd.fx('Segregation','Landfill')=s.l('P92')*techMat.l('E97','P92')+sum(j$repr_lfill(j),s.l(j)*techMat.l('E113',j));
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 518   
 519  cd.fx('Curbside Collection','Landfill')=s.l('P90')*(sum(j$lfill_indices(j), s.l(j)*(907.18-techMat.l('E97',j))))/(s.l('P90')+s.l('P91'));
 520  cd.fx('Dropoff','Landfill')=s.l('P91')*(sum(j$lfill_indices(j), s.l(j)*(907.18-techMat.l('E97',j))))/(s.l('P90')+s.l('P91'));
 521   
 522  cd.fx('Curbside Collection','Incineration')=s.l('P90')*sum(j$ifill_indices(j), s.l(j)*(907.18-techMat.l('E97',j)))/(s.l('P90')+s.l('P91'));
 523  cd.fx('Dropoff','Incineration')=s.l('P91')*sum(j$ifill_indices(j), s.l(j)*(907.18-techMat.l('E97',j)))/(s.l('P90')+s.l('P91'));
 524  cd.fx('Incineration','Landfill')=sum(j$ifill_indices(j),s.l(j)*techMat.l('E113',j));
 525  cd.fx('Incineration','losses')=sum(j$ifill_indices(j),s.l(j)*techMat.l('E97',j));
 526   
 527  cd.fx('Curbside Collection','Pyrolysis')=s.l('P90')*(s.l('P115')*((-1)*techMat.l('E91','P115')-techMat.l('E97','P115')))/(s.l('P90')+s.l('P91'));
 528  cd.fx('Dropoff','Pyrolysis')=s.l('P91')*(s.l('P115')*((-1)*techMat.l('E91','P115')-techMat.l('E97','P115')))/(s.l('P90')+s.l('P91'));
 529  cd.fx('Pyrolysis','losses')=s.l('P115')*techMat.l('E97','P115');
 530   
 531  cd.fx('Segregation','rHDPE')=s.l('P93');
 532  cd.fx('Segregation','rLDPE')=s.l('P94');
 533  cd.fx('Segregation','rPP')=s.l('P95');
 534  cd.fx('Segregation','rPLA')=s.l('P96');
 535  cd.fx('Segregation','rPaper')=s.l('P135');
 536  cd.fx('Segregation','Compost')=907.18*(s.l('P117')+s.l('P104')+s.l('P105'));
 537  cd.fx('Segregation','Incineration')=sum(j$ifill_indices(j), s.l(j)*(907.18-techMat.l('E97',j)));
 538   
 539   
 540   
 541  cd.fx('rHDPE','HDPE')=s.l('P93')*techMat.l('E79','P93');
 542  cd.fx('rHDPE','Incineration')=s.l('P118')*(907.18-techMat.l('E79','P118'));
 543  cd.fx('rHDPE','Pyrolysis')=s.l('P122');
 544  cd.fx('rHDPE','Clinker')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P126')*(s.l('P129')/(s.l('P129')+s.l('P130')));
 545  cd.fx('rHDPE','Lumber')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P126')*(s.l('P130')/(s.l('P129')+s.l('P130')));
 546  cd.fx('rLDPE','LDPE')=s.l('P94')*techMat.l('E78','P94');
 547  cd.fx('rLDPE','Incineration')=s.l('P119')*(907.18-techMat.l('E79','P119'));
 548  cd.fx('rLDPE','Pyrolysis')=s.l('P123');
 549  cd.fx('rLDPE','Clinker')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P127')*(s.l('P129')/(s.l('P129')+s.l('P130')));
 550  cd.fx('rLDPE','Lumber')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P127')*(s.l('P130')/(s.l('P129')+s.l('P130')));
 551  cd.fx('rPP','PP')=s.l('P95')*techMat.l('E80','P95');
 552  cd.fx('rPP','Incineration')=s.l('P120')*(907.18-techMat.l('E79','P118'));
 553  cd.fx('rPP','Pyrolysis')=s.l('P124');
 554  cd.fx('rPP','Clinker')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P128')*(s.l('P129')/(s.l('P129')+s.l('P130')));
 555  cd.fx('rPP','Lumber')$(s.l('P129')>0 or s.l('P130')>0)=s.l('P128')*(s.l('P130')/(s.l('P129')+s.l('P130')));
 556  cd.fx('rPLA','PLA')=s.l('P96')*techMat.l('E81','P96');
 557  cd.fx('rPLA','Incineration')=s.l('P121')*(907.18-techMat.l('E79','P118'));
 558  cd.fx('rPLA','Pyrolysis')=s.l('P125');
 559  cd.fx('rPLA','Compost')=s.l('P117')*(907.18);
 560  cd.fx('rPaper','Paper')=s.l('P135')*techMat.l('E125','P135');
 561  cd.fx('rHDPE','Losses')=s.l('P93')*techMat.l('E97','P93');
 562  cd.fx('rLDPE','Losses')=s.l('P94')*techMat.l('E97','P94');
 563  cd.fx('rPP','Losses')=s.l('P95')*techMat.l('E97','P95');
 564  cd.fx('rPLA','Losses')=s.l('P96')*techMat.l('E97','P96');
 565  cd.fx('rPaper','Losses')=s.l('P135')*techMat.l('E97','P135');
 566  *cd.fx('Segregation','Landfill')=sum(j$repr_lfill(j),s.l(j)*techMat.l('E113',j));
 567   
 568  cd.fx(from,to) = round(cd.l(from,to), 4);
 569  parameter recyclevalLDPE,recyclevalPLA,recyclevalPP,recyclevalHDPE;
 570  recyclevalPLA$(s.l('P80')>0)=A('E81','P96')*s.l('P96')/(s.l('P80')+A('E81','P96')*s.l('P96'));
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 571  recyclevalPP$(s.l('P79')>0)=A('E80','P95')*s.l('P95')/(s.l('P79')+A('E80','P95')*s.l('P95'));
 572  recyclevalHDPE$(s.l('P77')>0)=A('E79','P93')*s.l('P93')/(s.l('P77')+A('E79','P93')*s.l('P93'));
 573  recyclevalLDPE$(s.l('P78')>0)=A('E78','P94')*s.l('P94')/(s.l('P78')+A('E78','P94')*s.l('P94'));
 574  Display recyclevalLDPE,recyclevalHDPE,recyclevalPP,recyclevalPLA;
 575  *chordDiag.nd=4;
 576  *put chordDiag"";
 577  *loop(to, put to.tl);
 578  *loop(from, loop(to, put cd.l(from,to)); put /;);
 579  *put /;
 580  *Display from;
 581   
 582  execute_unload 'Sankey_%fileS%.gdx', cD,from;
 583  execute 'gdxdump Sankey_%fileS%.gdx output=Sankey_%fileS%.csv symb=cD format=csv'
 584  execute 'rm Sankey_%fileS%.gdx'
 585  execute 'sh removeUndf.sh Sankey_%fileS%.csv'
 586  execute 'python finalJSConstructor.py Sankey_%fileS%.csv'
 587  execute 'mv Sankey_%fileS%.* ./0/'
 588  execute 'rm scalingVector.csv'
 589  execute_unload 'scalingVector.gdx', s;
 590  execute 'gdxdump scalingVector.gdx output=scalingVector.csv symb=s format=csv'
 591  *execute 'rm scalingVector.gdx'
 592  execute 'python hotspotFinder.py scalingVector.csv'
 593  execute 'mv fig.png ./0/hotspot_%fileS%.png'
 594  execute 'mv fig.svg ./0/hotspot_%fileS%.svg'
 595  *execute_unload 'Intervention.gdx', g;
 596  *execute 'gdxdump Intervention.gdx output=Intervention.csv symb=g format=csv'
 597  *execute 'rm Intervention.gdx'
 598   
 599  *execute 'cd ~/Data/GAMS_Codes/LCD-Plastics/Graphics/Sankey/'
 600  *execute 'python finalJSConstructor.py Sankey_%fileS%.csv'
 601  Display cd.l;
 602  *execute_unload "pareto%filename%.gdx", techMat,s,f,Cost,DoC,productionCostResin, pchoiceitems, pchoicemass, wasteMgmtValues,mp_indicators;
 603  *execute_unload 'Find.gdx', techMat,s,f,Cost,DoC,productionCostResin, pchoiceitems, pchoicemass, wasteMgmtValues,mp_indicators;
 604  *execute 'gdxdump Find.gdx output=Find.csv symb=techMat format=csv'
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  /home/thakker.8/Documents/project-codes/Design-SCE/RP4.gms
     2       23 GDXIN          1      23  /home/thakker.8/Documents/project-codes/Design-SCE/techMatrix3.gdx
     3       32 GDXIN          1      32  /home/thakker.8/Documents/project-codes/Design-SCE/intMatrix5.gdx
     4       37 GDXIN          1      37  /home/thakker.8/Documents/project-codes/Design-SCE/CharacFactors3.gdx


COMPILATION TIME     =        0.026 SECONDS      4 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 431


---- processLCA  =E=  fundamental equation

processLCA(E1)..  - (1)*s(P1) + (0)*s(P2) + (0)*s(P3) + (0)*s(P4) + (0)*s(P5) + (0)*s(P6) + (0)*s(P7) + (0)*s(P8) + (0)*s(P9) + (1)*s(P10) + (0)*s(P11) + (0)*s(P12) + (0)*s(P13) + (0)*s(P14) + (0)*s(P15) + (0)*s(P16) + (0)*s(P17) + (0)*s(P18) + (0)*s(P19)
     
      + (0)*s(P20) + (0)*s(P21) + (0)*s(P22) + (0)*s(P23) + (0)*s(P24) + (0)*s(P25) + (0)*s(P26) + (0)*s(P27) + (0)*s(P28) + (0)*s(P29) + (0)*s(P30) + (0)*s(P31) + (0)*s(P32) + (0)*s(P33) + (0)*s(P34) + (0)*s(P35) + (0)*s(P36) + (0)*s(P37) + (0)*s(P38)
     
      + (0)*s(P39) + (0)*s(P40) + (0)*s(P41) + (0)*s(P42) + (0)*s(P43) + (0)*s(P44) + (0)*s(P45) + (0)*s(P46) + (0)*s(P47) + (0)*s(P48) + (0)*s(P49) + (0)*s(P50) + (0)*s(P51) + (0)*s(P52) + (0)*s(P53) + (0)*s(P54) + (0)*s(P55) + (0)*s(P56) + (0)*s(P57)
     
      + (0)*s(P58) + (0)*s(P59) + (0)*s(P60) + (0)*s(P61) + (0)*s(P62) + (0)*s(P63) + (0)*s(P64) + (0)*s(P65) + (0)*s(P66) + (0)*s(P67) + (0.44186)*s(P68) + (0)*s(P69) + (0)*s(P70) + (0)*s(P71) + (0)*s(P72) + (0)*s(P73) + (0)*s(P74) + (0)*s(P75)
     
      + (0)*s(P76) + (0)*s(P77) + (0)*s(P78) + (0)*s(P79) + (0)*s(P80) + (0)*s(P81) + (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P87) + (0)*s(P88) + (0)*s(P89) + (0)*s(P90) + (0)*s(P91) + (0)*s(P92) + (0)*s(P93) + (0)*s(P94)
     
      + (0)*s(P95) + (0)*s(P96) + (0)*s(P97) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P103) + (0)*s(P104) + (0)*s(P105) + (0)*s(P106) + (0)*s(P107) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112)
     
      + (0)*s(P113) + (0)*s(P114) + (0)*s(P115) + (0)*s(P116) + (0)*s(P117) + (0)*s(P118) + (0)*s(P119) + (0)*s(P120) + (0)*s(P121) + (0)*s(P122) + (0)*s(P123) + (0)*s(P124) + (0)*s(P125) + (0)*s(P126) + (0)*s(P127) + (0)*s(P128) + (0)*s(P129)
     
      + (0)*s(P130) + (0)*s(P131) + (0)*s(P132) + (0)*s(P133) + (0)*s(P134) + (0)*s(P135) + (0)*s(P136) + (0)*s(P137) + f(E1) + (0)*techMat(E1,P1) + (0)*techMat(E1,P2) + (0)*techMat(E1,P3) + (0)*techMat(E1,P4) + (0)*techMat(E1,P5) + (0)*techMat(E1,P6)
     
      + (0)*techMat(E1,P7) + (0)*techMat(E1,P8) + (0)*techMat(E1,P9) + (0)*techMat(E1,P10) + (0)*techMat(E1,P11) + (0)*techMat(E1,P12) + (0)*techMat(E1,P13) + (0)*techMat(E1,P14) + (0)*techMat(E1,P15) + (0)*techMat(E1,P16) + (0)*techMat(E1,P17)
     
      + (0)*techMat(E1,P18) + (0)*techMat(E1,P19) + (0)*techMat(E1,P20) + (0)*techMat(E1,P21) + (0)*techMat(E1,P22) + (0)*techMat(E1,P23) + (0)*techMat(E1,P24) + (0)*techMat(E1,P25) + (0)*techMat(E1,P26) + (0)*techMat(E1,P27) + (0)*techMat(E1,P28)
     
      + (0)*techMat(E1,P29) + (0)*techMat(E1,P30) + (0)*techMat(E1,P31) + (0)*techMat(E1,P32) + (0)*techMat(E1,P33) + (0)*techMat(E1,P34) + (0)*techMat(E1,P35) + (0)*techMat(E1,P36) + (0)*techMat(E1,P37) + (0)*techMat(E1,P38) + (0)*techMat(E1,P39)
     
      + (0)*techMat(E1,P40) + (0)*techMat(E1,P41) + (0)*techMat(E1,P42) + (0)*techMat(E1,P43) + (0)*techMat(E1,P44) + (0)*techMat(E1,P45) + (0)*techMat(E1,P46) + (0)*techMat(E1,P47) + (0)*techMat(E1,P48) + (0)*techMat(E1,P49) + (0)*techMat(E1,P50)
     
      + (0)*techMat(E1,P51) + (0)*techMat(E1,P52) + (0)*techMat(E1,P53) + (0)*techMat(E1,P54) + (0)*techMat(E1,P55) + (0)*techMat(E1,P56) + (0)*techMat(E1,P57) + (0)*techMat(E1,P58) + (0)*techMat(E1,P59) + (0)*techMat(E1,P60) + (0)*techMat(E1,P61)
     
      + (0)*techMat(E1,P62) + (0)*techMat(E1,P63) + (0)*techMat(E1,P64) + (0)*techMat(E1,P65) + (0)*techMat(E1,P66) + (0)*techMat(E1,P67) + (0)*techMat(E1,P68) + (0)*techMat(E1,P69) + (0)*techMat(E1,P70) + (0)*techMat(E1,P71) + (0)*techMat(E1,P72)
     
      + (0)*techMat(E1,P73) + (0)*techMat(E1,P74) + (0)*techMat(E1,P75) + (0)*techMat(E1,P76) + (0)*techMat(E1,P77) + (0)*techMat(E1,P78) + (0)*techMat(E1,P79) + (0)*techMat(E1,P80) + (0)*techMat(E1,P81) + (0)*techMat(E1,P82) + (0)*techMat(E1,P83)
     
      + (0)*techMat(E1,P84) + (0)*techMat(E1,P85) + (0)*techMat(E1,P86) + (0)*techMat(E1,P87) + (0)*techMat(E1,P88) + (0)*techMat(E1,P89) + (0)*techMat(E1,P90) + (0)*techMat(E1,P91) + (0)*techMat(E1,P92) + (0)*techMat(E1,P93) + (0)*techMat(E1,P94)
     
      + (0)*techMat(E1,P95) + (0)*techMat(E1,P96) + (0)*techMat(E1,P97) + (0)*techMat(E1,P98) + (0)*techMat(E1,P99) + (0)*techMat(E1,P100) + (0)*techMat(E1,P101) + (0)*techMat(E1,P102) + (0)*techMat(E1,P103) + (0)*techMat(E1,P104) + (0)*techMat(E1,P105)
     
      + (0)*techMat(E1,P106) + (0)*techMat(E1,P107) + (0)*techMat(E1,P108) + (0)*techMat(E1,P109) + (0)*techMat(E1,P110) + (0)*techMat(E1,P111) + (0)*techMat(E1,P112) + (0)*techMat(E1,P113) + (0)*techMat(E1,P114) + (0)*techMat(E1,P115)
     
      + (0)*techMat(E1,P116) + (0)*techMat(E1,P117) + (0)*techMat(E1,P118) + (0)*techMat(E1,P119) + (0)*techMat(E1,P120) + (0)*techMat(E1,P121) + (0)*techMat(E1,P122) + (0)*techMat(E1,P123) + (0)*techMat(E1,P124) + (0)*techMat(E1,P125)
     
      + (0)*techMat(E1,P126) + (0)*techMat(E1,P127) + (0)*techMat(E1,P128) + (0)*techMat(E1,P129) + (0)*techMat(E1,P130) + (0)*techMat(E1,P131) + (0)*techMat(E1,P132) + (0)*techMat(E1,P133) + (0)*techMat(E1,P134) + (0)*techMat(E1,P135)
     
      + (0)*techMat(E1,P136) + (0)*techMat(E1,P137) =E= 0 ; (LHS = 0)
     
processLCA(E2)..  (0)*s(P1) - (0.000252345277453289)*s(P2) + (0)*s(P3) + (0)*s(P4) + (6.482E-6)*s(P5) + (0)*s(P6) + (0)*s(P7) + (0)*s(P8) + (0)*s(P9) + (0)*s(P10) + (0)*s(P11) + (0)*s(P12) + (0)*s(P13) + (0)*s(P14) + (0)*s(P15) + (0)*s(P16) + (0)*s(P17)
     
      + (0)*s(P18) + (0)*s(P19) + (0.001)*s(P20) + (0)*s(P21) + (0)*s(P22) + (0)*s(P23) + (2.7224E-5)*s(P24) + (0)*s(P25) + (0)*s(P26) + (0)*s(P27) + (0)*s(P28) + (0)*s(P29) + (0)*s(P30) + (0)*s(P31) + (5.8338E-5)*s(P32) + (0)*s(P33) + (0)*s(P34)
     
      + (0)*s(P35) + (0)*s(P36) + (0)*s(P37) + (9.5933E-6)*s(P38) + (0)*s(P39) + (0.001)*s(P40) + (0)*s(P41) + (0)*s(P42) + (0)*s(P43) + (0)*s(P44) + (0)*s(P45) + (0.0829)*s(P46) + (0)*s(P47) + (0)*s(P48) + (0)*s(P49) + (0)*s(P50) + (0)*s(P51)
     
      + (0)*s(P52) + (0)*s(P53) + (0.00118109589872716)*s(P54) + (0)*s(P55) + (0)*s(P56) + (0)*s(P57) + (0)*s(P58) + (0)*s(P59) + (0)*s(P60) + (0)*s(P61) + (0)*s(P62) + (0)*s(P63) + (0)*s(P64) + (0)*s(P65) + (0)*s(P66) + (0)*s(P67) + (0)*s(P68)
     
      + (0.00033261)*s(P69) + (0)*s(P70) + (0)*s(P71) + (0)*s(P72) + (0)*s(P73) + (0)*s(P74) + (0)*s(P75) + (0)*s(P76) + (0)*s(P77) + (0)*s(P78) + (0)*s(P79) + (0)*s(P80) + (0)*s(P81) + (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 431


     processLCA  =E=  fundamental equation     
     
      + (0)*s(P87) + (0)*s(P88) + (0)*s(P89) + (0)*s(P90) + (0)*s(P91) + (0)*s(P92) + (0)*s(P93) + (0)*s(P94) + (0)*s(P95) + (0)*s(P96) + (0)*s(P97) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P103) + (0)*s(P104)
     
      + (0)*s(P105) + (0)*s(P106) + (0)*s(P107) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P113) + (0)*s(P114) + (0)*s(P115) - (2.75E-5)*s(P116) + (0)*s(P117) + (0)*s(P118) + (0)*s(P119) + (0)*s(P120) + (0)*s(P121)
     
      + (0)*s(P122) + (0)*s(P123) + (0)*s(P124) + (0)*s(P125) + (0)*s(P126) + (0)*s(P127) + (0)*s(P128) + (0)*s(P129) + (0)*s(P130) + (0)*s(P131) + (0)*s(P132) + (0)*s(P133) + (0)*s(P134) + (0)*s(P135) + (0)*s(P136) + (0)*s(P137) + f(E2)
     
      + (0)*techMat(E2,P1) + (0)*techMat(E2,P2) + (0)*techMat(E2,P3) + (0)*techMat(E2,P4) + (0)*techMat(E2,P5) + (0)*techMat(E2,P6) + (0)*techMat(E2,P7) + (0)*techMat(E2,P8) + (0)*techMat(E2,P9) + (0)*techMat(E2,P10) + (0)*techMat(E2,P11)
     
      + (0)*techMat(E2,P12) + (0)*techMat(E2,P13) + (0)*techMat(E2,P14) + (0)*techMat(E2,P15) + (0)*techMat(E2,P16) + (0)*techMat(E2,P17) + (0)*techMat(E2,P18) + (0)*techMat(E2,P19) + (0)*techMat(E2,P20) + (0)*techMat(E2,P21) + (0)*techMat(E2,P22)
     
      + (0)*techMat(E2,P23) + (0)*techMat(E2,P24) + (0)*techMat(E2,P25) + (0)*techMat(E2,P26) + (0)*techMat(E2,P27) + (0)*techMat(E2,P28) + (0)*techMat(E2,P29) + (0)*techMat(E2,P30) + (0)*techMat(E2,P31) + (0)*techMat(E2,P32) + (0)*techMat(E2,P33)
     
      + (0)*techMat(E2,P34) + (0)*techMat(E2,P35) + (0)*techMat(E2,P36) + (0)*techMat(E2,P37) + (0)*techMat(E2,P38) + (0)*techMat(E2,P39) + (0)*techMat(E2,P40) + (0)*techMat(E2,P41) + (0)*techMat(E2,P42) + (0)*techMat(E2,P43) + (0)*techMat(E2,P44)
     
      + (0)*techMat(E2,P45) + (0)*techMat(E2,P46) + (0)*techMat(E2,P47) + (0)*techMat(E2,P48) + (0)*techMat(E2,P49) + (0)*techMat(E2,P50) + (0)*techMat(E2,P51) + (0)*techMat(E2,P52) + (0)*techMat(E2,P53) + (0)*techMat(E2,P54) + (0)*techMat(E2,P55)
     
      + (0)*techMat(E2,P56) + (0)*techMat(E2,P57) + (0)*techMat(E2,P58) + (0)*techMat(E2,P59) + (0)*techMat(E2,P60) + (0)*techMat(E2,P61) + (0)*techMat(E2,P62) + (0)*techMat(E2,P63) + (0)*techMat(E2,P64) + (0)*techMat(E2,P65) + (0)*techMat(E2,P66)
     
      + (0)*techMat(E2,P67) + (0)*techMat(E2,P68) + (0)*techMat(E2,P69) + (0)*techMat(E2,P70) + (0)*techMat(E2,P71) + (0)*techMat(E2,P72) + (0)*techMat(E2,P73) + (0)*techMat(E2,P74) + (0)*techMat(E2,P75) + (0)*techMat(E2,P76) + (0)*techMat(E2,P77)
     
      + (0)*techMat(E2,P78) + (0)*techMat(E2,P79) + (0)*techMat(E2,P80) + (0)*techMat(E2,P81) + (0)*techMat(E2,P82) + (0)*techMat(E2,P83) + (0)*techMat(E2,P84) + (0)*techMat(E2,P85) + (0)*techMat(E2,P86) + (0)*techMat(E2,P87) + (0)*techMat(E2,P88)
     
      + (0)*techMat(E2,P89) + (0)*techMat(E2,P90) + (0)*techMat(E2,P91) + (0)*techMat(E2,P92) + (0)*techMat(E2,P93) + (0)*techMat(E2,P94) + (0)*techMat(E2,P95) + (0)*techMat(E2,P96) + (0)*techMat(E2,P97) + (0)*techMat(E2,P98) + (0)*techMat(E2,P99)
     
      + (0)*techMat(E2,P100) + (0)*techMat(E2,P101) + (0)*techMat(E2,P102) + (0)*techMat(E2,P103) + (0)*techMat(E2,P104) + (0)*techMat(E2,P105) + (0)*techMat(E2,P106) + (0)*techMat(E2,P107) + (0)*techMat(E2,P108) + (0)*techMat(E2,P109)
     
      + (0)*techMat(E2,P110) + (0)*techMat(E2,P111) + (0)*techMat(E2,P112) + (0)*techMat(E2,P113) + (0)*techMat(E2,P114) + (0)*techMat(E2,P115) + (0)*techMat(E2,P116) + (0)*techMat(E2,P117) + (0)*techMat(E2,P118) + (0)*techMat(E2,P119)
     
      + (0)*techMat(E2,P120) + (0)*techMat(E2,P121) + (0)*techMat(E2,P122) + (0)*techMat(E2,P123) + (0)*techMat(E2,P124) + (0)*techMat(E2,P125) + (0)*techMat(E2,P126) + (0)*techMat(E2,P127) + (0)*techMat(E2,P128) + (0)*techMat(E2,P129)
     
      + (0)*techMat(E2,P130) + (0)*techMat(E2,P131) + (0)*techMat(E2,P132) + (0)*techMat(E2,P133) + (0)*techMat(E2,P134) + (0)*techMat(E2,P135) + (0)*techMat(E2,P136) + (0)*techMat(E2,P137) =E= 0 ; (LHS = 0)
     
processLCA(E3)..  (0)*s(P1) + (0)*s(P2) - (907.18)*s(P3) + (0)*s(P4) + (0)*s(P5) + (0)*s(P6) + (0)*s(P7) + (0)*s(P8) + (0)*s(P9) + (0)*s(P10) + (0)*s(P11) + (0)*s(P12) + (0)*s(P13) + (0)*s(P14) + (0)*s(P15) + (0)*s(P16) + (0)*s(P17) + (0)*s(P18)
     
      + (0)*s(P19) + (0)*s(P20) + (0)*s(P21) + (0)*s(P22) + (0)*s(P23) + (0)*s(P24) + (0)*s(P25) + (0)*s(P26) + (0)*s(P27) + (0)*s(P28) + (0)*s(P29) + (0)*s(P30) + (0)*s(P31) + (0)*s(P32) + (0)*s(P33) + (0)*s(P34) + (0)*s(P35) + (0)*s(P36) + (0)*s(P37)
     
      + (0)*s(P38) + (0)*s(P39) + (0)*s(P40) + (0)*s(P41) + (0)*s(P42) + (0)*s(P43) + (0)*s(P44) + (0)*s(P45) + (0)*s(P46) + (0)*s(P47) + (0)*s(P48) + (0)*s(P49) + (0)*s(P50) + (0)*s(P51) + (0)*s(P52) + (0)*s(P53) + (0)*s(P54) + (0)*s(P55) + (0)*s(P56)
     
      + (0)*s(P57) + (0)*s(P58) + (0)*s(P59) + (0)*s(P60) + (0)*s(P61) + (0)*s(P62) + (0)*s(P63) + (0)*s(P64) + (0)*s(P65) + (0)*s(P66) + (0)*s(P67) + (0)*s(P68) + (0)*s(P69) + (0)*s(P70) + (0)*s(P71) + (0)*s(P72) + (0)*s(P73) + (0)*s(P74) + (0)*s(P75)
     
      + (0)*s(P76) + (0)*s(P77) + (0)*s(P78) + (0)*s(P79) + (0)*s(P80) + (0)*s(P81) + (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P87) + (0)*s(P88) + (0)*s(P89) + (0)*s(P90) + (0)*s(P91) + (0)*s(P92) + (0)*s(P93) + (0)*s(P94)
     
      + (0)*s(P95) + (0)*s(P96) + (0)*s(P97) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P103) + (0)*s(P104) + (0)*s(P105) + (0)*s(P106) + (0)*s(P107) + (907.18)*s(P108) + (907.18)*s(P109) + (907.18)*s(P110)
     
      + (907.18)*s(P111) + (907.18)*s(P112) + (0)*s(P113) + (907.18)*s(P114) + (0)*s(P115) + (0)*s(P116) + (0)*s(P117) + (907.18)*s(P118) + (907.18)*s(P119) + (907.18)*s(P120) + (907.18)*s(P121) + (0)*s(P122) + (0)*s(P123) + (0)*s(P124) + (0)*s(P125)
     
      + (0)*s(P126) + (0)*s(P127) + (0)*s(P128) + (0)*s(P129) + (0)*s(P130) + (0)*s(P131) + (0)*s(P132) + (0)*s(P133) + (0)*s(P134) + (0)*s(P135) + (0)*s(P136) + (0)*s(P137) + f(E3) + (0)*techMat(E3,P1) + (0)*techMat(E3,P2) + (0)*techMat(E3,P3)
     
      + (0)*techMat(E3,P4) + (0)*techMat(E3,P5) + (0)*techMat(E3,P6) + (0)*techMat(E3,P7) + (0)*techMat(E3,P8) + (0)*techMat(E3,P9) + (0)*techMat(E3,P10) + (0)*techMat(E3,P11) + (0)*techMat(E3,P12) + (0)*techMat(E3,P13) + (0)*techMat(E3,P14)
     
      + (0)*techMat(E3,P15) + (0)*techMat(E3,P16) + (0)*techMat(E3,P17) + (0)*techMat(E3,P18) + (0)*techMat(E3,P19) + (0)*techMat(E3,P20) + (0)*techMat(E3,P21) + (0)*techMat(E3,P22) + (0)*techMat(E3,P23) + (0)*techMat(E3,P24) + (0)*techMat(E3,P25)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 431


     processLCA  =E=  fundamental equation     
     
      + (0)*techMat(E3,P26) + (0)*techMat(E3,P27) + (0)*techMat(E3,P28) + (0)*techMat(E3,P29) + (0)*techMat(E3,P30) + (0)*techMat(E3,P31) + (0)*techMat(E3,P32) + (0)*techMat(E3,P33) + (0)*techMat(E3,P34) + (0)*techMat(E3,P35) + (0)*techMat(E3,P36)
     
      + (0)*techMat(E3,P37) + (0)*techMat(E3,P38) + (0)*techMat(E3,P39) + (0)*techMat(E3,P40) + (0)*techMat(E3,P41) + (0)*techMat(E3,P42) + (0)*techMat(E3,P43) + (0)*techMat(E3,P44) + (0)*techMat(E3,P45) + (0)*techMat(E3,P46) + (0)*techMat(E3,P47)
     
      + (0)*techMat(E3,P48) + (0)*techMat(E3,P49) + (0)*techMat(E3,P50) + (0)*techMat(E3,P51) + (0)*techMat(E3,P52) + (0)*techMat(E3,P53) + (0)*techMat(E3,P54) + (0)*techMat(E3,P55) + (0)*techMat(E3,P56) + (0)*techMat(E3,P57) + (0)*techMat(E3,P58)
     
      + (0)*techMat(E3,P59) + (0)*techMat(E3,P60) + (0)*techMat(E3,P61) + (0)*techMat(E3,P62) + (0)*techMat(E3,P63) + (0)*techMat(E3,P64) + (0)*techMat(E3,P65) + (0)*techMat(E3,P66) + (0)*techMat(E3,P67) + (0)*techMat(E3,P68) + (0)*techMat(E3,P69)
     
      + (0)*techMat(E3,P70) + (0)*techMat(E3,P71) + (0)*techMat(E3,P72) + (0)*techMat(E3,P73) + (0)*techMat(E3,P74) + (0)*techMat(E3,P75) + (0)*techMat(E3,P76) + (0)*techMat(E3,P77) + (0)*techMat(E3,P78) + (0)*techMat(E3,P79) + (0)*techMat(E3,P80)
     
      + (0)*techMat(E3,P81) + (0)*techMat(E3,P82) + (0)*techMat(E3,P83) + (0)*techMat(E3,P84) + (0)*techMat(E3,P85) + (0)*techMat(E3,P86) + (0)*techMat(E3,P87) + (0)*techMat(E3,P88) + (0)*techMat(E3,P89) + (0)*techMat(E3,P90) + (0)*techMat(E3,P91)
     
      + (0)*techMat(E3,P92) + (0)*techMat(E3,P93) + (0)*techMat(E3,P94) + (0)*techMat(E3,P95) + (0)*techMat(E3,P96) + (0)*techMat(E3,P97) + (0)*techMat(E3,P98) + (0)*techMat(E3,P99) + (0)*techMat(E3,P100) + (0)*techMat(E3,P101) + (0)*techMat(E3,P102)
     
      + (0)*techMat(E3,P103) + (0)*techMat(E3,P104) + (0)*techMat(E3,P105) + (0)*techMat(E3,P106) + (0)*techMat(E3,P107) + (0)*techMat(E3,P108) + (0)*techMat(E3,P109) + (0)*techMat(E3,P110) + (0)*techMat(E3,P111) + (0)*techMat(E3,P112)
     
      + (0)*techMat(E3,P113) + (0)*techMat(E3,P114) + (0)*techMat(E3,P115) + (0)*techMat(E3,P116) + (0)*techMat(E3,P117) + (0)*techMat(E3,P118) + (0)*techMat(E3,P119) + (0)*techMat(E3,P120) + (0)*techMat(E3,P121) + (0)*techMat(E3,P122)
     
      + (0)*techMat(E3,P123) + (0)*techMat(E3,P124) + (0)*techMat(E3,P125) + (0)*techMat(E3,P126) + (0)*techMat(E3,P127) + (0)*techMat(E3,P128) + (0)*techMat(E3,P129) + (0)*techMat(E3,P130) + (0)*techMat(E3,P131) + (0)*techMat(E3,P132)
     
      + (0)*techMat(E3,P133) + (0)*techMat(E3,P134) + (0)*techMat(E3,P135) + (0)*techMat(E3,P136) + (0)*techMat(E3,P137) =E= 0 ; (LHS = 0)
     
REMAINING 128 ENTRIES SKIPPED


---- zeroIntermediates  =E=  

zeroIntermediates(E1)..  f(E1) =E= 0 ; (LHS = 0)
     
zeroIntermediates(E2)..  f(E2) =E= 0 ; (LHS = 0)
     
zeroIntermediates(E3)..  f(E3) =E= 0 ; (LHS = 0)
     
REMAINING 105 ENTRIES SKIPPED


---- homeDemand  =E=  home demand constraint

homeDemand(P87)..  (22072)*s(P87) + (0)*techMat(E84,P87) + (0)*techMat(E85,P87) + (0)*techMat(E86,P87) + (0)*techMat(E87,P87) + (0)*techMat(E88,P87) + (0)*techMat(E127,P87) =E= 3878 ; (LHS = 0, INFES = 3878 ****)
     

---- stockEqns  =E=  percent stock constraint

stockEqns..  - s(P82) - s(P83) - s(P84) - s(P85) - s(P86) + (1.1347)*s(P87) - s(P132) + (0)*techMat(E97,P87) =E= 0 ; (LHS = 0)
     

---- eqs1  =E=  

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 431


     eqs1  =E=  

eqs1..  (0.1765)*s(P82) + (1)*s(P83) + (1)*s(P84) + (1)*s(P85) + (1)*s(P86) + (1)*s(P132) + (0)*techMat(E92,P92) + (0)*techMat(E97,P92) =E= 0 ; (LHS = 0)
     

---- eqs2  =E=  

eqs2..  (1)*s(P82) + (0.1765)*s(P83) + (1)*s(P84) + (1)*s(P85) + (1)*s(P86) + (1)*s(P132) + (0)*techMat(E93,P92) + (0)*techMat(E97,P92) =E= 0 ; (LHS = 0)
     

---- eqs3  =E=  

eqs3..  (1)*s(P82) + (1)*s(P83) + (0.1765)*s(P84) + (1)*s(P85) + (1)*s(P86) + (1)*s(P132) + (0)*techMat(E94,P92) + (0)*techMat(E97,P92) =E= 0 ; (LHS = 0)
     

---- eqs4  =E=  

eqs4..  (1)*s(P82) + (1)*s(P83) + (1)*s(P84) + (0.1765)*s(P85) + (1)*s(P86) + (1)*s(P132) + (0)*techMat(E95,P92) + (0)*techMat(E97,P92) =E= 0 ; (LHS = 0)
     

---- eqs5  =E=  

eqs5..  (1)*s(P82) + (1)*s(P83) + (1)*s(P84) + (1)*s(P85) + (0.1765)*s(P86) + (1)*s(P132) + (0)*techMat(E96,P92) + (0)*techMat(E97,P92) =E= 0 ; (LHS = 0)
     

---- eqs6  =E=  

eqs6..  (1)*s(P82) + (1)*s(P83) + (1)*s(P84) + (1)*s(P85) + (1)*s(P86) + (0.1765)*s(P132) + (0)*techMat(E97,P92) + (0)*techMat(E128,P92) =E= 0 ; (LHS = 0)
     

---- eqs7  =E=  

eqs7..  - (4.1175)*s(P92) + 907.18*s(P106) + (0)*techMat(E97,P92) =E= 0 ; (LHS = 0)
     

---- eqnPchoiceitems  =E=  

eqnPchoiceitems(E84)..  (20)*s(P87) + (0)*techMat(E84,P87) + pchoiceitems(E84) =E= 0 ; (LHS = 0)
     
eqnPchoiceitems(E85)..  (30)*s(P87) + (0)*techMat(E85,P87) + pchoiceitems(E85) =E= 0 ; (LHS = 0)
     
eqnPchoiceitems(E86)..  (20)*s(P87) + (0)*techMat(E86,P87) + pchoiceitems(E86) =E= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- costInput  =E=  

costInput..  - 808.080808080808*techMat(E92,P92) - 1000*techMat(E93,P92) - 1090.90909090909*techMat(E94,P92) - 1252.52525252525*techMat(E95,P92) - 2525.25252525253*techMat(E96,P92) - 449.49494949495*techMat(E128,P92) + normalizedcostInput =E= 0 ;
     
      (LHS = -7126.26262626263, INFES = 7126.26262626263 ****)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 431


---- pdtcost  =E=  

pdtcost..  (0)*s(P77) + (0)*s(P78) + (0)*s(P79) + (0)*s(P80) + (0)*s(P81) - 0.05*s(P82) - 0.05*s(P83) - 0.05*s(P84) - 0.05*s(P85) - 0.05*s(P86) - (0.05)*s(P132) + (0)*normalizedcostInput + productionCostResin =E= 0 ; (LHS = 0)
     

---- eql1  =E=  

eql1..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql2  =E=  

eql2..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql3  =E=  

eql3..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql4  =E=  

eql4..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql5  =E=  

eql5..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql6  =E=  

eql6..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P98) + (0)*s(P99) + (0)*s(P100) + (0)*s(P101) + (0)*s(P102) + (0)*s(P132) + (0)*s(P136) =E= 0 ; (LHS = 0)
     

---- eql7  =E=  

eql7..  - 5*s(P98) - 5*s(P99) - 5*s(P100) - 5*s(P101) - 5*s(P102) + s(P103) - 5*s(P136) =E= 0 ; (LHS = 0)
     

---- loss_l  =E=  

loss_l..  - 907.18*s(P98) - 907.18*s(P99) - 907.18*s(P100) - 907.18*s(P101) - 907.18*s(P102) - 907.18*s(P136) + lossLandfill =E= 0 ; (LHS = 0)
     

---- eqi1  =E=  

eqi1..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 431


---- eqi2  =E=  

eqi2..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi3  =E=  

eqi3..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi4  =E=  

eqi4..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi5  =E=  

eqi5..  (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi6  =E=  

eqi6..  (0)*s(P32) + (0)*s(P82) + (0)*s(P83) + (0)*s(P84) + (0)*s(P85) + (0)*s(P86) + (0)*s(P108) + (0)*s(P109) + (0)*s(P110) + (0)*s(P111) + (0)*s(P112) + (0)*s(P132) + (0)*s(P137) =E= 0 ; (LHS = 0)
     

---- eqi7  =E=  

eqi7..  - 5*s(P108) - 5*s(P109) - 5*s(P110) - 5*s(P111) - 5*s(P112) + s(P114) - 5*s(P137) =E= 0 ; (LHS = 0)
     

---- loss_i  =E=  

loss_i..  - (670.356975581251)*s(P108) - (716.842044255556)*s(P109) - (732.080316307408)*s(P110) - (843.205081122581)*s(P111) - (875.4484402368)*s(P112) - (670.356975581251)*s(P118) - (716.842044255556)*s(P119) - (732.080316307408)*s(P120)
     
      - (843.205081122581)*s(P121) - (1562.84349558052)*s(P137) + (0)*techMat(E107,P108) + (0)*techMat(E107,P109) + (0)*techMat(E107,P110) + (0)*techMat(E107,P111) + (0)*techMat(E107,P112) + (0)*techMat(E107,P118) + (0)*techMat(E107,P119)
     
      + (0)*techMat(E107,P120) + (0)*techMat(E107,P121) + (0)*techMat(E107,P137) + lossIncineration =E= 0 ; (LHS = 0)
     

---- loss_b  =E=  

loss_b..  (0)*s(P115) + 0.101*s(P116) + (0)*s(P122) + (0)*s(P123) + (0)*s(P124) + (0)*s(P125) + (0)*techMat(E91,P115) + (0)*normalizedcostInput + (0)*lossBioFuel =E= 0 ; (LHS = 0)
     

---- cost_c  =E=  

cost_c..  - 27.38141394*s(P104) - 27.38141394*s(P105) - 27.38141394*s(P117) + costBenifitCompost =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 431


---- cc2  =E=  

cc2..  - 1240*s(P104) - 2500*s(P105) + cbc2 =E= 0 ; (LHS = 0)
     

---- loss_c  =E=  

loss_c..  (0)*s(P104) + (0)*s(P105) + (0)*s(P117) + (0)*costBenifitCompost + (0)*lossCompost =E= 0 ; (LHS = 0)
     

---- DoC_obj  =E=  

DoC_obj..  (0)*productionCostResin - costBenifitCompost + (0)*DoC - (1)*costRecycled - costIn - costPy - costCl - costLu =E= 0 ; (LHS = 0)
     

---- Cost_obj  =E=  

Cost_obj..  - 0.0496*s(P1) - 0.01624*s(P2) - 0.1766*s(P7) - 0.559977*s(P12) - 0.12996*s(P14) - 0.067*s(P17) - 0.37725*s(P18) - 0.067*s(P21) - 0.0287605*s(P26) - 0.1766*s(P39) - 110.2293*s(P42) - 0.12*s(P49) - 80*s(P52) - 0.13227*s(P57) - 0.022046*s(P58)
     
      - 0.020923*s(P59) - 3.0442E-8*s(P76) + costBenifitCompost + Cost =E= 0 ; (LHS = 0)
     

---- Cost_obj1  =E=  

Cost_obj1..  0.11*pchoiceitems(E84) + 0.18*pchoiceitems(E85) + 0.6*pchoiceitems(E86) + 0.14*pchoiceitems(E87) + 0.1*pchoiceitems(E88) + CostBag =E= 0 ; (LHS = 0)
     

---- costRecycled1  =E=  

costRecycled1..  - 0.495*s(P93) - 0.5445*s(P94) - 0.594*s(P95) - 0.186*s(P96) + 0.90718*costRecycled =E= 0 ; (LHS = 0)
     

---- costIn1  =E=  

costIn1..  - (208.843249999999)*s(P108) - (207.714649999999)*s(P109) - (208.456599999999)*s(P110) - (87.4455999999997)*s(P111) - (87.4455999999997)*s(P112) - (208.843249999999)*s(P118) - (207.714649999999)*s(P119) - (208.456599999999)*s(P120)
     
      - (87.4455999999997)*s(P121) - (123.376666666667)*s(P137) + (0)*techMat(E107,P108) + (0)*techMat(E107,P109) + (0)*techMat(E107,P110) + (0)*techMat(E107,P111) + (0)*techMat(E107,P112) + (0)*techMat(E107,P118) + (0)*techMat(E107,P119)
     
      + (0)*techMat(E107,P120) + (0)*techMat(E107,P121) + (0)*techMat(E107,P137) + costIn =E= 0 ; (LHS = 0)
     

---- costPy1  =E=  

costPy1..  - 0.101*s(P116) + costPy =E= 0 ; (LHS = 0)
     

---- costCl1  =E=  

costCl1..  - 0.034*s(P129) + costCl =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 431


---- costLu1  =E=  

costLu1..  - 0.036*s(P130) + costLu =E= 0 ; (LHS = 0)
     

---- totmassproduced  =E=  

totmassproduced(P82)..  - s(P82) + (0)*pchoicemass(P82) + (0)*totpdtmass =E= 0 ; (LHS = 0)
     
totmassproduced(P83)..  - s(P83) + (0)*pchoicemass(P83) + (0)*totpdtmass =E= 0 ; (LHS = 0)
     
totmassproduced(P84)..  - s(P84) + (0)*pchoicemass(P84) + (0)*totpdtmass =E= 0 ; (LHS = 0)
     
REMAINING 3 ENTRIES SKIPPED


---- eqtotpdtmass  =E=  

eqtotpdtmass..  - s(P82) - s(P83) - s(P84) - s(P85) - s(P86) - s(P132) + totpdtmass =E= 0 ; (LHS = 0)
     

---- eqw1  =E=  

eqw1..  - (0.8235)*s(P92) + (0)*techMat(E97,P92) + wasteMgmtValues(Reprocess) =E= 0 ; (LHS = 0)
     

---- eqw2  =E=  

eqw2..  - (0.138916666666667)*s(P115) + (0)*techMat(E91,P115) + (0)*techMat(E97,P115) + wasteMgmtValues(Pyrolysis) =E= 0 ; (LHS = 0)
     

---- eqw3  =E=  

eqw3..  - (857.18)*s(P98) - (857.18)*s(P99) - (857.18)*s(P100) - (857.18)*s(P101) - (857.18)*s(P102) - 907.18*s(P113) + 45*s(P114) - (877.18)*s(P136) + (0)*techMat(E97,P98) + (0)*techMat(E97,P99) + (0)*techMat(E97,P100) + (0)*techMat(E97,P101)
     
      + (0)*techMat(E97,P102) + (0)*techMat(E97,P136) + wasteMgmtValues(Landfill) =E= 0 ; (LHS = 0)
     

---- eqw4  =E=  

eqw4..  - (897.18)*s(P108) - (897.18)*s(P109) - (897.18)*s(P110) - (897.18)*s(P111) - (897.18)*s(P112) - (897.18)*s(P118) - (897.18)*s(P119) - (897.18)*s(P120) - (897.18)*s(P121) - (1754.36)*s(P137) + (0)*techMat(E97,P108) + (0)*techMat(E97,P109)
     
      + (0)*techMat(E97,P110) + (0)*techMat(E97,P111) + (0)*techMat(E97,P112) + (0)*techMat(E97,P118) + (0)*techMat(E97,P119) + (0)*techMat(E97,P120) + (0)*techMat(E97,P121) + (0)*techMat(E97,P137) + wasteMgmtValues(Incineration) =E= 0 ; (LHS = 0)
     

---- impactValues  =E=  

impactValues(I1)..  0.73*s(P12) + g(I1) =E= 0 ; (LHS = 0)
     
impactValues(I2)..  - 0.000265*s(P12) + g(I2) =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 431


     impactValues  =E=  

impactValues(I3)..  - 4E-6*s(P2) - 0.000405*s(P12) - 4E-6*s(P26) - 0.167*s(P42) - 0.45359*s(P46) - 3.5E-5*s(P52) - 4E-6*s(P59) - 2.1E-5*s(P66) - 3.5E-5*s(P71) - 4E-6*s(P76) + g(I3) =E= 0 ; (LHS = 0)
     
REMAINING 2910 ENTRIES SKIPPED


---- eqMPI  =E=  

eqMPI(MPI1)..  - 0.01*g(I3) - 3.45*g(I10) - 3.45*g(I30) - 0.01*g(I40) - 0.2*g(I105) - 7.04*g(I139) - 3.45*g(I172) - 0.01*g(I192) - 3.45*g(I212) - 7.04*g(I236) - 0.2*g(I388) - 0.2*g(I389) - 0.2*g(I631) - 0.01*g(I708) - 7.04*g(I712) - 7.04*g(I742)
     
      - 7.04*g(I839) - 0.2*g(I890) - 3.45*g(I895) - 7.04*g(I1016) - 0.2*g(I1023) - 3.45*g(I1059) - 7.04*g(I1137) - 7.04*g(I1227) - 7.04*g(I1293) - 3.45*g(I1304) - 0.01*g(I1415) - 3.45*g(I1454) - 0.2*g(I1471) - 3.45*g(I1491) - 0.01*g(I1512) - 3.45*g(I1557)
     
      - 0.2*g(I1596) - 7.04*g(I1678) - 7.04*g(I1724) - 7.04*g(I1730) - 0.2*g(I1868) - 0.01*g(I1883) - 0.2*g(I1922) - 7.04*g(I1929) - 3.45*g(I2056) - 0.2*g(I2193) - 0.2*g(I2235) - 7.04*g(I2303) - 0.01*g(I2314) - 7.04*g(I2518) - 3.45*g(I2552)
     
      - 7.04*g(I2649) - 7.04*g(I2661) - 7.04*g(I2711) - 0.2*g(I2731) - 3.45*g(I2733) - 0.01*g(I2756) - 3.45*g(I2852) - 3.45*g(I2854) + mp_indicators(MPI1) =E= 0 ; (LHS = 0)
     
eqMPI(MPI2)..  - 0.01*g(I101) - 0.63*g(I108) - 0.63*g(I124) - 0.63*g(I163) - 0.63*g(I277) - 0.63*g(I372) - 0.63*g(I384) - 0.01*g(I411) - 0.01*g(I509) - 0.63*g(I572) - 0.63*g(I593) - 0.01*g(I604) - 0.63*g(I624) - 0.63*g(I640) - 0.63*g(I692) - 0.01*g(I705)
     
      - 0.01*g(I720) - 0.01*g(I752) - 0.63*g(I758) - 0.01*g(I856) - 0.63*g(I913) - 0.01*g(I986) - 0.63*g(I994) - 0.01*g(I1051) - 0.63*g(I1118) - 0.63*g(I1208) - 0.01*g(I1236) - 0.01*g(I1257) - 0.01*g(I1349) - 0.01*g(I1679) - 0.63*g(I1709) - 0.01*g(I1760)
     
      - 0.01*g(I1860) - 0.01*g(I1944) - 0.63*g(I1966) - 0.63*g(I1984) - 0.63*g(I2037) - 0.63*g(I2063) - 0.63*g(I2083) - 0.01*g(I2093) - 0.63*g(I2199) - 0.01*g(I2201) - 0.63*g(I2226) - 0.01*g(I2229) - 0.01*g(I2237) - 0.63*g(I2290) - 0.01*g(I2293)
     
      - 0.01*g(I2310) - 0.01*g(I2464) - 0.01*g(I2474) - 0.63*g(I2503) - 0.63*g(I2583) - 0.63*g(I2663) - 0.63*g(I2664) - 0.63*g(I2685) - 0.63*g(I2746) - 0.63*g(I2791) - 0.01*g(I2862) + mp_indicators(MPI2) =E= 0 ; (LHS = 0)
     
eqMPI(MPI3)..  - 0.22*g(I10) - 0.22*g(I30) - 0.22*g(I172) - 0.22*g(I212) - 0.22*g(I895) - 0.22*g(I1059) - 0.22*g(I1304) - 0.22*g(I1454) - 0.22*g(I1491) - 0.22*g(I1557) - 0.22*g(I2056) - 0.22*g(I2552) - 0.22*g(I2733) - 0.22*g(I2852) - 0.22*g(I2854)
     
      + mp_indicators(MPI3) =E= 0 ; (LHS = 0)
     
REMAINING 7 ENTRIES SKIPPED


---- eq_gwp  =E=  

eq_gwp..  0.15*s(P116) - mp_indicators(MPI4) + gwp =E= 0 ; (LHS = 0)
     

---- addCons1  =E=  

                NONE


---- addCons2  =E=  

                NONE


---- addCons3  =G=  

                NONE

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE ToyProblem Using NLP From line 431


---- eps1  =E=  

eps1..  - DoC + EPS*slack1 + EPS*slack2 + epsObj =E= 0 ; (LHS = 0)
     
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 23
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


---- s  scaling factors

s(P1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
      (-1)      processLCA(E1)
       (0)      processLCA(E2)
       (0)      processLCA(E3)
       (0)      processLCA(E4)
       (0)      processLCA(E5)
       (0)      processLCA(E6)
       (0)      processLCA(E7)
 (8.3600000E-7) processLCA(E8)
       (0)      processLCA(E9)
       (0.0004) processLCA(E10)
       (0)      processLCA(E11)
       (0)      processLCA(E12)
       (0)      processLCA(E13)
       (0)      processLCA(E14)
       (0)      processLCA(E15)
 (8.7000000E-7) processLCA(E16)
       (0)      processLCA(E17)
       (0)      processLCA(E18)
       (0)      processLCA(E19)
       (0)      processLCA(E20)
       (0.1393) processLCA(E21)
       (0.0002) processLCA(E22)
       (0)      processLCA(E23)
       (0)      processLCA(E24)
       (0)      processLCA(E25)
       (0)      processLCA(E26)
       (0)      processLCA(E27)
       (0)      processLCA(E28)
       (0)      processLCA(E29)
       (0)      processLCA(E30)
       (0)      processLCA(E31)
       (0)      processLCA(E32)
       (0)      processLCA(E33)
       (0)      processLCA(E34)
       (0)      processLCA(E35)
       (0)      processLCA(E36)
       (0)      processLCA(E37)
       (0)      processLCA(E38)
       (0)      processLCA(E39)
 (8.8000000E-6) processLCA(E40)
       (0)      processLCA(E41)
       (0)      processLCA(E42)
       (0)      processLCA(E43)
       (0)      processLCA(E44)
       (0)      processLCA(E45)
       (0)      processLCA(E46)
       (0)      processLCA(E47)
       (0)      processLCA(E48)
       (0)      processLCA(E49)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 24
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


     s  scaling factors

       (0)      processLCA(E50)
       (0)      processLCA(E51)
       (0)      processLCA(E52)
       (0)      processLCA(E53)
       (0)      processLCA(E54)
       (0)      processLCA(E55)
       (0)      processLCA(E56)
       (0)      processLCA(E57)
       (0)      processLCA(E58)
       (0)      processLCA(E59)
       (0)      processLCA(E60)
       (0)      processLCA(E61)
       (0)      processLCA(E62)
       (0)      processLCA(E63)
       (0)      processLCA(E64)
       (0)      processLCA(E65)
       (0)      processLCA(E66)
       (0)      processLCA(E67)
       (0)      processLCA(E68)
       (0)      processLCA(E69)
       (0)      processLCA(E70)
       (0)      processLCA(E71)
       (0)      processLCA(E72)
       (0)      processLCA(E73)
       (0)      processLCA(E74)
       (0)      processLCA(E75)
       (0)      processLCA(E76)
       (0)      processLCA(E77)
       (0)      processLCA(E78)
       (0)      processLCA(E79)
       (0)      processLCA(E80)
       (0)      processLCA(E81)
       (0)      processLCA(E82)
       (0)      processLCA(E83)
       (0)      processLCA(E84)
       (0)      processLCA(E85)
       (0)      processLCA(E86)
       (0)      processLCA(E87)
       (0)      processLCA(E88)
       (0)      processLCA(E89)
       (0)      processLCA(E90)
       (0)      processLCA(E91)
       (0)      processLCA(E92)
       (0)      processLCA(E93)
       (0)      processLCA(E94)
       (0)      processLCA(E95)
       (0)      processLCA(E96)
       (0)      processLCA(E97)
       (0)      processLCA(E98)
       (0)      processLCA(E99)
       (0)      processLCA(E100)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 25
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


     s  scaling factors

       (0)      processLCA(E101)
       (0)      processLCA(E102)
       (0)      processLCA(E103)
       (0)      processLCA(E104)
       (0)      processLCA(E105)
       (0)      processLCA(E106)
       (0)      processLCA(E107)
       (0)      processLCA(E108)
       (0)      processLCA(E109)
       (0)      processLCA(E110)
       (0)      processLCA(E111)
       (0)      processLCA(E112)
       (0)      processLCA(E113)
       (0)      processLCA(E114)
       (0)      processLCA(E115)
       (0)      processLCA(E116)
       (0)      processLCA(E117)
       (0)      processLCA(E118)
       (0)      processLCA(E119)
       (0)      processLCA(E120)
       (0)      processLCA(E121)
       (0)      processLCA(E122)
       (0)      processLCA(E123)
       (0)      processLCA(E124)
       (0)      processLCA(E125)
       (0)      processLCA(E126)
       (0)      processLCA(E127)
       (0)      processLCA(E128)
       (0)      processLCA(E129)
       (0)      processLCA(E130)
       (0)      processLCA(E131)
       -0.0496  Cost_obj
       -0.004   impactValues(I6)
  -2.600000E-5  impactValues(I13)
       -0.0001  impactValues(I49)
       -0.0016  impactValues(I125)
  -6.000000E-6  impactValues(I158)
        1.24    impactValues(I159)
  -9.000000E-6  impactValues(I160)
        0.235   impactValues(I1473)

s(P2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      processLCA(E1)
      (-0.0003) processLCA(E2)
       (0)      processLCA(E3)
       (0)      processLCA(E4)
       (0)      processLCA(E5)
 (1.1492253E-6) processLCA(E6)
       (0)      processLCA(E7)
       (0)      processLCA(E8)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 26
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


     s  scaling factors

       (0.6522) processLCA(E9)
       (0)      processLCA(E10)
       (0)      processLCA(E11)
       (0)      processLCA(E12)
       (0)      processLCA(E13)
       (0)      processLCA(E14)
       (0)      processLCA(E15)
 (2.7229757E-5) processLCA(E16)
       (0.5152) processLCA(E17)
       (1.0185) processLCA(E18)
       (0)      processLCA(E19)
       (0)      processLCA(E20)
       (0)      processLCA(E21)
       (0.0111) processLCA(E22)
       (0)      processLCA(E23)
       (0)      processLCA(E24)
       (0)      processLCA(E25)
       (0)      processLCA(E26)
       (0)      processLCA(E27)
       (0)      processLCA(E28)
       (0)      processLCA(E29)
       (0)      processLCA(E30)
       (0)      processLCA(E31)
       (0)      processLCA(E32)
       (0)      processLCA(E33)
       (0)      processLCA(E34)
       (0)      processLCA(E35)
       (0)      processLCA(E36)
       (0.001)  processLCA(E37)
       (0.0003) processLCA(E38)
       (0)      processLCA(E39)
       (0)      processLCA(E40)
       (0)      processLCA(E41)
       (0)      processLCA(E42)
       (0)      processLCA(E43)
       (0)      processLCA(E44)
       (0)      processLCA(E45)
       (0)      processLCA(E46)
       (0)      processLCA(E47)
       (0)      processLCA(E48)
       (0)      processLCA(E49)
       (0)      processLCA(E50)
       (0)      processLCA(E51)
       (0)      processLCA(E52)
       (0)      processLCA(E53)
       (0)      processLCA(E54)
       (0)      processLCA(E55)
       (0)      processLCA(E56)
       (0)      processLCA(E57)
       (0)      processLCA(E58)
       (0)      processLCA(E59)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 27
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


     s  scaling factors

       (0)      processLCA(E60)
       (0)      processLCA(E61)
       (0)      processLCA(E62)
       (0)      processLCA(E63)
       (0)      processLCA(E64)
       (0)      processLCA(E65)
       (0)      processLCA(E66)
       (0)      processLCA(E67)
       (0)      processLCA(E68)
       (0)      processLCA(E69)
       (0)      processLCA(E70)
       (0)      processLCA(E71)
       (0)      processLCA(E72)
       (0)      processLCA(E73)
       (0)      processLCA(E74)
       (0)      processLCA(E75)
       (0)      processLCA(E76)
       (0)      processLCA(E77)
       (0)      processLCA(E78)
       (0)      processLCA(E79)
       (0)      processLCA(E80)
       (0)      processLCA(E81)
       (0)      processLCA(E82)
       (0)      processLCA(E83)
       (0)      processLCA(E84)
       (0)      processLCA(E85)
       (0)      processLCA(E86)
       (0)      processLCA(E87)
       (0)      processLCA(E88)
       (0)      processLCA(E89)
       (0)      processLCA(E90)
       (0)      processLCA(E91)
       (0)      processLCA(E92)
       (0)      processLCA(E93)
       (0)      processLCA(E94)
       (0)      processLCA(E95)
       (0)      processLCA(E96)
       (0)      processLCA(E97)
       (0)      processLCA(E98)
       (0)      processLCA(E99)
       (0)      processLCA(E100)
       (0)      processLCA(E101)
       (0)      processLCA(E102)
       (0)      processLCA(E103)
       (0)      processLCA(E104)
       (0)      processLCA(E105)
       (0)      processLCA(E106)
       (0)      processLCA(E107)
       (0)      processLCA(E108)
       (0)      processLCA(E109)
       (0)      processLCA(E110)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 28
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


     s  scaling factors

       (0)      processLCA(E111)
       (0)      processLCA(E112)
       (0)      processLCA(E113)
       (0)      processLCA(E114)
       (0)      processLCA(E115)
       (0)      processLCA(E116)
       (0)      processLCA(E117)
       (0)      processLCA(E118)
       (0)      processLCA(E119)
       (0)      processLCA(E120)
       (0)      processLCA(E121)
       (0)      processLCA(E122)
       (0)      processLCA(E123)
       (0)      processLCA(E124)
       (0)      processLCA(E125)
       (0)      processLCA(E126)
       (0)      processLCA(E127)
       (0)      processLCA(E128)
       (0)      processLCA(E129)
       (0)      processLCA(E130)
       (0)      processLCA(E131)
       -0.0162  Cost_obj
  -4.000000E-6  impactValues(I3)
       -0.0004  impactValues(I4)
       -0.0004  impactValues(I10)
  -2.800000E-5  impactValues(I49)
  -1.000000E-6  impactValues(I90)
  -1.100000E-5  impactValues(I91)
  -3.700000E-5  impactValues(I109)
       -0.0003  impactValues(I146)
       -0.0002  impactValues(I176)
       -0.0007  impactValues(I179)
  -2.300000E-5  impactValues(I182)
  -3.400000E-5  impactValues(I185)
        0.0056  impactValues(I186)
        0.4899  impactValues(I190)
  -3.100000E-5  impactValues(I191)
  -1.500000E-5  impactValues(I192)
        4.4089  impactValues(I194)
       -0.0002  impactValues(I1468)

s(P3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      processLCA(E1)
       (0)      processLCA(E2)
    (-907.18)   processLCA(E3)
       (0)      processLCA(E4)
       (0)      processLCA(E5)
       (0)      processLCA(E6)
       (0)      processLCA(E7)
       (0)      processLCA(E8)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 29
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


     s  scaling factors

       (0)      processLCA(E9)
       (0)      processLCA(E10)
       (0)      processLCA(E11)
       (0)      processLCA(E12)
       (0)      processLCA(E13)
       (0)      processLCA(E14)
       (0)      processLCA(E15)
       (0)      processLCA(E16)
       (0)      processLCA(E17)
       (0)      processLCA(E18)
       (0)      processLCA(E19)
       (0)      processLCA(E20)
       (0)      processLCA(E21)
       (0)      processLCA(E22)
       (0)      processLCA(E23)
       (0)      processLCA(E24)
       (0)      processLCA(E25)
       (0)      processLCA(E26)
       (0)      processLCA(E27)
       (0)      processLCA(E28)
       (0)      processLCA(E29)
       (0)      processLCA(E30)
       (0)      processLCA(E31)
     (335.16)   processLCA(E32)
       (0)      processLCA(E33)
       (0)      processLCA(E34)
       (0)      processLCA(E35)
       (0)      processLCA(E36)
       (0)      processLCA(E37)
       (0)      processLCA(E38)
       (0)      processLCA(E39)
       (0)      processLCA(E40)
       (0)      processLCA(E41)
       (0)      processLCA(E42)
       (0)      processLCA(E43)
       (0)      processLCA(E44)
       (0)      processLCA(E45)
       (0)      processLCA(E46)
       (0)      processLCA(E47)
       (0)      processLCA(E48)
       (0)      processLCA(E49)
       (0)      processLCA(E50)
       (0)      processLCA(E51)
       (0)      processLCA(E52)
       (0)      processLCA(E53)
       (0)      processLCA(E54)
       (0)      processLCA(E55)
       (0)      processLCA(E56)
       (0)      processLCA(E57)
       (0)      processLCA(E58)
       (0)      processLCA(E59)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 30
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


     s  scaling factors

       (0)      processLCA(E60)
       (0)      processLCA(E61)
       (0)      processLCA(E62)
       (0)      processLCA(E63)
       (0)      processLCA(E64)
       (0)      processLCA(E65)
       (0)      processLCA(E66)
       (0)      processLCA(E67)
       (0)      processLCA(E68)
       (0)      processLCA(E69)
       (0)      processLCA(E70)
       (0)      processLCA(E71)
       (0)      processLCA(E72)
       (0)      processLCA(E73)
       (0)      processLCA(E74)
       (0)      processLCA(E75)
       (0)      processLCA(E76)
       (0)      processLCA(E77)
       (0)      processLCA(E78)
       (0)      processLCA(E79)
       (0)      processLCA(E80)
       (0)      processLCA(E81)
       (0)      processLCA(E82)
       (0)      processLCA(E83)
       (0)      processLCA(E84)
       (0)      processLCA(E85)
       (0)      processLCA(E86)
       (0)      processLCA(E87)
       (0)      processLCA(E88)
       (0)      processLCA(E89)
       (0)      processLCA(E90)
       (0)      processLCA(E91)
       (0)      processLCA(E92)
       (0)      processLCA(E93)
       (0)      processLCA(E94)
       (0)      processLCA(E95)
       (0)      processLCA(E96)
       (0)      processLCA(E97)
       (0)      processLCA(E98)
       (0)      processLCA(E99)
       (0)      processLCA(E100)
       (0)      processLCA(E101)
       (0)      processLCA(E102)
       (0)      processLCA(E103)
       (0)      processLCA(E104)
       (0)      processLCA(E105)
       (0)      processLCA(E106)
       (0)      processLCA(E107)
       (0)      processLCA(E108)
       (0)      processLCA(E109)
       (0)      processLCA(E110)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 31
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


     s  scaling factors

       (0)      processLCA(E111)
       (0)      processLCA(E112)
       (0)      processLCA(E113)
       (0)      processLCA(E114)
       (0)      processLCA(E115)
       (0)      processLCA(E116)
       (0)      processLCA(E117)
       (0)      processLCA(E118)
       (0)      processLCA(E119)
       (0)      processLCA(E120)
       (0)      processLCA(E121)
       (0)      processLCA(E122)
       (0)      processLCA(E123)
       (0)      processLCA(E124)
       (0)      processLCA(E125)
       (0)      processLCA(E126)
       (0)      processLCA(E127)
       (0)      processLCA(E128)
       (0)      processLCA(E129)
       (0)      processLCA(E130)
       (0)      processLCA(E131)
       -8.9993  impactValues(I7)

REMAINING 134 ENTRIES SKIPPED

---- f  final demand

f(E1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       processLCA(E1)
        1       zeroIntermediates(E1)

f(E2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       processLCA(E2)
        1       zeroIntermediates(E2)

f(E3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       processLCA(E3)
        1       zeroIntermediates(E3)

REMAINING 128 ENTRIES SKIPPED

---- techMat  

techMat(E1,P1)
                (.LO, .L, .UP, .M = 1, 1, 1, 0)
       (0)      processLCA(E1)

techMat(E1,P2)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 32
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


     techMat  

                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      processLCA(E1)

techMat(E1,P3)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      processLCA(E1)

REMAINING 17944 ENTRIES SKIPPED

---- pchoiceitems  

pchoiceitems(E84)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqnPchoiceitems(E84)
        0.11    Cost_obj1

pchoiceitems(E85)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqnPchoiceitems(E85)
        0.18    Cost_obj1

pchoiceitems(E86)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqnPchoiceitems(E86)
        0.6     Cost_obj1

REMAINING 3 ENTRIES SKIPPED

---- normalizedcostInput  

normalizedcostInput
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       costInput
       (0)      pdtcost
       (0)      loss_b


---- productionCostResin  

productionCostResin
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       pdtcost
       (0)      DoC_obj


---- lossLandfill  

lossLandfill
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       loss_l

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 33
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


---- lossIncineration  

lossIncineration
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       loss_i


---- lossBioFuel  

lossBioFuel
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      loss_b


---- costBenifitCompost  

costBenifitCompost
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       cost_c
       (0)      loss_c
       -1       DoC_obj
        1       Cost_obj


---- cbc2  

cbc2
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       cc2


---- lossCompost  

lossCompost
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      loss_c


---- DoC  

DoC
                (.LO, .L, .UP, .M = 0, 0, 2, 0)
       (0)      DoC_obj
       -1       eps1


---- Cost  

Cost
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Cost_obj

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 34
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


---- CostBag  

CostBag
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Cost_obj1


---- costRecycled  

costRecycled
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
      (-1)      DoC_obj
        0.9072  costRecycled1


---- costIn  

costIn
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       costIn1


---- costPy  

costPy
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       costPy1


---- costCl  

costCl
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       costCl1


---- costLu  

costLu
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       -1       DoC_obj
        1       costLu1


---- pchoicemass  

pchoicemass(P82)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      totmassproduced(P82)

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 35
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


     pchoicemass  

pchoicemass(P83)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      totmassproduced(P83)

pchoicemass(P84)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      totmassproduced(P84)

REMAINING 3 ENTRIES SKIPPED

---- totpdtmass  

totpdtmass
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
       (0)      totmassproduced(P82)
       (0)      totmassproduced(P83)
       (0)      totmassproduced(P84)
       (0)      totmassproduced(P85)
       (0)      totmassproduced(P86)
       (0)      totmassproduced(P132)
        1       eqtotpdtmass


---- wasteMgmtValues  

wasteMgmtValues(Reprocess)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqw1

wasteMgmtValues(Pyrolysis)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqw2

wasteMgmtValues(Landfill)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqw3

REMAINING ENTRY SKIPPED

---- g  

g(I1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       impactValues(I1)

g(I2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       impactValues(I2)

g(I3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 36
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE ToyProblem Using NLP From line 431


     g  

        1       impactValues(I3)
       -0.01    eqMPI(MPI1)

REMAINING 2910 ENTRIES SKIPPED

---- mp_indicators  

mp_indicators(MPI1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqMPI(MPI1)

mp_indicators(MPI2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqMPI(MPI2)

mp_indicators(MPI3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eqMPI(MPI3)

REMAINING 7 ENTRIES SKIPPED

---- gwp  

gwp
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eq_gwp


---- slack1  

slack1
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
           EPS  eps1


---- slack2  

slack2
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
           EPS  eps1


---- epsObj  

epsObj
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       eps1

GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 37
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE ToyProblem Using NLP From line 431


MODEL STATISTICS

BLOCKS OF EQUATIONS          55     SINGLE EQUATIONS        3,220
BLOCKS OF VARIABLES          29     SINGLE VARIABLES       21,175
NON ZERO ELEMENTS        41,982     NON LINEAR N-Z         36,222
DERIVATIVE POOL              20     CONSTANT POOL              34
CODE LENGTH              54,806


GENERATION TIME      =        0.042 SECONDS      9 MB  24.7.4 r58773 LEX-LEG


EXECUTION TIME       =        0.070 SECONDS      9 MB  24.7.4 r58773 LEX-LEG
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 38
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE ToyProblem Using NLP From line 431


               S O L V E      S U M M A R Y

     MODEL   ToyProblem          OBJECTIVE  gwp
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  BARON               FROM LINE  431

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      19 Infeasible - No Solution 
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          1.910      1000.000
 ITERATION COUNT, LIMIT        NA    2000000000
 EVALUATION ERRORS              0             0

GAMS/BARON       24.7.4 r58773 Released Sep 19, 2016 LEG x86 64bit/Linux      

BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
Parts of the BARON software were created at the
University of Illinois at Urbana-Champaign.


===========================================================================
 BARON version 16.8.24. Built: LNX-64 Wed Aug 24 08:52:24 EDT 2016

 If you use this software, please cite:
 Tawarmalani, M. and N. V. Sahinidis, A polyhedral
 branch-and-cut approach to global optimization,
 Mathematical Programming, 103(2), 225-249, 2005.

 BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
 Parts of the BARON software were created at the
 University of Illinois at Urbana-Champaign.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP: ILOG CPLEX                                      
 For NLP: MINOS, SNOPT, GAMS external NLP, IPOPT, FILTERSD
===========================================================================

No solution returned
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 39
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    475 VARIABLE pchoiceitems.L  

                      ( ALL       0.000 )


----    475 VARIABLE pchoicemass.L  

                      ( ALL       0.000 )


----    475 VARIABLE wasteMgmtValues.L  

                      ( ALL       0.000 )


----    476 VARIABLE DoC.L                 =        0.000  

----    477 VARIABLE Cost.L                =        0.000  

----    478 VARIABLE s.L  scaling factors

                      ( ALL       0.000 )


----    479 VARIABLE g.L  

                      ( ALL       0.000 )


----    480 VARIABLE cbc2.L                =        0.000  
            VARIABLE costBenifitCompost.L  =        0.000  
            VARIABLE lossCompost.L         =        0.000  
            VARIABLE lossIncineration.L    =        0.000  
            VARIABLE lossBioFuel.L         =        0.000  
            VARIABLE lossLandfill.L        =        0.000  

----    481 VARIABLE productionCostResin.L =        0.000  

----    482 VARIABLE mp_indicators.L  

                      ( ALL       0.000 )

**** Exec Error at line 514: division by zero (0)
**** Exec Error at line 515: division by zero (0)
**** Exec Error at line 519: division by zero (0)
**** Exec Error at line 520: division by zero (0)
**** Exec Error at line 522: division by zero (0)
**** Exec Error at line 523: division by zero (0)
**** Exec Error at line 527: division by zero (0)
**** Exec Error at line 528: division by zero (0)

----    574 PARAMETER recyclevalLDPE       =        0.000  
            PARAMETER recyclevalHDPE       =        0.000  
GAMS 24.7.4  r58773 Released Sep 19, 2016 LEX-LEG x86 64bit/Linux                                                                                                                                                                     10/21/21 17:30:24 Page 40
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


            PARAMETER recyclevalPP         =        0.000  
            PARAMETER recyclevalPLA        =        0.000  

----    601 VARIABLE cD.L  

                      Pyrolysis    Landfill  Incinerat~  Segregati~

Curbside Collection        UNDF        UNDF        UNDF        UNDF
Dropoff                    UNDF        UNDF        UNDF        UNDF


**** REPORT FILE SUMMARY

pareto /home/thakker.8/Documents/project-codes/Design-SCE/pareto0.txt


EXECUTION TIME       =        6.844 SECONDS      5 MB  24.7.4 r58773 LEX-LEG


USER: Bhavik Bakshi, Single User License             G160607:0939AO-LNX
      The Ohio State University, Chemical and Biomolecular EnginDC12543
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/thakker.8/Documents/project-codes/Design-SCE/RP4.gms
Output     /home/thakker.8/Documents/project-codes/Design-SCE/RP4.lst

**** USER ERROR(S) ENCOUNTERED
